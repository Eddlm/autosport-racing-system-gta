<?xml version="1.0"?>
<doc>
    <members>
        <member name="T:GTA.Math.Matrix">
            <summary>
            Defines a 4x4 matrix.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M11">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and first column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M12">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and second column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M13">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and third column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M14">
            <summary>
            Gets or sets the element of the matrix that exists in the first row and fourth column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M21">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and first column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M22">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and second column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M23">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and third column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M24">
            <summary>
            Gets or sets the element of the matrix that exists in the second row and fourth column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M31">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and first column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M32">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and second column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M33">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and third column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M34">
            <summary>
            Gets or sets the element of the matrix that exists in the third row and fourth column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M41">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and first column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M42">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and second column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M43">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and third column.
            </summary>
        </member>
        <member name="F:GTA.Math.Matrix.M44">
            <summary>
            Gets or sets the element of the matrix that exists in the fourth row and fourth column.
            </summary>
        </member>
        <member name="M:GTA.Math.Matrix.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:GTA.Math.Matrix"/> structure.
            </summary>
            <param name="values">The values to assign to the components of the matrix. This must be an array with sixteen elements.</param>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="values"/> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when <paramref name="values"/> contains more or less than sixteen elements.</exception>
        </member>
        <member name="P:GTA.Math.Matrix.Identity">
            <summary>
            The identity <see cref="T:GTA.Math.Matrix"/>.
            </summary>
        </member>
        <member name="P:GTA.Math.Matrix.Item(System.Int32,System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the matrix component, depending on the index.</value>
            <param name="row">The row of the matrix to access.</param>
            <param name="column">The column of the matrix to access.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="row"/> or <paramref name="column"/>is out of the range [0, 3].</exception>
        </member>
        <member name="M:GTA.Math.Matrix.FromArray(System.Single[])">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="P:GTA.Math.Matrix.IsIdentity">
            <summary>
            Gets a value indicating whether this instance is an identity matrix.
            </summary>
            <value>
            <see langword="true" /> if this instance is an identity matrix; otherwise, <see langword="false" />.
            </value>
        </member>
        <member name="P:GTA.Math.Matrix.HasInverse">
            <summary>
            Gets a value indicating whether this instance has an inverse matrix.
            </summary>
        </member>
        <member name="M:GTA.Math.Matrix.Determinant">
            <summary>
            Calculates the determinant of the matrix.
            </summary>
            <returns>The determinant of the matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Inverse">
            <summary>
            Inverts the matrix.
            </summary>
        </member>
        <member name="M:GTA.Math.Matrix.Add(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Determines the sum of two matrices.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Subtract(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Determines the difference between two matrices.
            </summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Multiply(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Determines the product of two matrices.
            </summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Multiply(GTA.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by the given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Divide(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Determines the quotient of two matrices.
            </summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Divide(GTA.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by the given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Negate(GTA.Math.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="matrix">The matrix to be negated.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Inverse(GTA.Math.Matrix)">
            <summary>
            Calculates the inverse of a matrix if it exists.
            </summary>
            <returns>The inverse of the matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Lerp(GTA.Math.Matrix,GTA.Math.Matrix,System.Single)">
            <summary>
            Performs a linear interpolation between two matrices.
            </summary>
            <param name="start">Start matrix.</param>
            <param name="end">End matrix.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two matrices.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:GTA.Math.Matrix.RotationX(System.Single)">
            <summary>
            Creates a matrix that rotates around the x-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.RotationY(System.Single)">
            <summary>
            Creates a matrix that rotates around the y-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.RotationZ(System.Single)">
            <summary>
            Creates a matrix that rotates around the z-axis.
            </summary>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.RotationAxis(GTA.Math.Vector3,System.Single)">
            <summary>
            Creates a matrix that rotates around an arbitrary axis.
            </summary>
            <param name="axis">The axis around which to rotate.</param>
            <param name="angle">Angle of rotation in radians. Angles are measured clockwise when looking along the rotation axis toward the origin.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.RotationQuaternion(GTA.Math.Quaternion)">
            <summary>
            Creates a rotation matrix from a rotation.
            </summary>
            <param name="rotation">The quaternion to use to build the matrix.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a rotation matrix with a specified yaw, pitch, and roll.
            </summary>
            <param name="yaw">Yaw around the y-axis, in radians.</param>
            <param name="pitch">Pitch around the x-axis, in radians.</param>
            <param name="roll">Roll around the z-axis, in radians.</param>
            <returns>The created rotation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Scaling(System.Single,System.Single,System.Single)">
            <summary>
            Creates a matrix that scales along the x-axis, y-axis, and y-axis.
            </summary>
            <param name="x">Scaling factor that is applied along the x-axis.</param>
            <param name="y">Scaling factor that is applied along the y-axis.</param>
            <param name="z">Scaling factor that is applied along the z-axis.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Scaling(GTA.Math.Vector3)">
            <summary>
            Creates a matrix that scales along the x-axis, y-axis, and y-axis.
            </summary>
            <param name="scale">Scaling factor for all three axes.</param>
            <returns>The created scaling matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Translation(System.Single,System.Single,System.Single)">
            <summary>
            Creates a translation matrix using the specified offsets.
            </summary>
            <param name="x">X-coordinate offset.</param>
            <param name="y">Y-coordinate offset.</param>
            <param name="z">Z-coordinate offset.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Translation(GTA.Math.Vector3)">
            <summary>
            Creates a translation matrix using the specified offsets.
            </summary>
            <param name="amount">The offset for all three coordinate planes.</param>
            <returns>The created translation matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Transpose(GTA.Math.Matrix)">
            <summary>
            Calculates the transpose of the specified matrix.
            </summary>
            <param name="matrix">The matrix whose transpose is to be calculated.</param>
            <returns>The transpose of the specified matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_UnaryNegation(GTA.Math.Matrix)">
            <summary>
            Negates a matrix.
            </summary>
            <param name="matrix">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Addition(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Adds two matrices.
            </summary>
            <param name="left">The first matrix to add.</param>
            <param name="right">The second matrix to add.</param>
            <returns>The sum of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Subtraction(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Subtracts two matrices.
            </summary>
            <param name="left">The first matrix to subtract.</param>
            <param name="right">The second matrix to subtract.</param>
            <returns>The difference between the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Division(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Divides two matrices.
            </summary>
            <param name="left">The first matrix to divide.</param>
            <param name="right">The second matrix to divide.</param>
            <returns>The quotient of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Division(GTA.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Multiplies two matrices.
            </summary>
            <param name="left">The first matrix to multiply.</param>
            <param name="right">The second matrix to multiply.</param>
            <returns>The product of the two matrices.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Multiply(GTA.Math.Matrix,System.Single)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="left">The matrix to scale.</param>
            <param name="right">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Multiply(System.Single,GTA.Math.Matrix)">
            <summary>
            Scales a matrix by a given value.
            </summary>
            <param name="right">The matrix to scale.</param>
            <param name="left">The amount by which to scale.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Equality(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.op_Inequality(GTA.Math.Matrix,GTA.Math.Matrix)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.ToArray">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="M:GTA.Math.Matrix.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Equals(GTA.Math.Matrix)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Matrix.Equals(GTA.Math.Matrix@,GTA.Math.Matrix@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns><see langword="true" /> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <see langword="null" /> references or if <c>value1.Equals(value2)</c> returns <see langword="true" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="F:GTA.Math.Quaternion.X">
            <summary>
            Gets or sets the X component of the quaternion.
            </summary>
            <value>The X component of the quaternion.</value>
        </member>
        <member name="F:GTA.Math.Quaternion.Y">
            <summary>
            Gets or sets the Y component of the quaternion.
            </summary>
            <value>The Y component of the quaternion.</value>
        </member>
        <member name="F:GTA.Math.Quaternion.Z">
            <summary>
            Gets or sets the Z component of the quaternion.
            </summary>
            <value>The Z component of the quaternion.</value>
        </member>
        <member name="F:GTA.Math.Quaternion.W">
            <summary>
            Gets or sets the W component of the quaternion.
            </summary>
            <value>The W component of the quaternion.</value>
        </member>
        <member name="M:GTA.Math.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GTA.Math.Quaternion"/> structure.
            </summary>
            <param name="x">The X component of the quaternion.</param>
            <param name="y">The Y component of the quaternion.</param>
            <param name="z">The Z component of the quaternion.</param>
            <param name="w">The W component of the quaternion.</param>
        </member>
        <member name="M:GTA.Math.Quaternion.#ctor(GTA.Math.Vector3,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GTA.Math.Quaternion"/> structure.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
        </member>
        <member name="P:GTA.Math.Quaternion.Identity">
            <summary>
            The identity <see cref="T:GTA.Math.Quaternion"/> (0, 0, 0, 1).
            </summary>
        </member>
        <member name="P:GTA.Math.Quaternion.Axis">
            <summary>
            Gets the axis components of the quaternion.
            </summary>
        </member>
        <member name="P:GTA.Math.Quaternion.Angle">
            <summary>
            Gets the angle of the quaternion.
            </summary>
        </member>
        <member name="M:GTA.Math.Quaternion.Length">
            <summary>
            Calculates the length of the quaternion.
            </summary>
            <returns>The length of the quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.LengthSquared">
            <summary>
            Calculates the squared length of the quaternion.
            </summary>
            <returns>The squared length of the quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Normalize">
            <summary>
            Converts the quaternion into a unit quaternion.
            </summary>
        </member>
        <member name="M:GTA.Math.Quaternion.Conjugate">
            <summary>
            Conjugates the quaternion.
            </summary>
        </member>
        <member name="M:GTA.Math.Quaternion.Invert">
            <summary>
            Conjugates and renormalizes the quaternion.
            </summary>
        </member>
        <member name="M:GTA.Math.Quaternion.Negate(GTA.Math.Quaternion)">
            <summary>
            Reverses the direction of a given quaternion.
            </summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Add(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Subtract(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Subtracts two quaternions.
            </summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Multiply(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Modulates a quaternion by another.
            </summary>
            <param name="left">The first quaternion to modulate.</param>
            <param name="right">The second quaternion to modulate.</param>
            <returns>The modulated quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Multiply(GTA.Math.Quaternion,System.Single)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Divide(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Divides a quaternion by another.
            </summary>
            <param name="left">The first quaternion to divide.</param>
            <param name="right">The second quaternion to divide.</param>
            <returns>The divided quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Normalize(GTA.Math.Quaternion)">
            <summary>
            Converts the quaternion into a unit quaternion.
            </summary>
            <param name="quaternion">The quaternion to normalize.</param>
            <returns>The normalized quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Conjugate(GTA.Math.Quaternion)">
            <summary>
            Creates the conjugate of a specified Quaternion.
            </summary>
            <param name="value">The Quaternion of which to return the conjugate.</param>
            <returns>A new Quaternion that is the conjugate of the specified one.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Invert(GTA.Math.Quaternion)">
            <summary>
            Conjugates and renormalizes the quaternion.
            </summary>
            <param name="quaternion">The quaternion to conjugate and re-normalize.</param>
            <returns>The conjugated and renormalized quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Dot(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Calculates the dot product of two quaternions.
            </summary>
            <param name="left">First source quaternion.</param>
            <param name="right">Second source quaternion.</param>
            <returns>The dot product of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Lerp(GTA.Math.Quaternion,GTA.Math.Quaternion,System.Single)">
            <summary>
            Performs a linear interpolation between two quaternion.
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two quaternions.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:GTA.Math.Quaternion.Slerp(GTA.Math.Quaternion,GTA.Math.Quaternion,System.Single)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation..
            </summary>
            <param name="start">Start quaternion.</param>
            <param name="end">End quaternion.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The spherical linear interpolation of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.SlerpUnclamped(GTA.Math.Quaternion,GTA.Math.Quaternion,System.Single)">
            <summary>
            Interpolates between two quaternions, using spherical linear interpolation. The parameter /t/ is not clamped.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="t"></param>
        </member>
        <member name="M:GTA.Math.Quaternion.FromToRotation(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Creates a rotation which rotates from fromDirection to toDirection.
            </summary>
        </member>
        <member name="M:GTA.Math.Quaternion.RotateTowards(GTA.Math.Quaternion,GTA.Math.Quaternion,System.Single)">
            <summary>
            Rotates a rotation from towards to.
            </summary>
            <param name="from">From Quaternion.</param>
            <param name="to">To Quaternion.</param>
            <param name ="maxDegreesDelta"></param>
        </member>
        <member name="M:GTA.Math.Quaternion.AngleBetween(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Returns the angle in degrees between two rotations a and b.
            </summary>
            <param name="a">The first quaternion to calculate angle.</param>
            <param name="b">The second quaternion to calculate angle.</param>
            <returns>The angle in degrees between two rotations a and b.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Euler(System.Single,System.Single,System.Single)">
            <summary>
            Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).
            </summary>
            <param name="zaxis">Z degrees.</param>
            <param name ="xaxis">X degrees.</param>
            <param name ="yaxis">Y degrees.</param>
        </member>
        <member name="M:GTA.Math.Quaternion.Euler(GTA.Math.Vector3)">
            <summary>
            Returns a rotation that rotates z degrees around the z axis, x degrees around the x axis, and y degrees around the y axis (in that order).
            </summary>
            <param name="euler">Euler angles in degrees. euler.X = around X axis, euler.Y = around Y axis, euler.Z = around Z axis</param>
        </member>
        <member name="M:GTA.Math.Quaternion.RotationAxis(GTA.Math.Vector3,System.Single)">
            <summary>
            Creates a quaternion given a rotation and an axis.
            </summary>
            <param name="axis">The axis of rotation.</param>
            <param name="angle">The angle of rotation in radians.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.RotationMatrix(GTA.Math.Matrix)">
            <summary>
            Creates a quaternion given a rotation matrix.
            </summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.RotationYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>
            Creates a Quaternion from the given yaw, pitch, and roll, in radians.
            </summary>
            <param name="yaw">The yaw angle, in radians, around the Z-axis.</param>
            <param name="pitch">The pitch angle, in radians, around the X-axis.</param>
            <param name="roll">The roll angle, in radians, around the Y-axis.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_UnaryNegation(GTA.Math.Quaternion)">
            <summary>
            Reverses the direction of a given quaternion.
            </summary>
            <param name="quaternion">The quaternion to negate.</param>
            <returns>A quaternion facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Addition(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Adds two quaternions.
            </summary>
            <param name="left">The first quaternion to add.</param>
            <param name="right">The second quaternion to add.</param>
            <returns>The sum of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Subtraction(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Subtracts two quaternions.
            </summary>
            <param name="left">The first quaternion to subtract.</param>
            <param name="right">The second quaternion to subtract.</param>
            <returns>The difference of the two quaternions.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Multiply(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Multiplies a quaternion by another.
            </summary>
            <param name="left">The first quaternion to multiply.</param>
            <param name="right">The second quaternion to multiply.</param>
            <returns>The multiplied quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Multiply(GTA.Math.Quaternion,GTA.Math.Vector3)">
            <summary>
            Rotates a point using a quaternion.
            </summary>
            <param name="rotation">The quaternion to rotate the point with.</param>
            <param name="point">The point to rotate.</param>
            <returns>The rotated point coordinates.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Multiply(GTA.Math.Quaternion,System.Single)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Multiply(System.Single,GTA.Math.Quaternion)">
            <summary>
            Scales a quaternion by the given value.
            </summary>
            <param name="quaternion">The quaternion to scale.</param>
            <param name="scale">The amount by which to scale the quaternion.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Division(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Divides a Quaternion by another Quaternion.
            </summary>
            <param name="left">The source Quaternion.</param>
            <param name="right">The divisor.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Equality(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.op_Inequality(GTA.Math.Quaternion,GTA.Math.Quaternion)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.ToString(System.String)">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <param name="format">The format.</param>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Equals(GTA.Math.Quaternion)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Quaternion.Equals(GTA.Math.Quaternion@,GTA.Math.Quaternion@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns><see langword="true" /> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <see langword="null" /> references or if <c>value1.Equals(value2)</c> returns <see langword="true" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="F:GTA.Math.Vector2.X">
            <summary>
            Gets or sets the X component of the vector.
            </summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="F:GTA.Math.Vector2.Y">
            <summary>
            Gets or sets the Y component of the vector.
            </summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="M:GTA.Math.Vector2.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GTA.Math.Vector2"/> class.
            </summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
        </member>
        <member name="P:GTA.Math.Vector2.Normalized">
            <summary>
            Returns this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Zero">
            <summary>
            Returns a null vector. (0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Up">
            <summary>
            Returns the up vector. (0,1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Down">
            <summary>
            Returns the down vector. (0,-1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Right">
            <summary>
            Returns the right vector. (1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Left">
            <summary>
            Returns the left vector. (-1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector2.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the X or Y component, depending on the index.</value>
            <param name="index">The index of the component to access. Use 0 for the X component and 1 for the Y component.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="index"/> is out of the range [0, 1].</exception>
        </member>
        <member name="M:GTA.Math.Vector2.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.LengthSquared">
            <summary>
            Calculates the squared length of the vector.
            </summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Normalize">
            <summary>
            Converts the vector into a unit vector.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.DistanceTo(GTA.Math.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.DistanceToSquared(GTA.Math.Vector2)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the squared distance to.</param>
            <returns>The squared distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Distance(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.DistanceSquared(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Angle(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Returns the angle in degrees between from and to.
            The angle returned is always the acute angle between the two vectors.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.SignedAngle(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Returns the signed angle in degrees between from and to.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.ToHeading">
            <summary>
            Converts a vector to a heading.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.RandomXY">
            <summary>
            Returns a new normalized vector with random X and Y components.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.Add(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Subtract(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Multiply(GTA.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Modulate(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Modulates a vector by another.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The modulated vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Divide(GTA.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Negate(GTA.Math.Vector2)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Clamp(GTA.Math.Vector2,GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Lerp(GTA.Math.Vector2,GTA.Math.Vector2,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:GTA.Math.Vector2.Normalize(GTA.Math.Vector2)">
            <summary>
            Converts the vector into a unit vector.
            </summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Dot(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Reflect(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The source vector.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine
            whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:GTA.Math.Vector2.Minimize(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Returns a vector containing the smallest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Maximize(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Returns a vector containing the largest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Addition(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Subtraction(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_UnaryNegation(GTA.Math.Vector2)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Multiply(GTA.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Multiply(System.Single,GTA.Math.Vector2)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Division(GTA.Math.Vector2,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Equality(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Inequality(GTA.Math.Vector2,GTA.Math.Vector2)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.op_Implicit(GTA.Math.Vector2)~GTA.Math.Vector3">
            <summary>
            Converts a Vector2 to a Vector3 implicitly.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector2.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.ToString(System.String)">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <param name="format">The format.</param>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Equals(GTA.Math.Vector2)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Vector2.Equals(GTA.Math.Vector2@,GTA.Math.Vector2@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <see langword="null" /> references or if <c>value1.Equals(value2)</c> returns <see langword="true" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="F:GTA.Math.Vector3.X">
            <summary>
            Gets or sets the X component of the vector.
            </summary>
            <value>The X component of the vector.</value>
        </member>
        <member name="F:GTA.Math.Vector3.Y">
            <summary>
            Gets or sets the Y component of the vector.
            </summary>
            <value>The Y component of the vector.</value>
        </member>
        <member name="F:GTA.Math.Vector3.Z">
            <summary>
            Gets or sets the Z component of the vector.
            </summary>
            <value>The Z component of the vector.</value>
        </member>
        <member name="M:GTA.Math.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:GTA.Math.Vector3"/> class.
            </summary>
            <param name="x">Initial value for the X component of the vector.</param>
            <param name="y">Initial value for the Y component of the vector.</param>
            <param name="z">Initial value for the Z component of the vector.</param>
        </member>
        <member name="P:GTA.Math.Vector3.Normalized">
            <summary>
            Returns this vector with a magnitude of 1.
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.Zero">
            <summary>
            Returns a null vector. (0,0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldUp">
            <summary>
            Returns the world Up vector. (0,0,1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldDown">
            <summary>
            Returns the world Down vector. (0,0,-1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldNorth">
            <summary>
            Returns the world North vector. (0,1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldSouth">
            <summary>
            Returns the world South vector. (0,-1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldEast">
            <summary>
            Returns the world East vector. (1,0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.WorldWest">
            <summary>
            Returns the world West vector. (-1,0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeRight">
            <summary>
            Returns the relative Right vector. (1,0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeLeft">
            <summary>
            Returns the relative Left vector. (-1,0,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeFront">
            <summary>
            Returns the relative Front vector. (0,1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeBack">
            <summary>
            Returns the relative Back vector. (0,-1,0)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeTop">
            <summary>
            Returns the relative Top vector. (0,0,1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.RelativeBottom">
            <summary>
            Returns the relative Bottom vector as used. (0,0,-1)
            </summary>
        </member>
        <member name="P:GTA.Math.Vector3.Item(System.Int32)">
            <summary>
            Gets or sets the component at the specified index.
            </summary>
            <value>The value of the X, Y or Z component, depending on the index.</value>
            <param name="index">The index of the component to access. Use 0 for the X component, 1 for the Y component and 2 for the Z component.</param>
            <returns>The value of the component at the specified index.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">Thrown when the <paramref name="index"/> is out of the range [0, 2].</exception>
        </member>
        <member name="M:GTA.Math.Vector3.Length">
            <summary>
            Calculates the length of the vector.
            </summary>
            <returns>The length of the vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.LengthSquared">
            <summary>
            Calculates the squared length of the vector.
            </summary>
            <returns>The squared length of the vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Normalize">
            <summary>
            Converts the vector into a unit vector.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceTo(GTA.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceToSquared(GTA.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceTo2D(GTA.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position">The second vector to calculate the distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceToSquared2D(GTA.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position">The second vector to calculate the squared distance to.</param>
            <returns>The distance to the other vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Distance(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceSquared(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Distance2D(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position1">The first vector to calculate the distance to the second vector.</param>
            <param name="position2">The second vector to calculate the distance to the first vector.</param>
            <returns>The distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.DistanceSquared2D(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the squared distance between two vectors, ignoring the Z-component.
            </summary>
            <param name="position1">The first vector to calculate the squared distance to the second vector.</param>
            <param name="position2">The second vector to calculate the squared distance to the first vector.</param>
            <returns>The squared distance between the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Angle(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Returns the angle in degrees between from and to.
            The angle returned is always the acute angle between the two vectors.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.SignedAngle(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Returns the signed angle in degrees between from and to.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.ToHeading">
            <summary>
            Converts a vector to a heading.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.Around(System.Single)">
            <summary>
            Creates a random vector inside the circle around this position.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.RandomXY">
            <summary>
            Returns a new normalized vector with random X and Y components.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.RandomXYZ">
            <summary>
            Returns a new normalized vector with random X, Y and Z components.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.Add(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Subtract(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Multiply(GTA.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Modulate(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Modulates a vector by another.
            </summary>
            <param name="left">The first vector to modulate.</param>
            <param name="right">The second vector to modulate.</param>
            <returns>The multiplied vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Divide(GTA.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="value">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Negate(GTA.Math.Vector3)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="value">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Clamp(GTA.Math.Vector3,GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Restricts a value to be within a specified range.
            </summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Lerp(GTA.Math.Vector3,GTA.Math.Vector3,System.Single)">
            <summary>
            Performs a linear interpolation between two vectors.
            </summary>
            <param name="start">Start vector.</param>
            <param name="end">End vector.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of <paramref name="end"/>.</param>
            <returns>The linear interpolation of the two vectors.</returns>
            <remarks>
            This method performs the linear interpolation based on the following formula.
            <code>start + (end - start) * amount</code>
            Passing <paramref name="amount"/> a value of 0 will cause <paramref name="start"/> to be returned; a value of 1 will cause <paramref name="end"/> to be returned.
            </remarks>
        </member>
        <member name="M:GTA.Math.Vector3.Normalize(GTA.Math.Vector3)">
            <summary>
            Converts the vector into a unit vector.
            </summary>
            <param name="vector">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Dot(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the dot product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The dot product of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Cross(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Calculates the cross product of two vectors.
            </summary>
            <param name="left">First source vector.</param>
            <param name="right">Second source vector.</param>
            <returns>The cross product of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Project(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Projects a vector onto another vector.
            </summary>
            <param name="vector">The vector to project.</param>
            <param name="onNormal">Vector to project onto, does not assume it is normalized.</param>
            <returns>The projected vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.ProjectOnPlane(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Projects a vector onto a plane defined by a normal orthogonal to the plane.
            </summary>
            <param name="vector">The vector to project.</param>
            <param name="planeNormal">Normal of the plane,  does not assume it is normalized.</param>
            <returns>The Projection of vector onto plane.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Reflect(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Returns the reflection of a vector off a surface that has the specified normal.
            </summary>
            <param name="vector">The vector to project onto the plane.</param>
            <param name="normal">Normal of the surface.</param>
            <returns>The reflected vector.</returns>
            <remarks>Reflect only gives the direction of a reflection off a surface, it does not determine
            whether the original vector was close enough to the surface to hit it.</remarks>
        </member>
        <member name="M:GTA.Math.Vector3.Minimize(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Returns a vector containing the smallest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the smallest components of the source vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Maximize(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Returns a vector containing the largest components of the specified vectors.
            </summary>
            <param name="value1">The first source vector.</param>
            <param name="value2">The second source vector.</param>
            <returns>A vector containing the largest components of the source vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Addition(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Adds two vectors.
            </summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The sum of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Subtraction(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Subtracts two vectors.
            </summary>
            <param name="left">The first vector to subtract.</param>
            <param name="right">The second vector to subtract.</param>
            <returns>The difference of the two vectors.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_UnaryNegation(GTA.Math.Vector3)">
            <summary>
            Reverses the direction of a given vector.
            </summary>
            <param name="vector">The vector to negate.</param>
            <returns>A vector facing in the opposite direction.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Multiply(GTA.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Multiply(System.Single,GTA.Math.Vector3)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Division(GTA.Math.Vector3,System.Single)">
            <summary>
            Scales a vector by the given value.
            </summary>
            <param name="vector">The vector to scale.</param>
            <param name="scale">The amount by which to scale the vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Equality(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Tests for equality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has the same value as <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Inequality(GTA.Math.Vector3,GTA.Math.Vector3)">
            <summary>
            Tests for inequality between two objects.
            </summary>
            <param name="left">The first value to compare.</param>
            <param name="right">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="left"/> has a different value than <paramref name="right"/>; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.op_Implicit(GTA.Math.Vector3)~GTA.Math.Vector2">
            <summary>
            Converts a Vector3 to a Vector2 implicitly.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.ToArray">
            <summary>
            Converts the matrix to an array of floats.
            </summary>
        </member>
        <member name="M:GTA.Math.Vector3.ToString">
            <summary>
            Converts the value of the object to its equivalent string representation.
            </summary>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Equals(System.Object)">
            <summary>
            Returns a value that indicates whether the current instance is equal to a specified object.
            </summary>
            <param name="obj">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Equals(GTA.Math.Vector3)">
            <summary>
            Returns a value that indicates whether the current instance is equal to the specified object.
            </summary>
            <param name="other">Object to make the comparison with.</param>
            <returns><see langword="true" /> if the current instance is equal to the specified object; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:GTA.Math.Vector3.Equals(GTA.Math.Vector3@,GTA.Math.Vector3@)">
            <summary>
            Determines whether the specified object instances are considered equal.
            </summary>
            <param name="value1">The first value to compare.</param>
            <param name="value2">The second value to compare.</param>
            <returns><see langword="true" /> if <paramref name="value1"/> is the same instance as <paramref name="value2"/> or
            if both are <see langword="null" /> references or if <c>value1.Equals(value2)</c> returns <see langword="true" />; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="F:GTA.Native.PedHash.Franklin02">
            <summary>
            The Franklin Clinton model added in the Contract update, and this model is not used for story mode. The model name is <c>P_Franklin_02</c>.
            The leader player will control a <see cref="T:GTA.Ped" /> with this model in Short Trip missions.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.ARY">
            <summary>
            The first in-game model of Andre Romelle Young, known professionally as Dr. Dre.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.ARY02">
            <summary>
            The second in-game model of Andre Romelle Young, known professionally as Dr. Dre.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.JIO">
            <summary>
            The first in-game model of Jimmy Iovine.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.JIO02">
            <summary>
            The second in-game model of Jimmy Iovine.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.MJO">
            <summary>
            The first in-game model of Mark Jordan, known professionally as DJ Pooh.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.MJO02">
            <summary>
            The second in-game model of Mark Jordan, known professionally as DJ Pooh.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.ARYCutscene">
            <summary>
            The first cutscene model of Andre Romelle Young, known professionally as Dr. Dre.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.ARY02Cutscene">
            <summary>
            The second cutscene model of Andre Romelle Young, known professionally as Dr. Dre.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.JIOCutscene">
            <summary>
            The first cutscene model of Jimmy Iovine.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.JIO02Cutscene">
            <summary>
            The second cutscene model of Jimmy Iovine.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.MJOCutscene">
            <summary>
            The first cutscene model of Mark Jordan, known professionally as DJ Pooh.
            </summary>
        </member>
        <member name="F:GTA.Native.PedHash.MJO02Cutscene">
            <summary>
            The second cutscene model of Mark Jordan, known professionally as DJ Pooh.
            </summary>
        </member>
        <member name="F:GTA.Native.VehicleHash.TenF">
            <summary>10F</summary>
        </member>
        <member name="F:GTA.Native.VehicleHash.TenF2">
            <summary>10F Widebody</summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ActivePose">
            <summary>
            Gets a ActivePose Helper class for sending ActivePose <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ApplyImpulse">
            <summary>
            Gets a ApplyImpulse Helper class for sending ApplyImpulse <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ApplyBulletImpulse">
            <summary>
            Gets a ApplyBulletImpulse Helper class for sending ApplyBulletImpulse <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BodyRelax">
            <summary>
            Gets a BodyRelax Helper class for sending BodyRelax <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureBalance">
            <summary>
            Gets a ConfigureBalance Helper class for sending ConfigureBalance <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureBalanceReset">
            <summary>
            Gets a ConfigureBalanceReset Helper class for sending ConfigureBalanceReset <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            reset the values configurable by the Configure Balance message to their defaults.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureSelfAvoidance">
            <summary>
            Gets a ConfigureSelfAvoidance Helper class for sending ConfigureSelfAvoidance <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            this single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureBullets">
            <summary>
            Gets a ConfigureBullets Helper class for sending ConfigureBullets <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureBulletsExtra">
            <summary>
            Gets a ConfigureBulletsExtra Helper class for sending ConfigureBulletsExtra <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureLimits">
            <summary>
            Gets a ConfigureLimits Helper class for sending ConfigureLimits <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureSoftLimit">
            <summary>
            Gets a ConfigureSoftLimit Helper class for sending ConfigureSoftLimit <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureShotInjuredArm">
            <summary>
            Gets a ConfigureShotInjuredArm Helper class for sending ConfigureShotInjuredArm <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure the injured arm reaction during shot
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureShotInjuredLeg">
            <summary>
            Gets a ConfigureShotInjuredLeg Helper class for sending ConfigureShotInjuredLeg <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            This single message allows you to configure the injured leg reaction during shot
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.DefineAttachedObject">
            <summary>
            Gets a DefineAttachedObject Helper class for sending DefineAttachedObject <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ForceToBodyPart">
            <summary>
            Gets a ForceToBodyPart Helper class for sending ForceToBodyPart <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Apply an impulse to a named body part
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.LeanInDirection">
            <summary>
            Gets a LeanInDirection Helper class for sending LeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.LeanRandom">
            <summary>
            Gets a LeanRandom Helper class for sending LeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.LeanToPosition">
            <summary>
            Gets a LeanToPosition Helper class for sending LeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.LeanTowardsObject">
            <summary>
            Gets a LeanTowardsObject Helper class for sending LeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HipsLeanInDirection">
            <summary>
            Gets a HipsLeanInDirection Helper class for sending HipsLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HipsLeanRandom">
            <summary>
            Gets a HipsLeanRandom Helper class for sending HipsLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HipsLeanToPosition">
            <summary>
            Gets a HipsLeanToPosition Helper class for sending HipsLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HipsLeanTowardsObject">
            <summary>
            Gets a HipsLeanTowardsObject Helper class for sending HipsLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ForceLeanInDirection">
            <summary>
            Gets a ForceLeanInDirection Helper class for sending ForceLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ForceLeanRandom">
            <summary>
            Gets a ForceLeanRandom Helper class for sending ForceLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ForceLeanToPosition">
            <summary>
            Gets a ForceLeanToPosition Helper class for sending ForceLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ForceLeanTowardsObject">
            <summary>
            Gets a ForceLeanTowardsObject Helper class for sending ForceLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetStiffness">
            <summary>
            Gets a SetStiffness Helper class for sending SetStiffness <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetMuscleStiffness">
            <summary>
            Gets a SetMuscleStiffness Helper class for sending SetMuscleStiffness <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetWeaponMode">
            <summary>
            Gets a SetWeaponMode Helper class for sending SetWeaponMode <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Use this message to set the character's weapon mode. This is an alternative to the setWeaponMode public function.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.RegisterWeapon">
            <summary>
            Gets a RegisterWeapon Helper class for sending RegisterWeapon <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Use this message to register weapon. This is an alternative to the registerWeapon public function.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotRelax">
            <summary>
            Gets a ShotRelax Helper class for sending ShotRelax <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.FireWeapon">
            <summary>
            Gets a FireWeapon Helper class for sending FireWeapon <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            One shot message apply a force to the hand as we fire the gun that should be in this hand
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ConfigureConstraints">
            <summary>
            Gets a ConfigureConstraints Helper class for sending ConfigureConstraints <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            One shot to give state of constraints on character and response to constraints
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.StayUpright">
            <summary>
            Gets a StayUpright Helper class for sending StayUpright <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.StopAllBehaviours">
            <summary>
            Gets a StopAllBehaviors Helper class for sending StopAllBehaviors <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Send this message to immediately stop all behaviors from executing.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetCharacterStrength">
            <summary>
            Gets a SetCharacterStrength Helper class for sending SetCharacterStrength <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1]
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetCharacterHealth">
            <summary>
            Gets a SetCharacterHealth Helper class for sending SetCharacterHealth <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Sets character's health on the dead-to-alive scale: [0..1]
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetFallingReaction">
            <summary>
            Gets a SetFallingReaction Helper class for sending SetFallingReaction <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Sets the type of reaction if catchFall is called
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetCharacterUnderwater">
            <summary>
            Gets a SetCharacterUnderwater Helper class for sending SetCharacterUnderwater <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Sets viscosity applied to damping limbs
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetCharacterCollisions">
            <summary>
            Gets a SetCharacterCollisions Helper class for sending SetCharacterCollisions <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            setCharacterCollisions:
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetCharacterDamping">
            <summary>
            Gets a SetCharacterDamping Helper class for sending SetCharacterDamping <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Damp out cartwheeling and somersaulting above a certain threshold
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SetFrictionScale">
            <summary>
            Gets a SetFrictionScale Helper class for sending SetFrictionScale <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            setFrictionScale:
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.AnimPose">
            <summary>
            Gets a AnimPose Helper class for sending AnimPose <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ArmsWindmill">
            <summary>
            Gets a ArmsWindmill Helper class for sending ArmsWindmill <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ArmsWindmillAdaptive">
            <summary>
            Gets a ArmsWindmillAdaptive Helper class for sending ArmsWindmillAdaptive <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BalancerCollisionsReaction">
            <summary>
            Gets a BalancerCollisionsReaction Helper class for sending BalancerCollisionsReaction <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BodyBalance">
            <summary>
            Gets a BodyBalance Helper class for sending BodyBalance <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BodyFoetal">
            <summary>
            Gets a BodyFoetal Helper class for sending BodyFoetal <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BodyRollUp">
            <summary>
            Gets a BodyRollUp Helper class for sending BodyRollUp <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BodyWrithe">
            <summary>
            Gets a BodyWrithe Helper class for sending BodyWrithe <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.BraceForImpact">
            <summary>
            Gets a BraceForImpact Helper class for sending BraceForImpact <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Buoyancy">
            <summary>
            Gets a Buoyancy Helper class for sending Buoyancy <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.CatchFall">
            <summary>
            Gets a CatchFall Helper class for sending CatchFall <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Electrocute">
            <summary>
            Gets a Electrocute Helper class for sending Electrocute <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.FallOverWall">
            <summary>
            Gets a FallOverWall Helper class for sending FallOverWall <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Grab">
            <summary>
            Gets a Grab Helper class for sending Grab <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HeadLook">
            <summary>
            Gets a HeadLook Helper class for sending HeadLook <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.HighFall">
            <summary>
            Gets a HighFall Helper class for sending HighFall <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.IncomingTransforms">
            <summary>
            Gets a IncomingTransforms Helper class for sending IncomingTransforms <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.InjuredOnGround">
            <summary>
            Gets a InjuredOnGround Helper class for sending InjuredOnGround <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            InjuredOnGround
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Carried">
            <summary>
            Gets a Carried Helper class for sending Carried <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Carried
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Dangle">
            <summary>
            Gets a Dangle Helper class for sending Dangle <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Dangle
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.OnFire">
            <summary>
            Gets a OnFire Helper class for sending OnFire <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.PedalLegs">
            <summary>
            Gets a PedalLegs Helper class for sending PedalLegs <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.PointArm">
            <summary>
            Gets a PointArm Helper class for sending PointArm <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to overridebodyParts: Arms (useLeftArm, useRightArm)
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.PointGun">
            <summary>
            Gets a PointGun Helper class for sending PointGun <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.PointGunExtra">
            <summary>
            Gets a PointGunExtra Helper class for sending PointGunExtra <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.RollDownStairs">
            <summary>
            Gets a RollDownStairs Helper class for sending RollDownStairs <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Shot">
            <summary>
            Gets a Shot Helper class for sending Shot <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotNewBullet">
            <summary>
            Gets a ShotNewBullet Helper class for sending ShotNewBullet <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotSnap">
            <summary>
            Gets a ShotSnap Helper class for sending ShotSnap <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotShockSpin">
            <summary>
            Gets a ShotShockSpin Helper class for sending ShotShockSpin <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotFallToKnees">
            <summary>
            Gets a ShotFallToKnees Helper class for sending ShotFallToKnees <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            configure the fall to knees shot.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotFromBehind">
            <summary>
            Gets a ShotFromBehind Helper class for sending ShotFromBehind <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            configure the shot from behind reaction
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotInGuts">
            <summary>
            Gets a ShotInGuts Helper class for sending ShotInGuts <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            configure the shot in guts reaction
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotHeadLook">
            <summary>
            Gets a ShotHeadLook Helper class for sending ShotHeadLook <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.ShotConfigureArms">
            <summary>
            Gets a ShotConfigureArms Helper class for sending ShotConfigureArms <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            configure the arm reactions in shot
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.SmartFall">
            <summary>
            Gets a SmartFall Helper class for sending SmartFall <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
            <remarks>
            Clone of High Fall with a wider range of operating conditions.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.StaggerFall">
            <summary>
            Gets a StaggerFall Helper class for sending StaggerFall <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Teeter">
            <summary>
            Gets a Teeter Helper class for sending Teeter <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.UpperBodyFlinch">
            <summary>
            Gets a UpperBodyFlinch Helper class for sending UpperBodyFlinch <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.Euphoria.Yanked">
            <summary>
            Gets a Yanked Helper class for sending Yanked <see cref="T:GTA.NaturalMotion.Message"/> to this <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="T:GTA.NaturalMotion.Message">
            <summary>
            A base class for manually building a <see cref="T:GTA.NaturalMotion.Message"/>.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.Message.#ctor(System.String)">
            <summary>
            Creates a class to manually build <see cref="T:GTA.NaturalMotion.Message"/>s that can be sent to any <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="message">The name of the natural motion message.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.Abort(GTA.Ped)">
            <summary>
            Stops this Natural Motion behavior on the given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="target">The <see cref="T:GTA.Ped"/> to send the Abort <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SendTo(GTA.Ped)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:GTA.Ped"/> that will loop until manually aborted.
            </summary>
            <param name="target">The <see cref="T:GTA.Ped"/> to send the <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SendTo(GTA.Ped,System.Int32)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:GTA.Ped"/> for a specified duration.
            </summary>
            <param name="target">The <see cref="T:GTA.Ped"/> to send the <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <param name="duration">How long to apply the behavior for (-1 for looped).</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SetArgument(System.String,System.Boolean)">
            <summary>
            Sets a <see cref="T:GTA.NaturalMotion.Message"/> argument to a <see cref="T:System.Boolean"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SetArgument(System.String,System.Int32)">
            <summary>
            Sets a <see cref="T:GTA.NaturalMotion.Message"/> argument to a <see cref="T:System.Int32"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SetArgument(System.String,System.Single)">
            <summary>
            Sets a <see cref="T:GTA.NaturalMotion.Message"/> argument to a <see cref="T:System.Single"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SetArgument(System.String,System.String)">
            <summary>
            Sets a <see cref="T:GTA.NaturalMotion.Message"/> argument to a <see cref="T:System.String"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.SetArgument(System.String,GTA.Math.Vector3)">
            <summary>
            Sets a <see cref="T:GTA.NaturalMotion.Message"/> argument to a <see cref="T:GTA.Math.Vector3"/> value.
            </summary>
            <param name="message">The argument name.</param>
            <param name="value">The value to set the argument to.</param>
        </member>
        <member name="M:GTA.NaturalMotion.Message.ResetArguments">
            <summary>
            Resets all arguments to their default values.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.Message.ToString">
            <summary>
            Returns the internal message name.
            </summary>
        </member>
        <member name="T:GTA.NaturalMotion.CustomHelper">
            <summary>
            A helper class for building a <seealso cref="T:GTA.NaturalMotion.Message" /> and sending it to a given <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.CustomHelper.#ctor(GTA.Ped,System.String)">
            <summary>
            Creates a helper class for building Natural Motion messages to send to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="target">The <see cref="T:GTA.Ped"/> that the message will be applied to.</param>
            <param name="message">The name of the natural motion message.</param>
        </member>
        <member name="M:GTA.NaturalMotion.CustomHelper.Start">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:GTA.Ped"/> that will loop until manually aborted.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.CustomHelper.Start(System.Int32)">
            <summary>
            Starts this Natural Motion behavior on the <see cref="T:GTA.Ped"/> for a specified duration.
            </summary>
            <param name="duration">How long to apply the behavior for (-1 for looped).</param>
        </member>
        <member name="M:GTA.NaturalMotion.CustomHelper.Stop">
            <summary>
            Stops this Natural Motion behavior on the <see cref="T:GTA.Ped"/>.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ActivePoseHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ActivePoseHelper for sending a ActivePose <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ActivePose <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ActivePoseHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ActivePoseHelper.UseGravityCompensation">
            <summary>
            Apply gravity compensation.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ActivePoseHelper.AnimSource">
            <summary>
            Animation source.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ApplyImpulseHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ApplyImpulseHelper for sending a ApplyImpulse <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ApplyImpulse <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.EqualizeAmount">
            <summary>
            0 means straight impulse, 1 means multiply by the mass (change in velocity).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.PartIndex">
            <summary>
            Index of part being hit. -1 apply impulse to COM.
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.Impulse">
            <summary>
            Impulse vector (impulse is change in momentum).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -4500.0f.
            Max value = 4500.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.HitPoint">
            <summary>
            Optional point on part where hit. If not supplied then the impulse is applied at the part center.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.LocalHitPointInfo">
            <summary>
            Hit point in local coordinates of body part.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.LocalImpulseInfo">
            <summary>
            Impulse in local coordinates of body part.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyImpulseHelper.AngularImpulse">
            <summary>
            Impulse should be considered an angular impulse.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ApplyBulletImpulseHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ApplyBulletImpulseHelper for sending a ApplyBulletImpulse <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ApplyBulletImpulse <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.EqualizeAmount">
            <summary>
            0 means straight impulse, 1 means multiply by the mass (change in velocity).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.PartIndex">
            <summary>
            Index of part being hit.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.Impulse">
            <summary>
            Impulse vector (impulse is change in momentum).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1000.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.HitPoint">
            <summary>
            Optional point on part where hit.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.LocalHitPointInfo">
            <summary>
            True = hitPoint is in local coordinates of bodyPart, false = hit point is in world coordinates.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ApplyBulletImpulseHelper.ExtraShare">
            <summary>
            If not 0.0 then have an extra bullet applied to spine0 (approximates the COM).  Uses setup from configureBulletsExtra.  0-1 shared 0.0 = no extra bullet, 0.5 = impulse split equally between extra and bullet,  1.0 only extra bullet.  LT 0.0 then bullet + scaled extra bullet.  Eg.-0.5 = bullet + 0.5 impulse extra bullet.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.BodyRelaxHelper">
            <summary>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.BodyRelaxHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BodyRelaxHelper for sending a BodyRelax <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BodyRelax <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Set the amount of relaxation across the whole body; Used to collapse the character into a rag-doll-like state.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRelaxHelper.Relaxation">
            <summary>
            How relaxed the body becomes, in percentage relaxed. 100 being totally rag-dolled, 0 being very stiff and rigid.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRelaxHelper.Damping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRelaxHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRelaxHelper.HoldPose">
            <summary>
            Automatically hold the current pose as the character relaxes - can be used to avoid relaxing into a t-pose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRelaxHelper.DisableJointDriving">
            <summary>
            Sets the drive state to free - this reduces drifting on the ground.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureBalanceHelper">
            <summary>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureBalanceHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBalanceHelper for sending a ConfigureBalance <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureBalance <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure various parameters used on any behavior that uses the dynamic balance.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepHeight">
            <summary>
            Maximum height that character steps vertically (above 0.2 is high ... But OK underwater).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.4f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepHeightInc4Step">
            <summary>
            Added to stepHeight if going up steps.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.4f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LegsApartRestep">
            <summary>
            If the legs end up more than (legsApartRestep + hipwidth) apart even though balanced, take another step.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LegsTogetherRestep">
            <summary>
            Mmmm0.1 for drunk if the legs end up less than (hipwidth - legsTogetherRestep) apart even though balanced, take another step.  A value of 1 will turn off this feature and the max value is hipWidth = 0.23f by default but is model dependent.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LegsApartMax">
            <summary>
            FRICTION WORKAROUND: if the legs end up more than (legsApartMax + hipwidth) apart when balanced, adjust the feet positions to slide back so they are legsApartMax + hipwidth apart.  Needs to be less than legsApartRestep to see any effect.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.TaperKneeStrength">
            <summary>
            Does the knee strength reduce with angle.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LegStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LeftLegSwingDamping">
            <summary>
            Damping of left leg during swing phase (mmmmDrunk used 1.25 to slow legs movement).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.2f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.RightLegSwingDamping">
            <summary>
            Damping of right leg during swing phase (mmmmDrunk used 1.25 to slow legs movement).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.2f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.OpposeGravityLegs">
            <summary>
            Gravity opposition applied to hips and knees.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.OpposeGravityAnkles">
            <summary>
            Gravity opposition applied to ankles.  General balancer likes 1.0.  StaggerFall likes 0.1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LeanAcc">
            <summary>
            Multiplier on the floorAcceleration added to the lean.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.HipLeanAcc">
            <summary>
            Multiplier on the floorAcceleration added to the leanHips.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LeanAccMax">
            <summary>
            Max floorAcceleration allowed for lean and leanHips.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ResistAcc">
            <summary>
            Level of cheat force added to character to resist the effect of floorAcceleration (anti-Acceleration) - added to upperbody.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ResistAccMax">
            <summary>
            Max floorAcceleration allowed for anti-Acceleration. If  GT 20.0 then it is probably in a crash.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FootSlipCompOnMovingFloor">
            <summary>
            This parameter will be removed when footSlipCompensation preserves the foot angle on a moving floor]. If the character detects a moving floor and footSlipCompOnMovingFloor is false then it will turn off footSlipCompensation - at footSlipCompensation preserves the global heading of the feet.  If footSlipCompensation is off then the character usually turns to the side in the end although when turning the vehicle turns it looks promising for a while.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AnkleEquilibrium">
            <summary>
            Ankle equilibrium angle used when static balancing.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ExtraFeetApart">
            <summary>
            Additional feet apart setting.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.DontStepTime">
            <summary>
            Amount of time at the start of a balance before the character is allowed to start stepping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.BalanceAbortThreshold">
            <summary>
            When the character gives up and goes into a fall.  Larger values mean that the balancer can lean more before failing.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.GiveUpHeight">
            <summary>
            Height between lowest foot and COM below which balancer will give up.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepClampScale">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepClampScaleVariance">
            <summary>
            Variance in clamp scale every step. If negative only takes away from clampScale.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.PredictionTimeHip">
            <summary>
            Amount of time (seconds) into the future that the character tries to move hip to (kind of).  Will be controlled by balancer in future but can help recover spine quicker from bending forwards to much.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.PredictionTime">
            <summary>
            Amount of time (seconds) into the future that the character tries to step to. Bigger values try to recover with fewer, bigger steps. Smaller values recover with smaller steps, and generally recover less.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.PredictionTimeVariance">
            <summary>
            Variance in predictionTime every step. If negative only takes away from predictionTime.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.MaxSteps">
            <summary>
            Maximum number of steps that the balancer will take.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.MaxBalanceTime">
            <summary>
            Maximum time(seconds) that the balancer will balance for.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ExtraSteps">
            <summary>
            Allow the balancer to take this many more steps before hitting maxSteps. If negative nothing happens(safe default).
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ExtraTime">
            <summary>
            Allow the balancer to balance for this many more seconds before hitting maxBalanceTime.  If negative nothing happens(safe default).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FallType">
            <summary>
            How to fall after maxSteps or maxBalanceTime.
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.FallType.RampDownStiffness"/>.
            If <see cref="F:GTA.NaturalMotion.FallType.Slump"/> BCR has to be active.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FallMult">
            <summary>
            Multiply the rampDown of stiffness on falling by this amount ( GT 1 fall quicker).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FallReduceGravityComp">
            <summary>
            Reduce gravity compensation as the legs weaken on falling.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.RampHipPitchOnFail">
            <summary>
            Bend over when falling after maxBalanceTime.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StableLinSpeedThresh">
            <summary>
            Linear speed threshold for successful balance.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StableRotSpeedThresh">
            <summary>
            Rotational speed threshold for successful balance.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FailMustCollide">
            <summary>
            The upper body of the character must be colliding and other failure conditions met to fail.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.IgnoreFailure">
            <summary>
            Ignore maxSteps and maxBalanceTime and try to balance forever.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.ChangeStepTime">
            <summary>
            Time not in contact (airborne) before step is changed. If -ve don't change step.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.BalanceIndefinitely">
            <summary>
            Ignore maxSteps and maxBalanceTime and try to balance forever.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.MovingFloor">
            <summary>
            Temporary variable to ignore movingFloor code that generally causes the character to fall over if the feet probe a moving object e.g. treading on a gun.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AirborneStep">
            <summary>
            When airborne try to step.  Set to false for e.g. shotGun reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.UseComDirTurnVelThresh">
            <summary>
            Velocity below which the balancer turns in the direction of the COM forward instead of the ComVel - for use with shot from running with high upright constraint use 1.9.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.MinKneeAngle">
            <summary>
            Minimum knee angle (-ve value will mean this functionality is not applied).  0.4 seems a good value.
            </summary>
            <remarks>
            Default value = -0.5f.
            Min value = -0.5f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FlatterSwingFeet">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FlatterStaticFeet">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AvoidLeg">
            <summary>
            If true then balancer tries to avoid leg2leg collisions/avoid crossing legs. Avoid tries to not step across a line of the inside of the stance leg's foot.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AvoidFootWidth">
            <summary>
            NB. Very sensitive. Avoid tries to not step across a line of the inside of the stance leg's foot. AvoidFootWidth = how much inwards from the ankle this line is in (m).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AvoidFeedback">
            <summary>
            NB. Very sensitive. Avoid tries to not step across a line of the inside of the stance leg's foot. Avoid doesn't allow the desired stepping foot to cross the line.  avoidFeedback = how much of the actual crossing of that line is fedback as an error.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LeanAgainstVelocity">
            <summary>
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepDecisionThreshold">
            <summary>
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StepIfInSupport">
            <summary>
            The balancer sometimes decides to step even if balanced.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.AlwaysStepWithFarthest">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.StandUp">
            <summary>
            Standup more with increased velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.DepthFudge">
            <summary>
            Supposed to increase foot friction: Impact depth of a collision with the foot is changed when the balancer is running - impact.SetDepth(impact.GetDepth() - depthFudge).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.DepthFudgeStagger">
            <summary>
            Supposed to increase foot friction: Impact depth of a collision with the foot is changed when staggerFall is running - impact.SetDepth(impact.GetDepth() - depthFudgeStagger).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FootFriction">
            <summary>
            Foot friction multiplier is multiplied by this amount if balancer is running.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.FootFrictionStagger">
            <summary>
            Foot friction multiplier is multiplied by this amount if staggerFall is running.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.BackwardsLeanCutoff">
            <summary>
            Backwards lean threshold to cut off stay upright forces. 0.0 Vertical - 1.0 horizontal.  0.6 is a sensible value.  NB: the balancer does not fail in order to give stagger that extra step as it falls.  A backwards lean of GT 0.6 will generally mean the balancer will soon fail without stayUpright forces.
            </summary>
            <remarks>
            Default value = 1.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.GiveUpHeightEnd">
            <summary>
            If this value is different from giveUpHeight, actual giveUpHeight will be ramped toward this value.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.BalanceAbortThresholdEnd">
            <summary>
            If this value is different from balanceAbortThreshold, actual balanceAbortThreshold will be ramped toward this value.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.GiveUpRampDuration">
            <summary>
            Duration of ramp from start of behavior for above two parameters. If smaller than 0, no ramp is applied.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBalanceHelper.LeanToAbort">
            <summary>
            Lean at which to send abort message when maxSteps or maxBalanceTime is reached.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureBalanceResetHelper">
            <summary>
            Reset the values configurable by the Configure Balance message to their defaults.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureBalanceResetHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBalanceResetHelper for sending a ConfigureBalanceReset <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureBalanceReset <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Reset the values configurable by the Configure Balance message to their defaults.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper">
            <summary>
            This single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureSelfAvoidanceHelper for sending a ConfigureSelfAvoidance <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureSelfAvoidance <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows to configure self avoidance for the character.BBDD Self avoidance tech.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.UseSelfAvoidance">
            <summary>
            Enable or disable self avoidance tech.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.OverwriteDragReduction">
            <summary>
            Specify whether self avoidance tech should use original IK input target or the target that has been already modified by getStabilisedPos() tech i.e. function that compensates for rotational and linear velocity of shoulder/thigh.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.TorsoSwingFraction">
            <summary>
            Place the adjusted target this much along the arc between effector (wrist) and target, value in range [0,1].
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.MaxTorsoSwingAngleRad">
            <summary>
            Max value on the effector (wrist) to adjusted target offset.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.6f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.SelfAvoidIfInSpineBoundsOnly">
            <summary>
            Restrict self avoidance to operate on targets that are within character torso bounds only.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.SelfAvoidAmount">
            <summary>
            Amount of self avoidance offset applied when angle from effector (wrist) to target is greater then right angle i.e. when total offset is a blend between where effector currently is to value that is a product of total arm length and selfAvoidAmount. SelfAvoidAmount is in a range between [0, 1].
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.OverwriteTwist">
            <summary>
            Overwrite desired IK twist with self avoidance procedural twist.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.UsePolarPathAlgorithm">
            <summary>
            Use the alternative self avoidance algorithm that is based on linear and polar target blending. WARNING: It only requires "radius" in terms of parametrization.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSelfAvoidanceHelper.Radius">
            <summary>
            Self avoidance radius, measured out from the spine axis along the plane perpendicular to that axis. The closer is the proximity of reaching target to that radius, the more polar (curved) motion is used for offsetting the target. WARNING: Parameter only used by the alternative algorithm that is based on linear and polar target blending.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureBulletsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBulletsHelper for sending a ConfigureBullets <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureBullets <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseSpreadOverParts">
            <summary>
            Spreads impulse across parts. Currently only for spine parts, not limbs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseLeakageStrengthScaled">
            <summary>
            For weaker characters subsequent impulses remain strong.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulsePeriod">
            <summary>
            Duration that impulse is spread over (triangular shaped).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseTorqueScale">
            <summary>
            An impulse applied at a point on a body equivalent to an impulse at the center of the body and a torque.  This parameter scales the torque component. (The torque component seems to be excite the rage looseness bug which sends the character in a sometimes wildly different direction to an applied impulse).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.LoosenessFix">
            <summary>
            Fix the rage looseness bug by applying only the impulse at the center of the body unless it is a spine part then apply the twist component only of the torque as well.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseDelay">
            <summary>
            Time from hit before impulses are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseReductionPerShot">
            <summary>
            By how much are subsequent impulses reduced (e.g. 0.0: no reduction, 0.1: 10% reduction each new hit).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseRecovery">
            <summary>
            Recovery rate of impulse strength per second (impulse strength from 0.0:1.0).  At 60fps a impulseRecovery=60.0 will recover in 1 frame.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseMinLeakage">
            <summary>
            The minimum amount of impulse leakage allowed.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueMode.Disabled"/>.
            If <see cref="F:GTA.NaturalMotion.TorqueMode.Proportional"/> - proportional to character strength, can reduce impulse amount.
            If <see cref="F:GTA.NaturalMotion.TorqueMode.Additive"/> - no reduction of impulse and not proportional to character strength.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueSpinMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueSpinMode.FromImpulse"/>.
            If <see cref="F:GTA.NaturalMotion.TorqueSpinMode.Flipping"/> a burst effect is achieved.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueFilterMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueFilterMode.ApplyEveryBullet"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueAlwaysSpine3">
            <summary>
            Always apply torques to spine3 instead of actual part hit.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueDelay">
            <summary>
            Time from hit before torques are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorquePeriod">
            <summary>
            Duration of torque.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueGain">
            <summary>
            Multiplies impulse magnitude to arrive at torque that is applied.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueCutoff">
            <summary>
            Minimum ratio of impulse that remains after converting to torque (if in strength-proportional mode).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.TorqueReductionPerTick">
            <summary>
            Ratio of torque for next tick (e.g. 1.0: not reducing over time, 0.9: each tick torque is reduced by 10%).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.LiftGain">
            <summary>
            Amount of lift (directly multiplies torque axis to give lift force).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.CounterImpulseDelay">
            <summary>
            Time after impulse is applied that counter impulse is applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.CounterImpulseMag">
            <summary>
            Amount of the original impulse that is countered.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.CounterAfterMagReached">
            <summary>
            Applies the counter impulse counterImpulseDelay(secs) after counterImpulseMag of the Impulse has been applied.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.DoCounterImpulse">
            <summary>
            Add a counter impulse to the pelvis.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.CounterImpulse2Hips">
            <summary>
            Amount of the counter impulse applied to hips - the rest is applied to the part originally hit.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseNoBalMult">
            <summary>
            Amount to scale impulse by if the dynamicBalance is not OK.  1.0 means this functionality is not applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabStart">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabEnd">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseBalStabMult">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngStart">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngEnd">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseSpineAngMult">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseVelStart">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseVelEnd">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseVelMult">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMult">
            <summary>
            Amount to scale impulse by if the character is airborne and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMultStart">
            <summary>
            If impulse is above this value scale it by impulseAirMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseAirMax">
            <summary>
            Amount to clamp impulse to if character is airborne  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseAirApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseAirOn">
            <summary>
            Scale and/or clamp impulse if the character is airborne and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMult">
            <summary>
            Amount to scale impulse by if the character is contacting with one foot only and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMultStart">
            <summary>
            If impulse is above this value scale it by impulseOneLegMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegMax">
            <summary>
            Amount to clamp impulse to if character is contacting with one foot only  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.ImpulseOneLegOn">
            <summary>
            Scale and/or clamp impulse if the character is contacting with one leg only and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbRatio">
            <summary>
            0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbLowerShare">
            <summary>
            Rigid body response is shared between the upper and lower body (rbUpperShare = 1-rbLowerShare). RbLowerShare=0.5 gives upper and lower share scaled by mass.  i.e. if 70% ub mass and 30% lower mass then rbLowerShare=0.5 gives actualrbShare of 0.7ub and 0.3lb. rbLowerShare GT 0.5 scales the ub share down from 0.7 and the lb up from 0.3.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMoment">
            <summary>
            0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArm">
            <summary>
            Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArm">
            <summary>
            Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbRatioAirborne">
            <summary>
            If Airborne: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMomentAirborne">
            <summary>
            If Airborne: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArmAirborne">
            <summary>
            If Airborne: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArmAirborne">
            <summary>
            If Airborne: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbRatioOneLeg">
            <summary>
            If only one leg in contact: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMomentOneLeg">
            <summary>
            If only one leg in contact: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxTwistMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbMaxBroomMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbTwistAxis">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.RbTwistAxis.WorldUp"/>.
            </remarks>.
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsHelper.RbPivot">
            <summary>
            If false pivot around COM always, if true change pivot depending on foot contact:  to feet center if both feet in contact, or foot position if 1 foot in contact or COM position if no feet in contact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureBulletsExtraHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureBulletsExtraHelper for sending a ConfigureBulletsExtra <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureBulletsExtra <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpreadOverParts">
            <summary>
            Spreads impulse across parts. Currently only for spine parts, not limbs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulsePeriod">
            <summary>
            Duration that impulse is spread over (triangular shaped).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseTorqueScale">
            <summary>
            An impulse applied at a point on a body equivalent to an impulse at the center of the body and a torque.  This parameter scales the torque component. (The torque component seems to be excite the rage looseness bug which sends the character in a sometimes wildly different direction to an applied impulse).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.LoosenessFix">
            <summary>
            Fix the rage looseness bug by applying only the impulse at the center of the body unless it is a spine part then apply the twist component only of the torque as well.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseDelay">
            <summary>
            Time from hit before impulses are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueMode.Disabled"/>.
            If <see cref="F:GTA.NaturalMotion.TorqueMode.Proportional"/> - proportional to character strength, can reduce impulse amount.
            If <see cref="F:GTA.NaturalMotion.TorqueMode.Additive"/> - no reduction of impulse and not proportional to character strength.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueSpinMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueSpinMode.FromImpulse"/>.
            If <see cref="F:GTA.NaturalMotion.TorqueSpinMode.Flipping"/> a burst effect is achieved.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueFilterMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TorqueFilterMode.ApplyEveryBullet"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueAlwaysSpine3">
            <summary>
            Always apply torques to spine3 instead of actual part hit.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueDelay">
            <summary>
            Time from hit before torques are being applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorquePeriod">
            <summary>
            Duration of torque.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueGain">
            <summary>
            Multiplies impulse magnitude to arrive at torque that is applied.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueCutoff">
            <summary>
            Minimum ratio of impulse that remains after converting to torque (if in strength-proportional mode).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.TorqueReductionPerTick">
            <summary>
            Ratio of torque for next tick (e.g. 1.0: not reducing over time, 0.9: each tick torque is reduced by 10%).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.LiftGain">
            <summary>
            Amount of lift (directly multiplies torque axis to give lift force).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulseDelay">
            <summary>
            Time after impulse is applied that counter impulse is applied.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulseMag">
            <summary>
            Amount of the original impulse that is countered.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.CounterAfterMagReached">
            <summary>
            Applies the counter impulse counterImpulseDelay(secs) after counterImpulseMag of the Impulse has been applied.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.DoCounterImpulse">
            <summary>
            Add a counter impulse to the pelvis.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.CounterImpulse2Hips">
            <summary>
            Amount of the counter impulse applied to hips - the rest is applied to the part originally hit.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseNoBalMult">
            <summary>
            Amount to scale impulse by if the dynamicBalance is not OK.  1.0 means this functionality is not applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabStart">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabEnd">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseBalStabMult">
            <summary>
            100% LE Start to impulseBalStabMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngStart">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngEnd">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: Start GT End.  This the dot of hip2Head with up.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseSpineAngMult">
            <summary>
            100% GE Start to impulseSpineAngMult*100% LT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelStart">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelEnd">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: Start LT End.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseVelMult">
            <summary>
            100% LE Start to impulseVelMult*100% GT End. NB: leaving this as 1.0 means this functionality is not applied and Start and End have no effect.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMult">
            <summary>
            Amount to scale impulse by if the character is airborne and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMultStart">
            <summary>
            If impulse is above this value scale it by impulseAirMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirMax">
            <summary>
            Amount to clamp impulse to if character is airborne  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseAirOn">
            <summary>
            Scale and/or clamp impulse if the character is airborne and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMult">
            <summary>
            Amount to scale impulse by if the character is contacting with one foot only and dynamicBalance is OK and impulse is above impulseAirMultStart.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMultStart">
            <summary>
            If impulse is above this value scale it by impulseOneLegMult.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegMax">
            <summary>
            Amount to clamp impulse to if character is contacting with one foot only  and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegApplyAbove">
            <summary>
            If impulse is above this amount then do not scale/clamp just let it through as is - it's a shotgun or cannon.
            </summary>
            <remarks>
            Default value = 399.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.ImpulseOneLegOn">
            <summary>
            Scale and/or clamp impulse if the character is contacting with one leg only and dynamicBalance is OK.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbRatio">
            <summary>
            0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbLowerShare">
            <summary>
            Rigid body response is shared between the upper and lower body (rbUpperShare = 1-rbLowerShare). RbLowerShare=0.5 gives upper and lower share scaled by mass.  i.e. if 70% ub mass and 30% lower mass then rbLowerShare=0.5 gives actualrbShare of 0.7ub and 0.3lb. rbLowerShare GT 0.5 scales the ub share down from 0.7 and the lb up from 0.3.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMoment">
            <summary>
            0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArm">
            <summary>
            Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArm">
            <summary>
            Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbRatioAirborne">
            <summary>
            If Airborne: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMomentAirborne">
            <summary>
            If Airborne: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArmAirborne">
            <summary>
            If Airborne: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArmAirborne">
            <summary>
            If Airborne: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbRatioOneLeg">
            <summary>
            If only one leg in contact: 0.0 no rigidBody response, 0.5 half partForce half rigidBody, 1.0 = no partForce full rigidBody.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMomentOneLeg">
            <summary>
            If only one leg in contact: 0.0 only force, 0.5 = force and half the rigid body moment applied, 1.0 = force and full rigidBody moment.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxTwistMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum twist arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbMaxBroomMomentArmOneLeg">
            <summary>
            If only one leg in contact: Maximum broom((everything but the twist) arm moment of bullet applied.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbTwistAxis">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.RbTwistAxis.WorldUp"/>.
            </remarks>.
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureBulletsExtraHelper.RbPivot">
            <summary>
            If false pivot around COM always, if true change pivot depending on foot contact:  to feet center if both feet in contact, or foot position if 1 foot in contact or COM position if no feet in contact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureLimitsHelper">
            <summary>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureLimitsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureLimitsHelper for sending a ConfigureLimits <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureLimits <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Enable/disable/edit character limits in real time.  This adjusts limits in RAGE-native space and will *not* reorient the joint.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  for joint limits to configure. Ignored if index != -1.
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Enable">
            <summary>
            If false, disable (set all to PI, -PI) limits.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.ToDesired">
            <summary>
            If true, set limits to accommodate current desired angles.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Restore">
            <summary>
            Return to cached defaults?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.ToCurAnimation">
            <summary>
            If true, set limits to the current animated limits.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Index">
            <summary>
            Index of effector to configure.  Set to -1 to use mask.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Lean1">
            <summary>
            Custom limit values to use if not setting limits to desired. Limits are RAGE-native, not NM-wrapper-native.
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Lean2">
            <summary>
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Twist">
            <summary>
            </summary>
            <remarks>
            Default value = 1.6f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureLimitsHelper.Margin">
            <summary>
            Joint limit margin to add to current animation limits when using those to set runtime limits.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureSoftLimitHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureSoftLimitHelper for sending a ConfigureSoftLimit <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureSoftLimit <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.Index">
            <summary>
            Select limb that the soft limit is going to be applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.Stiffness">
            <summary>
            Stiffness of the soft limit.
            Parameter is used to calculate spring term that contributes to the desired acceleration.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.Damping">
            <summary>
            Damping of the soft limit.
            Parameter is used to calculate damper term that contributes to the desired acceleration.
            To have the system critically dampened set it to 1.0.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.9f.
            Max value = 1.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.LimitAngle">
            <summary>
            Soft limit angle.
            Positive angle in RAD, measured relatively either from hard limit maxAngle (approach direction = -1) or minAngle (approach direction = 1).
            This angle will be clamped if outside the joint hard limit range.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.ApproachDirection">
            <summary>
            Limit angle can be measured relatively to joints hard limit minAngle or maxAngle.
            Set it to +1 to measure soft limit angle relatively to hard limit minAngle that corresponds to the maximum stretch of the elbow.
            Set it to -1 to measure soft limit angle relatively to hard limit maxAngle that corresponds to the maximum stretch of the knee.
            </summary>
            <remarks>
            Default value = 1.
            Min value = -1.
            Max value = 1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureSoftLimitHelper.VelocityScaled">
            <summary>
            Scale stiffness based on character angular velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureShotInjuredArmHelper">
            <summary>
            This single message allows you to configure the injured arm reaction during shot.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureShotInjuredArmHelper for sending a ConfigureShotInjuredArm <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureShotInjuredArm <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure the injured arm reaction during shot.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.InjuredArmTime">
            <summary>
            Length of the reaction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.HipYaw">
            <summary>
            Amount of hip twist.  (Negative values twist into bullet direction - probably not what is wanted).
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.HipRoll">
            <summary>
            Amount of hip roll.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.ForceStepExtraHeight">
            <summary>
            Additional height added to stepping foot.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.7f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.ForceStep">
            <summary>
            Force a step to be taken whether pushed out of balance or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.StepTurn">
            <summary>
            Turn the character using the balancer.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.VelMultiplierStart">
            <summary>
            Start velocity where parameters begin to be ramped down to zero linearly.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.VelMultiplierEnd">
            <summary>
            End velocity of ramp where parameters are scaled to zero.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 1.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.VelForceStep">
            <summary>
            Velocity above which a step is not forced.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.VelStepTurn">
            <summary>
            Velocity above which a stepTurn is not asked for.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredArmHelper.VelScales">
            <summary>
            Use the velocity scaling parameters.
            Tune for standing still then use velocity scaling to make sure a running character stays balanced (the turning tends to make the character fall over more at speed).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureShotInjuredLegHelper">
            <summary>
            This single message allows you to configure the injured leg reaction during shot.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureShotInjuredLegHelper for sending a ConfigureShotInjuredLeg <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureShotInjuredLeg <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            This single message allows you to configure the injured leg reaction during shot.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.TimeBeforeCollapseWoundLeg">
            <summary>
            Time before a wounded leg is set to be weak and cause the character to collapse.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryTime">
            <summary>
            Leg injury duration (reaction to being shot in leg).
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegForceStep">
            <summary>
            Force a step to be taken whether pushed out of balance or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegLimpBend">
            <summary>
            Bend the legs via the balancer by this amount if stepping on the injured leg.
            0.2 seems a good default.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegLiftTime">
            <summary>
            Leg lift duration (reaction to being shot in leg).
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjury">
            <summary>
            Leg injury - leg strength is reduced.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryHipPitch">
            <summary>
            Leg injury bend forwards amount when not lifting leg.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryLiftHipPitch">
            <summary>
            Leg injury bend forwards amount when lifting leg.
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjurySpineBend">
            <summary>
            Leg injury bend forwards amount when not lifting leg.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureShotInjuredLegHelper.LegInjuryLiftSpineBend">
            <summary>
            Leg injury bend forwards amount when lifting leg.
            (Lifting happens when not stepping with other leg).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.DefineAttachedObjectHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the DefineAttachedObjectHelper for sending a DefineAttachedObject <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the DefineAttachedObject <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.DefineAttachedObjectHelper.PartIndex">
            <summary>
            Index of part to attach to.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.DefineAttachedObjectHelper.ObjectMass">
            <summary>
            Mass of the attached object.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.DefineAttachedObjectHelper.WorldPos">
            <summary>
            World position of attached object's center of mass. Must be updated each frame.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ForceToBodyPartHelper">
            <summary>
            Apply an impulse to a named body part.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ForceToBodyPartHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ForceToBodyPartHelper for sending a ForceToBodyPart <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ForceToBodyPart <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Apply an impulse to a named body part.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceToBodyPartHelper.PartIndex">
            <summary>
            Part or link or bound index.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 28.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceToBodyPartHelper.Force">
            <summary>
            Force to apply.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -50.0f, 0.0f).
            Min value = -100000.0f.
            Max value = 100000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceToBodyPartHelper.ForceDefinedInPartSpace">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.LeanInDirectionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the LeanInDirectionHelper for sending a LeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the LeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.LeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.LeanRandomHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the LeanRandomHelper for sending a LeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the LeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.LeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanRandomHelper.ChangeTimeMin">
            <summary>
            Minimum time until changing direction.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.LeanToPositionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the LeanToPositionHelper for sending a LeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the LeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.LeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.LeanTowardsObjectHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the LeanTowardsObjectHelper for sending a LeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the LeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.LeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to lean towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.LeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to lean towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HipsLeanInDirectionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanInDirectionHelper for sending a HipsLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HipsLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HipsLeanRandomHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanRandomHelper for sending a HipsLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HipsLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanRandomHelper.ChangeTimeMin">
            <summary>
            Min time until changing direction.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HipsLeanToPositionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanToPositionHelper for sending a HipsLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HipsLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HipsLeanTowardsObjectHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HipsLeanTowardsObjectHelper for sending a HipsLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HipsLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to lean hips towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HipsLeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to lean hips towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ForceLeanInDirectionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanInDirectionHelper for sending a ForceLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ForceLeanInDirection <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanInDirectionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanInDirectionHelper.Dir">
            <summary>
            Direction to lean in.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanInDirectionHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ForceLeanRandomHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanRandomHelper for sending a ForceLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ForceLeanRandom <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanRandomHelper.LeanAmountMin">
            <summary>
            Minimum amount of lean.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanRandomHelper.LeanAmountMax">
            <summary>
            Maximum amount of lean.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanRandomHelper.ChangeTimeMin">
            <summary>
            Min time until changing direction.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanRandomHelper.ChangeTimeMax">
            <summary>
            Maximum time until changing direction.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanRandomHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ForceLeanToPositionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanToPositionHelper for sending a ForceLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ForceLeanToPosition <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanToPositionHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanToPositionHelper.Pos">
            <summary>
            Position to head towards.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanToPositionHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ForceLeanTowardsObjectHelper for sending a ForceLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ForceLeanTowardsObject <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.LeanAmount">
            <summary>
            Amount of lean, 0 to about 0.5. -ve will move away from the target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.Offset">
            <summary>
            Offset from instance position added when calculating position to lean to.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.InstanceIndex">
            <summary>
            LevelIndex of object to move towards.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.BoundIndex">
            <summary>
            BoundIndex of object to move towards (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ForceLeanTowardsObjectHelper.BodyPart">
            <summary>
            Body part that the force is applied to.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetStiffnessHelper">
            <summary>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetStiffnessHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetStiffnessHelper for sending a SetStiffness <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetStiffness <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to manually set the body stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetStiffnessHelper.BodyStiffness">
            <summary>
            Stiffness of whole character.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 2.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetStiffnessHelper.Damping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetStiffnessHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetMuscleStiffnessHelper">
            <summary>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetMuscleStiffnessHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetMuscleStiffnessHelper for sending a SetMuscle stiffness <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetMuscle stiffness <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to manually set the muscle stiffness values -before using Active Pose to drive to an animated pose, for example.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetMuscleStiffnessHelper.MuscleStiffness">
            <summary>
            Muscle stiffness of joint/s.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetMuscleStiffnessHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetWeaponModeHelper">
            <summary>
            Use this message to set the character's weapon mode.  This is an alternativeto the setWeaponMode public function.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetWeaponModeHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetWeaponModeHelper for sending a SetWeaponMode <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetWeaponMode <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to set the character's weapon mode.  This is an alternativeto the setWeaponMode public function.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetWeaponModeHelper.WeaponMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.WeaponMode.PistolRight"/>.
            </remarks>.
        </member>
        <member name="T:GTA.NaturalMotion.RegisterWeaponHelper">
            <summary>
            Use this message to register weapon.  This is an alternativeto the registerWeapon public function.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.RegisterWeaponHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the RegisterWeaponHelper for sending a RegisterWeapon <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the RegisterWeapon <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Use this message to register weapon.  This is an alternativeto the registerWeapon public function.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.Hand">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.Hand.Right"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.LevelIndex">
            <summary>
            Level index of the weapon.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.ConstraintHandle">
            <summary>
            Pointer to the hand-gun constraint handle.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToHandA">
            <summary>
            A vector of the gunToHand matrix.  The gunToHandMatrix is the desired gunToHandMatrix in the aimingPose. (The gunToHandMatrix when pointGun starts can be different so will be blended to this desired one).
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToHandB">
            <summary>
            B vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 1.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToHandC">
            <summary>
            C vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToHandD">
            <summary>
            D vector of the gunToHand matrix.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToMuzzleInGun">
            <summary>
            Gun center to muzzle expressed in gun co-ordinates.  To get the line of sight/barrel of the gun. Assumption: the muzzle direction is always along the same primary axis of the gun.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RegisterWeaponHelper.GunToButtInGun">
            <summary>
            Gun center to butt expressed in gun co-ordinates.  The gun pivots around this point when aiming.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ShotRelaxHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotRelaxHelper for sending a ShotRelax <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotRelax <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ShotRelaxHelper.RelaxPeriodUpper">
            <summary>
            Time over which to relax to full relaxation for upper body.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotRelaxHelper.RelaxPeriodLower">
            <summary>
            Time over which to relax to full relaxation for lower body.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.FireWeaponHelper">
            <summary>
            One shot message apply a force to the hand as we fire the gun that should be in this hand.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.FireWeaponHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the FireWeaponHelper for sending a FireWeapon <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the FireWeapon <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            One shot message apply a force to the hand as we fire the gun that should be in this hand.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.FiredWeaponStrength">
            <summary>
            The force of the gun.
            </summary>
            <remarks>
            Default value = 1000.0f.
            Min value = 0.0f.
            Max value = 10000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.GunHandEnum">
            <summary>
            Which hand is the gun in.
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.Hand.Left"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.ApplyFireGunForceAtClavicle">
            <summary>
            Should we apply some of the force at the shoulder. Force double handed weapons (Ak47 etc).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.InhibitTime">
            <summary>
            Minimum time before next fire impulse.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.Direction">
            <summary>
            Direction of impulse in gun frame.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FireWeaponHelper.Split">
            <summary>
            Split force between hand and clavicle when applyFireGunForceAtClavicle is true. 1 = all hand, 0 = all clavicle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ConfigureConstraintsHelper">
            <summary>
            One shot to give state of constraints on character and response to constraints.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ConfigureConstraintsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ConfigureConstraintsHelper for sending a ConfigureConstraints <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ConfigureConstraints <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            One shot to give state of constraints on character and response to constraints.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.HandCuffs">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.HandCuffsBehindBack">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.LegCuffs">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.RightDominant">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.PassiveMode">
            <summary>
            0 setCurrent, 1= IK to dominant, (2=pointGunLikeIK //not implemented).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 5.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.BespokeBehavior">
            <summary>
            Not implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ConfigureConstraintsHelper.Blend2ZeroPose">
            <summary>
            Blend Arms to zero pose.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.StayUprightHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the StayUprightHelper for sending a StayUpright <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the StayUpright <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.UseForces">
            <summary>
            Enable force based constraint.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.UseTorques">
            <summary>
            Enable torque based constraint.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.LastStandMode">
            <summary>
            Uses position/orientation control on the spine and drifts in the direction of bullets.  This ignores all other stayUpright settings.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.LastStandSinkRate">
            <summary>
            The sink rate (higher for a faster drop).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.LastStandHorizDamping">
            <summary>
            Higher values for more damping.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.LastStandMaxTime">
            <summary>
            Max time allowed in last stand mode.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TurnTowardsBullets">
            <summary>
            Use cheat torques to face the direction of bullets if not facing too far away.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.VelocityBased">
            <summary>
            Make strength of constraint function of COM velocity.  Uses -1 for forceDamping if the damping is positive.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TorqueOnlyInAir">
            <summary>
            Only apply torque based constraint when airBorne.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceStrength">
            <summary>
            Strength of constraint.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceDamping">
            <summary>
            Damping in constraint: -1 makes it scale automagically with forceStrength.  Other negative values will scale this automagic damping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceFeetMult">
            <summary>
            Multiplier to the force applied to the feet.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceSpine3Share">
            <summary>
            Share of pelvis force applied to spine3.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceLeanReduction">
            <summary>
            How much the character lean is taken into account when reducing the force.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceInAirShare">
            <summary>
            Share of the feet force to the airborne foot.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceMin">
            <summary>
            When min and max are greater than 0 the constraint strength is determined from character strength, scaled into the range given by min and max.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceMax">
            <summary>
            See above.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceSaturationVel">
            <summary>
            When in velocityBased mode, the COM velocity at which constraint reaches maximum strength (forceStrength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.ForceThresholdVel">
            <summary>
            When in velocityBased mode, the COM velocity above which constraint starts applying forces.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TorqueStrength">
            <summary>
            Strength of torque based constraint.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TorqueDamping">
            <summary>
            Damping of torque based constraint.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TorqueSaturationVel">
            <summary>
            When in velocityBased mode, the COM velocity at which constraint reaches maximum strength (torqueStrength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.TorqueThresholdVel">
            <summary>
            When in velocityBased mode, the COM velocity above which constraint starts applying torques.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.SupportPosition">
            <summary>
            Distance the foot is behind Com projection that is still considered able to generate the support for the upright constraint.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.NoSupportForceMult">
            <summary>
            Still apply this fraction of the upright constaint force if the foot is not in a position (defined by supportPosition) to generate the support for the upright constraint.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.StepUpHelp">
            <summary>
            Strength of cheat force applied upwards to spine3 to help the character up steps/slopes.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.StayUpAcc">
            <summary>
            How much the cheat force takes into account the acceleration of moving platforms.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StayUprightHelper.StayUpAccMax">
            <summary>
            The maximum floorAcceleration (of a moving platform) that the cheat force takes into account.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.StopAllBehavioursHelper">
            <summary>
            Send this message to immediately stop all behaviors from executing.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.StopAllBehavioursHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the StopAllBehaviorsHelper for sending a StopAllBehaviors <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the StopAllBehaviors <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Send this message to immediately stop all behaviors from executing.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetCharacterStrengthHelper">
            <summary>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1].
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetCharacterStrengthHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterStrengthHelper for sending a SetCharacterStrength <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetCharacterStrength <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets character's strength on the dead-granny-to-healthy-terminator scale: [0..1].
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterStrengthHelper.CharacterStrength">
            <summary>
            Strength of character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetCharacterHealthHelper">
            <summary>
            Sets character's health on the dead-to-alive scale: [0..1].
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetCharacterHealthHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterHealthHelper for sending a SetCharacterHealth <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetCharacterHealth <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets character's health on the dead-to-alive scale: [0..1].
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterHealthHelper.CharacterHealth">
            <summary>
            Health of character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetFallingReactionHelper">
            <summary>
            Sets the type of reaction if catchFall is called.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetFallingReactionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetFallingReactionHelper for sending a SetFallingReaction <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetFallingReaction <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets the type of reaction if catchFall is called.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.HandsAndKnees">
            <summary>
            Set to true to get handsAndKnees catchFall if catchFall called. If true allows the dynBalancer to stay on during the catchfall and modifies the catch fall to give a more alive looking performance (hands and knees for front landing or sitting up for back landing).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.CallRDS">
            <summary>
            If true catchFall will call rollDownstairs if comVel GT comVelRDSThresh - prevents excessive sliding in catchFall.  Was previously only true for handsAndKnees.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.ComVelRDSThresh">
            <summary>
            ComVel above which rollDownstairs will start - prevents excessive sliding in catchFall.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.ResistRolling">
            <summary>
            For rds catchFall only: True to resist rolling motion (rolling motion is set off by ub contact and a sliding velocity), false to allow more of a continuous rolling  (rolling motion is set off at a sliding velocity).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.ArmReduceSpeed">
            <summary>
            Strength is reduced in the catchFall when the arms contact the ground.  0.2 is good for handsAndKnees.  2.5 is good for normal catchFall, anything lower than 1.0 for normal catchFall may lead to bad catchFall poses.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.ReachLengthMultiplier">
            <summary>
            Reach length multiplier that scales characters arm topological length, value in range from (0, 1 GT  where 1.0 means reach length is maximum.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.3f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.InhibitRollingTime">
            <summary>
            Time after hitting ground that the catchFall can call rds.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.ChangeFrictionTime">
            <summary>
            Time after hitting ground that the catchFall can change the friction of parts to inhibit sliding.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.GroundFriction">
            <summary>
            8.0 was used on yanked) Friction multiplier on body parts when on ground.  Character can look too slidy with groundFriction = 1.  Higher values give a more jerky reaction but this seems timestep dependent especially for dragged by the feet.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.FrictionMin">
            <summary>
            Min Friction of an impact with a body part (not head, hands or feet) - to increase friction of slippy environment to get character to roll better.  Applied in catchFall and rollUp(rollDownStairs).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.FrictionMax">
            <summary>
            Max Friction of an impact with a body part (not head, hands or feet) - to increase friction of slippy environment to get character to roll better.  Applied in catchFall and rollUp(rollDownStairs).
            </summary>
            <remarks>
            Default value = 9999.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.StopOnSlopes">
            <summary>
            Apply tactics to help stop on slopes.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.StopManual">
            <summary>
            Override slope value to manually force stopping on flat ground.  Encourages character to come to rest face down or face up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.StoppedStrengthDecay">
            <summary>
            Speed at which strength reduces when stopped.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.SpineLean1Offset">
            <summary>
            Bias spine post towards hunched (away from arched).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.RiflePose">
            <summary>
            Hold rifle in a safe position to reduce complications with collision.  Only applied if holding a rifle.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.HkHeadAvoid">
            <summary>
            Enable head ground avoidance when handsAndKnees is true.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.AntiPropClav">
            <summary>
            Discourage the character getting stuck propped up by elbows when falling backwards - by inhibiting backwards moving clavicles (keeps the arms slightly wider).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.AntiPropWeak">
            <summary>
            Discourage the character getting stuck propped up by elbows when falling backwards - by weakening the arms as soon they hit the floor.  (Also stops the hands lifting up when flat on back).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.HeadAsWeakAsArms">
            <summary>
            Head weakens as arms weaken. If false and antiPropWeak when falls onto back doesn't loosen neck so early (matches bodyStrength instead).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFallingReactionHelper.SuccessStrength">
            <summary>
            When bodyStrength is less than successStrength send a success feedback - DO NOT GO OUTSIDE MIN/MAX PARAMETER VALUES OTHERWISE NO SUCCESS FEEDBACK WILL BE SENT.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.3f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetCharacterUnderwaterHelper">
            <summary>
            Sets viscosity applied to damping limbs.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetCharacterUnderwaterHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterUnderwaterHelper for sending a SetCharacterUnderwater <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetCharacterUnderwater <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Sets viscosity applied to damping limbs.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterUnderwaterHelper.Underwater">
            <summary>
            Is character underwater?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterUnderwaterHelper.Viscosity">
            <summary>
            Viscosity applied to character's parts.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterUnderwaterHelper.GravityFactor">
            <summary>
            Gravity factor applied to character.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterUnderwaterHelper.Stroke">
            <summary>
            Swimming force applied to character as a function of handVelocity and footVelocity.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1000.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterUnderwaterHelper.LinearStroke">
            <summary>
            Swimming force (linearStroke=true,False) = (f(v),f(v*v)).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetCharacterCollisionsHelper">
            <summary>
            SetCharacterCollisions:.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetCharacterCollisionsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterCollisionsHelper for sending a SetCharacterCollisions <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetCharacterCollisions <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            SetCharacterCollisions:.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.Spin">
            <summary>
            Sliding friction turned into spin 80.0 (used in demo videos) good for rest of default params below.  If 0.0 then no collision enhancement.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.MaxVelocity">
            <summary>
            Torque = spin*(relative velocity) up to this maximum for relative velocity.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.ApplyToAll">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.ApplyToSpine">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.ApplyToThighs">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.ApplyToClavicles">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.ApplyToUpperArms">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.FootSlip">
            <summary>
            Allow foot slipping if collided.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterCollisionsHelper.VehicleClass">
            <summary>
            ClassType of the object against which to enhance the collision.  All character vehicle interaction (e.g. braceForImpact glancing spins) relies on this value so EDIT WISELY. If it is used for things other than vehicles then NM should be informed.
            </summary>
            <remarks>
            Default value = 15.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetCharacterDampingHelper">
            <summary>
            Damp out cartwheeling and somersaulting above a certain threshold.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetCharacterDampingHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetCharacterDampingHelper for sending a SetCharacterDamping <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetCharacterDamping <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Damp out cartwheeling and somersaulting above a certain threshold.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.SomersaultThresh">
            <summary>
            Somersault AngularMomentum measure above which we start damping - try 34.0.  Falling over straight backwards gives 54 on hitting ground.
            </summary>
            <remarks>
            Default value = 34.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.SomersaultDamp">
            <summary>
            Amount to damp somersaulting by (spinning around left/right axis) - try 0.45.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.CartwheelThresh">
            <summary>
            Cartwheel AngularMomentum measure above which we start damping - try 27.0.
            </summary>
            <remarks>
            Default value = 27.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.CartwheelDamp">
            <summary>
            Amount to damp somersaulting by (spinning around front/back axis) - try 0.8.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.VehicleCollisionTime">
            <summary>
            Time after impact with a vehicle to apply characterDamping. -ve values mean always apply whether collided with vehicle or not. =0.0 never apply. =timestep apply for only that frame.  A typical roll from being hit by a car lasts about 4secs.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetCharacterDampingHelper.V2">
            <summary>
            If true damping is proportional to Angular momentum squared.  If false proportional to Angular momentum.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SetFrictionScaleHelper">
            <summary>
            SetFrictionScale:.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SetFrictionScaleHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SetFrictionScaleHelper for sending a SetFrictionScale <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SetFrictionScale <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            SetFrictionScale:.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFrictionScaleHelper.Scale">
            <summary>
            Friction scale to be applied to parts in mask.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFrictionScaleHelper.GlobalMin">
            <summary>
            Character-wide minimum impact friction. Affects all parts (not just those in mask).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1000000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFrictionScaleHelper.GlobalMax">
            <summary>
            Character-wide maximum impact friction. Affects all parts (not just those in mask).
            </summary>
            <remarks>
            Default value = 999999.0f.
            Min value = 0.0f.
            Max value = 1000000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SetFrictionScaleHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.AnimPoseHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the AnimPoseHelper for sending a AnimPose <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the AnimPose <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffness">
            <summary>
            Muscle stiffness of masked joints. -values mean don't apply (just use defaults or ones applied by behaviors - safer if you are going to return to a behavior).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.Stiffness">
            <summary>
            Stiffness of masked joints. -ve values mean don't apply stiffness or damping (just use defaults or ones applied by behaviors).  If you are using animpose fullbody on its own then this gives the opprtunity to use setStffness and setMuscle stiffness messages to set up the character's muscles. Mmmmtodo get rid of this -ve.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.1f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.Damping">
            <summary>
            Damping of masked joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.EffectorMask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation).
            </summary>
            <remarks>
            Default value = "ub".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.OverideHeadlook">
            <summary>
            Overide Headlook behavior (if animPose includes the head).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.OveridePointArm">
            <summary>
            Overide PointArm behavior (if animPose includes the arm/arms).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.OveridePointGun">
            <summary>
            Overide PointGun behavior (if animPose includes the arm/arms)//mmmmtodo not used at moment.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.UseZMPGravityCompensation">
            <summary>
            If true then modify gravity compensation based on stance (can reduce gravity compensation to zero if cofm is outside of balance area).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravityCompensation">
            <summary>
            Gravity compensation applied to joints in the effectorMask. If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffnessLeftArm">
            <summary>
            Muscle stiffness applied to left arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffnessRightArm">
            <summary>
            Muscle stiffness applied to right arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffnessSpine">
            <summary>
            Muscle stiffness applied to spine (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffnessLeftLeg">
            <summary>
            Muscle stiffness applied to left leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.MuscleStiffnessRightLeg">
            <summary>
            Muscle stiffness applied to right leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.StiffnessLeftArm">
            <summary>
            Stiffness  applied to left arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.StiffnessRightArm">
            <summary>
            Stiffness applied to right arm (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.StiffnessSpine">
            <summary>
            Stiffness applied to spine (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.StiffnessLeftLeg">
            <summary>
            Stiffness applied to left leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.StiffnessRightLeg">
            <summary>
            Stiffness applied to right leg (applied after stiffness). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampingLeftArm">
            <summary>
            Damping applied to left arm (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampingRightArm">
            <summary>
            Damping applied to right arm (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampingSpine">
            <summary>
            Damping applied to spine (applied after stiffness). If stiffness-ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampingLeftLeg">
            <summary>
            Damping applied to left leg (applied after stiffness). If stiffness-ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampingRightLeg">
            <summary>
            Damping applied to right leg (applied after stiffness). If stiffness -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravCompLeftArm">
            <summary>
            Gravity compensation applied to left arm (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravCompRightArm">
            <summary>
            Gravity compensation applied to right arm (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravCompSpine">
            <summary>
            Gravity compensation applied to spine (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravCompLeftLeg">
            <summary>
            Gravity compensation applied to left leg (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.GravCompRightLeg">
            <summary>
            Gravity compensation applied to right leg (applied after gravityCompensation). If -ve then not applied (use current setting).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.ConnectedLeftHand">
            <summary>
            Is the left hand constrained to the world/ an object: -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.ConnectedRightHand">
            <summary>
            Is the right hand constrained to the world/ an object: -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = 0.
            Min value = -1.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.ConnectedLeftFoot">
            <summary>
            Is the left foot constrained to the world/ an object: -2=do not set in animpose (e.g. let the balancer decide), -1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.ConnectedRightFoot">
            <summary>
            Is the right foot constrained to the world/ an object: -2=do not set in animpose (e.g. let the balancer decide),-1=auto decide by impact info, 0=no, 1=part fully constrained (not implemented:, 2=part point constraint, 3=line constraint).
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.AnimSource">
            <summary>
            </summary>
        </member>
        <member name="P:GTA.NaturalMotion.AnimPoseHelper.DampenSideMotionInstanceIndex">
            <summary>
            LevelIndex of object to dampen side motion relative to. -1 means not used.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ArmsWindmillHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ArmsWindmillHelper for sending a ArmsWindmill <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ArmsWindmill <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftPartID">
            <summary>
            ID of part that the circle uses as local space for positioning.
            </summary>
            <remarks>
            Default value = 10.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftRadius1">
            <summary>
            Radius for first axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftRadius2">
            <summary>
            Radius for second axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftSpeed">
            <summary>
            Speed of target around the circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftNormal">
            <summary>
            Euler Angles orientation of circle in space of part with part ID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.2f, 0.2f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftCentre">
            <summary>
            Centre of circle in the space of partID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.5f, -0.1f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightPartID">
            <summary>
            ID of part that the circle uses as local space for positioning.
            </summary>
            <remarks>
            Default value = 10.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightRadius1">
            <summary>
            Radius for first axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightRadius2">
            <summary>
            Radius for second axis of ellipse.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightSpeed">
            <summary>
            Speed of target around the circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightNormal">
            <summary>
            Euler Angles orientation of circle in space of part with part ID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -0.2f, -0.2f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightCentre">
            <summary>
            Centre of circle in the space of partID.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, -0.5f, -0.1f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.ShoulderStiffness">
            <summary>
            Stiffness applied to the shoulders.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.ShoulderDamping">
            <summary>
            Damping applied to the shoulders.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.ElbowStiffness">
            <summary>
            Stiffness applied to the elbows.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 1.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.ElbowDamping">
            <summary>
            Damping applied to the elbows.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.LeftElbowMin">
            <summary>
            Minimum left elbow bend.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.7f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.RightElbowMin">
            <summary>
            Minimum right elbow bend.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.7f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.PhaseOffset">
            <summary>
            Phase offset(degrees) when phase synchronization is turned on.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -360.0f.
            Max value = 360.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.DragReduction">
            <summary>
            How much to compensate for movement of character/target.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.IKtwist">
            <summary>
            Angle of elbow around twist axis ?.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.AngVelThreshold">
            <summary>
            Value of character angular speed above which adaptive arm motion starts.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.AngVelGain">
            <summary>
            Multiplies angular speed of character to get speed of arms.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.MirrorMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.MirrorMode.Mirrored"/>.
            If <see cref="F:GTA.NaturalMotion.MirrorMode.Parallel"/> leftArm parameters are used.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.AdaptiveMode">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.AdaptiveMode.NotAdaptive"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.ForceSync">
            <summary>
            Toggles phase synchronization.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.UseLeft">
            <summary>
            Use the left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.UseRight">
            <summary>
            Use the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillHelper.DisableOnImpact">
            <summary>
            If true, each arm will stop windmilling if it hits the ground.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ArmsWindmillAdaptiveHelper for sending a ArmsWindmillAdaptive <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ArmsWindmillAdaptive <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.AngSpeed">
            <summary>
            Controls the speed of the windmilling.
            </summary>
            <remarks>
            Default value = 6.3f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.BodyStiffness">
            <summary>
            Controls how stiff the rest of the body is.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.Amplitude">
            <summary>
            Controls how large the motion is, higher values means the character waves his arms in a massive arc.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.Phase">
            <summary>
            Set to a non-zero value to desynchronize the left and right arms motion.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -4.0f.
            Max value = 8.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.ArmStiffness">
            <summary>
            How stiff the arms are controls how pronounced the windmilling motion appears.
            </summary>
            <remarks>
            Default value = 14.1f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.LeftElbowAngle">
            <summary>
            If not negative then left arm will blend to this angle.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.RightElbowAngle">
            <summary>
            If not negative then right arm will blend to this angle.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.Lean1mult">
            <summary>
            0 arms go up and down at the side. 1 circles. 0..1 elipse.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.Lean1offset">
            <summary>
            0.f center of circle at side.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -6.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.ElbowRate">
            <summary>
            Rate at which elbow tries to match *ElbowAngle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 6.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.ArmDirection">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.ArmDirections.Adaptive"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.DisableOnImpact">
            <summary>
            If true, each arm will stop windmilling if it hits the ground.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.SetBackAngles">
            <summary>
            If true, back angles will be set to compliment arms windmill.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.UseAngMom">
            <summary>
            If true, use angular momentum about com to choose arm circling direction. Otherwise use com angular velocity.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.BendLeftElbow">
            <summary>
            If true, bend the left elbow to give a stunt man type scramble look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.BendRightElbow">
            <summary>
            If true, bend the right elbow to give a stunt man type scramble look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ArmsWindmillAdaptiveHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "ub".
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BalancerCollisionsReactionHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BalancerCollisionsReactionHelper for sending a BalancerCollisionsReaction <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BalancerCollisionsReaction <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.NumStepsTillSlump">
            <summary>
            Begin slump and stop stepping after this many steps.
            </summary>
            <remarks>
            Default value = 4.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.Stable2SlumpTime">
            <summary>
            Time after becoming stable leaning against a wall that slump starts.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ExclusionZone">
            <summary>
            Steps are ihibited to not go closer to the wall than this (after impact).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.FootFrictionMultStart">
            <summary>
            Friction multiplier applied to feet when slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.FootFrictionMultRate">
            <summary>
            Friction multiplier reduced by this amount every second after slump starts (only if character is not slumping).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.BackFrictionMultStart">
            <summary>
            Friction multiplier applied to back when slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.BackFrictionMultRate">
            <summary>
            Friction multiplier reduced by this amount every second after slump starts (only if character is not slumping).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ImpactLegStiffReduction">
            <summary>
            Reduce the stiffness of the legs by this much as soon as an impact is detected.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SlumpLegStiffReduction">
            <summary>
            Reduce the stiffness of the legs by this much as soon as slump starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SlumpLegStiffRate">
            <summary>
            Rate at which the stiffness of the legs is reduced during slump.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 50.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ReactTime">
            <summary>
            Time that the character reacts to the impact with ub flinch and writhe.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ImpactExagTime">
            <summary>
            Time that the character exaggerates impact with spine.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinTime">
            <summary>
            Duration that the glance torque is applied for.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinMag">
            <summary>
            Magnitude of the glance torque.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.GlanceSpinDecayMult">
            <summary>
            Multiplier used when decaying torque spin over time.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColWithIndex">
            <summary>
            Used so impact with the character that is pushing you over doesn't set off the behavior.
            </summary>
            <remarks>
            Default value = -2.
            Min value = -2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SlumpMode">
            <summary>
            0=Normal slump(less movement then slump and movement LT small), 1=fast slump, 2=less movement then slump.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ReboundMode">
            <summary>
            0=fall2knees/slump if shot not running, 1=stumble, 2=slump, 3=restart.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColMassBelow">
            <summary>
            Collisions with non-fixed objects with mass below this will not set this behavior off (e.g. ignore guns).
            </summary>
            <remarks>
            Default value = 20.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ForwardMode">
            <summary>
            0=slump, 1=fallToKnees if shot is running, otherwise slump.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.TimeToForward">
            <summary>
            Time after a forwards impact before forwardMode is called (leave sometime for a rebound or brace - the min of 0.1 is to ensure fallOverWall can start although it probably needs only 1or2 frames for the probes to return).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ReboundForce">
            <summary>
            If forwards impact only: cheat force to try to get the character away from the wall.  3 is a good value.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.BraceWall">
            <summary>
            Brace against wall if forwards impact(at the moment only if bodyBalance is running/in charge of arms).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.IgnoreColVolumeBelow">
            <summary>
            Collisions with non-fixed objects with volume below this will not set this behavior off.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.FallOverWallDrape">
            <summary>
            Use fallOverWall as the main drape reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.FallOverHighWalls">
            <summary>
            Trigger fall over wall if hit up to spine2 else only if hit up to spine1.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.Snap">
            <summary>
            Add a Snap to when you hit a wall to emphasize the hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapMag">
            <summary>
            The magnitude of the snap reaction.
            </summary>
            <remarks>
            Default value = -0.6f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapDirectionRandomness">
            <summary>
            The character snaps in a prescribed way (decided by bullet direction) - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapLeftArm">
            <summary>
            Snap the leftArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapRightArm">
            <summary>
            Snap the rightArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapLeftLeg">
            <summary>
            Snap the leftLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapRightLeg">
            <summary>
            Snap the rightLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapSpine">
            <summary>
            Snap the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapNeck">
            <summary>
            Snap the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapPhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapHipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.UnSnapInterval">
            <summary>
            Interval before applying reverse snap.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.UnSnapRatio">
            <summary>
            The magnitude of the reverse snap.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.SnapUseTorques">
            <summary>
            Use torques to make the snap otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ImpactWeaknessZeroDuration">
            <summary>
            Duration for which the character's upper body stays at minimum stiffness (not quite zero).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ImpactWeaknessRampDuration">
            <summary>
            Duration of the ramp to bring the character's upper body stiffness back to normal levels.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ImpactLoosenessAmount">
            <summary>
            How loose the character is on impact. Between 0 and 1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictim">
            <summary>
            Detected an object behind a shot victim in the direction of a bullet?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictimPos">
            <summary>
            The intersection pos of a detected object behind a shot victim in the direction of a bullet.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BalancerCollisionsReactionHelper.ObjectBehindVictimNormal">
            <summary>
            The normal of a detected object behind a shot victim in the direction of a bullet.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BodyBalanceHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BodyBalanceHelper for sending a BodyBalance <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BodyBalance <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmStiffness">
            <summary>
            NB. WAS m_bodyStiffness ClaviclesStiffness=9.0f.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.Elbow">
            <summary>
            How much the elbow swings based on the leg movement.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.Shoulder">
            <summary>
            How much the shoulder(lean1) swings based on the leg movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmDamping">
            <summary>
            NB. WAS m_damping NeckDamping=1 ClaviclesDamping=1.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SpineStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SomersaultAngle">
            <summary>
            Multiplier of the somersault 'angle' (lean forward/back) for arms out (lean2).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SomersaultAngleThreshold">
            <summary>
            Amount of somersault 'angle' before m_somersaultAngle is used for ArmsOut. Unless drunk - DO NOT EXCEED 0.8.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SideSomersaultAngle">
            <summary>
            Amount of side somersault 'angle' before sideSomersault is used for ArmsOut. Unless drunk - DO NOT EXCEED 0.8.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SideSomersaultAngleThreshold">
            <summary>
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BackwardsAutoTurn">
            <summary>
            Automatically turn around if moving backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TurnWithBumpRadius">
            <summary>
            0.9 is a sensible value.  If pusher within this distance then turn to get out of the way of the pusher.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BackwardsArms">
            <summary>
            Bend elbows, relax shoulders and inhibit spine twist when moving backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BlendToZeroPose">
            <summary>
            Blend upper body to zero pose as the character comes to rest. If false blend to a stored pose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmsOutOnPush">
            <summary>
            Put arms out based on lean2 of legs, or angular velocity (lean or twist), or lean (front/back or side/side).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmsOutOnPushMultiplier">
            <summary>
            Arms out based on lean2 of the legs to simulate being pushed.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmsOutOnPushTimeout">
            <summary>
            Number of seconds before turning off the armsOutOnPush response only for Arms out based on lean2 of the legs (NOT for the angle or angular velocity).
            </summary>
            <remarks>
            Default value = 1.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ReturningToBalanceArmsOut">
            <summary>
            Range 0:1 0 = don't raise arms if returning to upright position, 0.x = 0.x*raise arms based on angvel and 'angle' settings, 1 = raise arms based on angvel and 'angle' settings.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmsOutStraightenElbows">
            <summary>
            Multiplier for straightening the elbows based on the amount of arms out(lean2) 0 = dont straighten elbows. Otherwise straighten elbows proportionately to armsOut.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ArmsOutMinLean2">
            <summary>
            Minimum desiredLean2 applied to shoulder (to stop arms going above shoulder height or not).
            </summary>
            <remarks>
            Default value = -9.9f.
            Min value = -10.0f.
            Max value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.SpineDamping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.UseBodyTurn">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ElbowAngleOnContact">
            <summary>
            On contact with upperbody the desired elbow angle is set to at least this value.
            </summary>
            <remarks>
            Default value = 1.9f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BendElbowsTime">
            <summary>
            Time after contact (with Upper body) that the min m_elbowAngleOnContact is applied.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BendElbowsGait">
            <summary>
            Minimum desired angle of elbow during non contact arm swing.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HipL2ArmL2">
            <summary>
            Mmmmdrunk = 0.2 multiplier of hip lean2 (star jump) to give shoulder lean2 (flapping).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ShoulderL2">
            <summary>
            Mmmmdrunk = 0.7 shoulder lean2 offset.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ShoulderL1">
            <summary>
            Mmmmdrunk 1.1 shoulder lean1 offset (+ve frankenstein).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ShoulderTwist">
            <summary>
            Mmmmdrunk = 0.0 shoulder twist.
            </summary>
            <remarks>
            Default value = -0.4f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TurnOffProb">
            <summary>
            Weighted probability that turn will be off. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.Turn2VelProb">
            <summary>
            Weighted probability of turning towards velocity. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TurnAwayProb">
            <summary>
            Weighted probability of turning away from headLook target. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TurnLeftProb">
            <summary>
            Weighted probability of turning left. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TurnRightProb">
            <summary>
            Weighted probability of turning right. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.Turn2TargetProb">
            <summary>
            Weighted probability of turning towards headLook target. This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.AngVelMultiplier">
            <summary>
            Somersault, twist, sideSomersault) multiplier of the angular velocity  for arms out (lean2) (somersault, twist, sideSomersault).
            </summary>
            <remarks>
            Default value = Vector3(4.0f, 1.0f, 4.0f).
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.AngVelThreshold">
            <summary>
            Somersault, twist, sideSomersault) threshold above which angVel is used for arms out (lean2) Unless drunk - DO NOT EXCEED 7.0 for each component.
            </summary>
            <remarks>
            Default value = Vector3(1.2f, 3.0f, 1.2f).
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BraceDistance">
            <summary>
            If -ve then do not brace.  distance from object at which to raise hands to brace 0.5 good if newBrace=true - otherwise 0.65.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TargetPredictionTime">
            <summary>
            Time expected to get arms up from idle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.ReachAbsorbtionTime">
            <summary>
            Larger values and he absorbs the impact more.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BraceStiffness">
            <summary>
            Stiffness of character. Catch_fall stiffness scales with this too, with its defaults at this values default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.MinBraceTime">
            <summary>
            Minimum bracing time so the character doesn't look twitchy.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.TimeToBackwardsBrace">
            <summary>
            Time before arm brace kicks in when hit from behind.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HandsDelayMin">
            <summary>
            If bracing with 2 hands delay one hand by at least this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.HandsDelayMax">
            <summary>
            If bracing with 2 hands delay one hand by at most this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.BraceOffset">
            <summary>
            BraceTarget is global headLookPos plus braceOffset m in the up direction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.MoveRadius">
            <summary>
            If -ve don't move away from pusher unless moveWhenBracing is true and braceDistance  GT  0.0f.  if the pusher is closer than moveRadius then move away from it.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.MoveAmount">
            <summary>
            Amount of leanForce applied away from pusher.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyBalanceHelper.MoveWhenBracing">
            <summary>
            Only move away from pusher when bracing against pusher.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BodyFoetalHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BodyFoetalHelper for sending a BodyFoetal <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BodyFoetal <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.Stiffness">
            <summary>
            The stiffness of the body determines how fast the character moves into the position, and how well that they hold it.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.DampingFactor">
            <summary>
            Sets damping value for the character joints.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.Asymmetry">
            <summary>
            A value between 0-1 that controls how asymmetric the results are by varying stiffness across the body.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.RandomSeed">
            <summary>
            Random seed used to generate asymmetry values.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.BackTwist">
            <summary>
            Amount of random back twist to add.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyFoetalHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BodyRollUpHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BodyRollUpHelper for sending a BodyRollUp <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BodyRollUp <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.Stiffness">
            <summary>
            Stiffness of whole body.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.UseArmToSlowDown">
            <summary>
            The degree to which the character will try to stop a barrel roll with his arms.
            </summary>
            <remarks>
            Default value = 1.3f.
            Min value = -2.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.ArmReachAmount">
            <summary>
            The likeliness of the character reaching for the ground with its arms.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.LegPush">
            <summary>
            Used to keep rolling down slope, 1 is full (kicks legs out when pointing upwards).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.AsymmetricalLegs">
            <summary>
            0 is no leg asymmetry in 'foetal' position.  greater than 0 a asymmetricalLegs-rand(30%), added/minus each joint of the legs in radians.  Random number changes about once every roll.  0.4 gives a lot of asymmetry.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -2.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.NoRollTimeBeforeSuccess">
            <summary>
            Time that roll velocity has to be lower than rollVelForSuccess, before success message is sent.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.RollVelForSuccess">
            <summary>
            Lower threshold for roll velocity at which success message can be sent.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.RollVelLinearContribution">
            <summary>
            Contribution of linear COM velocity to roll Velocity (if 0, roll velocity equal to COM angular velocity).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.VelocityScale">
            <summary>
            Scales perceived body velocity.  The higher this value gets, the more quickly the velocity measure saturates, resulting in a tighter roll at slower speeds. (NB: Set to 1 to match earlier behavior).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.VelocityOffset">
            <summary>
            Offsets perceived body velocity.  Increase to create larger "dead zone" around zero velocity where character will be less rolled. (NB: Reset to 0 to match earlier behavior).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyRollUpHelper.ApplyMinMaxFriction">
            <summary>
            Controls whether or not behavior enforces min/max friction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BodyWritheHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BodyWritheHelper for sending a BodyWrithe <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BodyWrithe <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ArmStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BackStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.LegStiffness">
            <summary>
            The stiffness of the character will determine how 'determined' a writhe this is - high values will make him thrash about wildly.
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ArmDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BackDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.LegDamping">
            <summary>
            Damping amount, less is underdamped.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ArmPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BackPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.LegPeriod">
            <summary>
            Controls how fast the writhe is executed, smaller values make faster motions.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ArmAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BackAmplitude">
            <summary>
            Scales the amount of writhe. 0 = no writhe.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.LegAmplitude">
            <summary>
            Scales the amount of writhe. 0 = no writhe.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ElbowAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.KneeAmplitude">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.RollOverFlag">
            <summary>
            Flag to set trying to rollOver.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BlendArms">
            <summary>
            Blend the writhe arms with the current desired arms (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BlendBack">
            <summary>
            Blend the writhe spine and neck with the current desired (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.BlendLegs">
            <summary>
            Blend the writhe legs with the current desired legs (0=don't apply any writhe, 1=only writhe).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ApplyStiffness">
            <summary>
            Use writhe stiffnesses if true. If false don't set any stiffnesses.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.OnFire">
            <summary>
            Extra shoulderBlend. Rolling:one way only, maxRollOverTime, rollOverRadius, doesn't reduce arm stiffness to help rolling. No shoulder twist.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ShoulderLean1">
            <summary>
            Blend writhe shoulder desired lean1 with this angle in RAD. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.ShoulderLean2">
            <summary>
            Blend writhe shoulder desired lean2 with this angle in RAD. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.Lean1BlendFactor">
            <summary>
            Shoulder desired lean1 with shoulderLean1 angle blend factor. Set it to 0 to use original shoulder withe desired lean1 angle for shoulders. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.Lean2BlendFactor">
            <summary>
            Shoulder desired lean2 with shoulderLean2 angle blend factor. Set it to 0 to use original shoulder withe desired lean2 angle for shoulders. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.RollTorqueScale">
            <summary>
            Scale rolling torque that is applied to character spine.
            </summary>
            <remarks>
            Default value = 150.0f.
            Min value = 0.0f.
            Max value = 300.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.MaxRollOverTime">
            <summary>
            Rolling torque is ramped down over time. At this time in seconds torque value converges to zero. Use this parameter to restrict time the character is rolling. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BodyWritheHelper.RollOverRadius">
            <summary>
            Rolling torque is ramped down with distance measured from position where character hit the ground and started rolling. At this distance in meters torque value converges to zero. Use this parameter to restrict distance the character travels due to rolling. Note that onFire has to be set to true for this parameter to take any effect.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.BraceForImpactHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BraceForImpactHelper for sending a BraceForImpact <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the BraceForImpact <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.BraceDistance">
            <summary>
            Distance from object at which to raise hands to brace 0.5 good if newBrace=true - otherwise 0.65.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.TargetPredictionTime">
            <summary>
            Time epected to get arms up from idle.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.ReachAbsorbtionTime">
            <summary>
            Larger values and he absorbs the impact more.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.InstanceIndex">
            <summary>
            LevelIndex of object to brace.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.BodyStiffness">
            <summary>
            Stiffness of character. Catch_fall stiffness scales with this too, with its defaults at this values default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GrabDontLetGo">
            <summary>
            Once a constraint is made, keep reaching with whatever hand is allowed.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GrabStrength">
            <summary>
            Strength in hands for grabbing (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = 40.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GrabDistance">
            <summary>
            Relative distance at which the grab starts.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GrabReachAngle">
            <summary>
            Angle from front at which the grab activates. If the point is outside this angle from front will not try to grab.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.2f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GrabHoldTimer">
            <summary>
            Amount of time, in seconds, before grab automatically bails.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MaxGrabCarVelocity">
            <summary>
            Don't try to grab a car moving above this speed mmmmtodo make this the relative velocity of car to character?.
            </summary>
            <remarks>
            Default value = 95.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.LegStiffness">
            <summary>
            Balancer leg stiffness mmmmtodo remove this parameter and use configureBalance?.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.TimeToBackwardsBrace">
            <summary>
            Time before arm brace kicks in when hit from behind.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.Look">
            <summary>
            Position to look at, e.g. the driver.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.Pos">
            <summary>
            Location of the front part of the object to brace against. This should be the center of where his hands should meet the object.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MinBraceTime">
            <summary>
            Minimum bracing time so the character doesn't look twitchy.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.HandsDelayMin">
            <summary>
            If bracing with 2 hands delay one hand by at least this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.HandsDelayMax">
            <summary>
            If bracing with 2 hands delay one hand by at most this amount of time to introduce some asymmetry.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MoveAway">
            <summary>
            Move away from the car (if in reaching zone).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MoveAwayAmount">
            <summary>
            ForceLean away amount (-ve is lean towards).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MoveAwayLean">
            <summary>
            Lean away amount (-ve is lean towards).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.MoveSideways">
            <summary>
            Amount of sideways movement if at the front or back of the car to add to the move away from car.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.BbArms">
            <summary>
            Use bodyBalance arms for the default (non bracing) behavior if bodyBalance is active.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.NewBrace">
            <summary>
            Use the new brace prediction code.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.BraceOnImpact">
            <summary>
            If true then if a shin or thigh is in contact with the car then brace. NB: newBrace must be true.  For those situations where the car has pushed the ped backwards (at the same speed as the car) before the behavior has been started and so doesn't predict an impact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.Roll2Velocity">
            <summary>
            When rollDownStairs is running use roll2Velocity to control the helper torques (this only attempts to roll to the chaarcter's velocity not some default linear velocity mag.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.RollType">
            <summary>
            0 = original/roll off/stay on car:  Roll with character velocity, 1 = //Gentle: roll off/stay on car = use relative velocity of character to car to roll against, 2 = //roll over car:  Roll against character velocity.  i.e. roll against any velocity picked up by hitting car, 3 = //Gentle: roll over car:  use relative velocity of character to car to roll with.
            </summary>
            <remarks>
            Default value = 3.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.SnapImpacts">
            <summary>
            Exaggerate impacts using snap.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.SnapImpact">
            <summary>
            Exaggeration amount of the initial impact (legs).  +ve fold with car impact (as if pushed at hips in the car velocity direction).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = 7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.SnapBonnet">
            <summary>
            Exaggeration amount of the secondary (torso) impact with bonnet. +ve fold with car impact (as if pushed at hips by the impact normal).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = -7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.SnapFloor">
            <summary>
            Exaggeration amount of the impact with the floor after falling off of car +ve fold with floor impact (as if pushed at hips in the impact normal direction).  -ve fold away from car impact.
            </summary>
            <remarks>
            Default value = 7.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.DampVel">
            <summary>
            Damp out excessive spin and upward velocity when on car.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.DampSpin">
            <summary>
            Amount to damp spinning by (cartwheeling and somersaulting).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.DampUpVel">
            <summary>
            Amount to damp upward velocity by to limit the amount of air above the car the character can get.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 40.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.DampSpinThresh">
            <summary>
            Angular velocity above which we start damping.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.DampUpVelThresh">
            <summary>
            Upward velocity above which we start damping.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsHelp">
            <summary>
            Enhance a glancing spin with the side of the car by modulating body friction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsEndMin">
            <summary>
            ID for glancing spin. Min depth to be considered from either end (front/rear) of a car (-ve is inside the car area).
            </summary>
            <remarks>
            Default value = -0.1f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsSideMin">
            <summary>
            ID for glancing spin. Min depth to be considered on the side of a car (-ve is inside the car area).
            </summary>
            <remarks>
            Default value = -0.2f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsSideMax">
            <summary>
            ID for glancing spin. Max depth to be considered on the side of a car (+ve is outside the car area).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -10.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsUpness">
            <summary>
            ID for glancing spin. Character has to be more upright than this value for it to be considered on the side of a car. Fully upright = 1, upsideDown = -1.  Max Angle from upright is acos(gsUpness).
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsCarVelMin">
            <summary>
            ID for glancing spin. Minimum car velocity.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsScale1Foot">
            <summary>
            Apply gsFricScale1 to the foot if colliding with car.  (Otherwise foot friction - with the ground - is determined by gsFricScale2 if it is in gsFricMask2).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsFricScale1">
            <summary>
            Glancing spin help. Friction scale applied when to the side of the car.  e.g. make the character spin more by upping the friction against the car.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsFricMask1">
            <summary>
            Glancing spin help. Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation). Note gsFricMask1 and gsFricMask2 are made independent by the code so you can have fb for gsFricMask1 but gsFricScale1 will not be applied to any body parts in gsFricMask2.
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsFricScale2">
            <summary>
            Glancing spin help. Friction scale applied when to the side of the car.  e.g. make the character spin more by lowering the feet friction. You could also lower the wrist friction here to stop the car pulling along the hands i.e. gsFricMask2 = la|uw.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BraceForImpactHelper.GsFricMask2">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see notes for explanation). Note gsFricMask1 and gsFricMask2 are made independent by the code so you can have fb for gsFricMask1 but gsFricScale1 will not be applied to any body parts in gsFricMask2.
            </summary>
            <remarks>
            Default value = la.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.BuoyancyHelper">
            <summary>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.BuoyancyHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the BuoyancyHelper for sending a Buoyancy <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Buoyancy <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Simple buoyancy model.  No character movement just fluid forces/torques added to parts.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.SurfacePoint">
            <summary>
            Arbitrary point on surface of water.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.SurfaceNormal">
            <summary>
            Normal to surface of water.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.Buoyancy">
            <summary>
            Buoyancy multiplier.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.ChestBuoyancy">
            <summary>
            Buoyancy multiplier for spine2/3. Helps character float upright.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.Damping">
            <summary>
            Damping for submerged parts.
            </summary>
            <remarks>
            Default value = 40.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.Righting">
            <summary>
            Use righting torque to being character face-up in water?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.RightingStrength">
            <summary>
            Strength of righting torque.
            </summary>
            <remarks>
            Default value = 25.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.BuoyancyHelper.RightingTime">
            <summary>
            How long to wait after chest hits water to begin righting torque.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.CatchFallHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the CatchFallHelper for sending a CatchFall <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the CatchFall <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.TorsoStiffness">
            <summary>
            Stiffness of torso.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.LegsStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 6.0f.
            Min value = 4.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.ArmsStiffness">
            <summary>
            Stiffness of arms.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.BackwardsMinArmOffset">
            <summary>
            0 will prop arms up near his shoulders. -0.3 will place hands nearer his behind.
            </summary>
            <remarks>
            Default value = -0.3f.
            Min value = -1.0f.
            Max value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.ForwardMaxArmOffset">
            <summary>
            0 will point arms down with angled body, 0.45 will point arms forward a bit to catch nearer the head.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.ZAxisSpinReduction">
            <summary>
            Tries to reduce the spin around the Z axis. Scale 0 - 1.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.ExtraSit">
            <summary>
            Scale extra-sit value 0..1. Setting to 0 helps with arched-back issues.  Set to 1 for a more alive-looking finish.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.UseHeadLook">
            <summary>
            Toggle to use the head look in this behavior.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.CatchFallHelper.Mask">
            <summary>
            Two character body-masking value, bitwise joint mask or bitwise logic string of two character body-masking value  (see Active Pose notes for possible values).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ElectrocuteHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ElectrocuteHelper for sending a Electrocute <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Electrocute <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.StunMag">
            <summary>
            The magnitude of the reaction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.InitialMult">
            <summary>
            InitialMult*stunMag = The magnitude of the 1st snap reaction (other multipliers are applied after this).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.LargeMult">
            <summary>
            LargeMult*stunMag = The magnitude of a random large snap reaction (other multipliers are applied after this).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.LargeMinTime">
            <summary>
            Min time to next large random snap (about 14 snaps with stunInterval = 0.07s).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.LargeMaxTime">
            <summary>
            Max time to next large random snap (about 28 snaps with stunInterval = 0.07s).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.MovingMult">
            <summary>
            MovingMult*stunMag = The magnitude of the reaction if moving(comVelMag) faster than movingThresh.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.BalancingMult">
            <summary>
            BalancingMult*stunMag = The magnitude of the reaction if balancing = (not lying on the floor/ not upper body not collided) and not airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.AirborneMult">
            <summary>
            AirborneMult*stunMag = The magnitude of the reaction if airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.MovingThresh">
            <summary>
            If moving(comVelMag) faster than movingThresh then mvingMult applied to stunMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.StunInterval">
            <summary>
            Direction flips every stunInterval.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.DirectionRandomness">
            <summary>
            The character vibrates in a prescribed way - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.LeftArm">
            <summary>
            Vibrate the leftArm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.RightArm">
            <summary>
            Vibrate the rightArm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.LeftLeg">
            <summary>
            Vibrate the leftLeg.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.RightLeg">
            <summary>
            Vibrate the rightLeg.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.Spine">
            <summary>
            Vibrate the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.Neck">
            <summary>
            Vibrate the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.PhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.ApplyStiffness">
            <summary>
            Let electrocute apply a (higher generally) stiffness to the character whilst being vibrated.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.UseTorques">
            <summary>
            Use torques to make vibration otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ElectrocuteHelper.HipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.FallOverWallHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the FallOverWallHelper for sending a FallOverWall <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the FallOverWall <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.BodyStiffness">
            <summary>
            Stiffness of the body, roll up stiffness scales with this and defaults at this default value.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.Damping">
            <summary>
            Damping in the effectors.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MagOfForce">
            <summary>
            Magnitude of the falloverWall helper force.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MaxDistanceFromPelToHitPoint">
            <summary>
            The maximum distance away from the pelvis that hit points will be registered.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MaxForceDist">
            <summary>
            Maximum distance between hitPoint and body part at which forces are applied to part.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.StepExclusionZone">
            <summary>
            Specifies extent of area in front of the wall in which balancer won't try to take another step.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MinLegHeight">
            <summary>
            Minimum height of pelvis above feet at which fallOverWall is attempted.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.BodyTwist">
            <summary>
            Amount of twist to apply to the spine as the character tries to fling himself over the wall, provides more of a believable roll but increases the amount of lateral space the character needs to successfully flip.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MaxTwist">
            <summary>
            Max angle the character can twist before twsit helper torques are turned off.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.FallOverWallEndA">
            <summary>
            One end of the wall to try to fall over.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.FallOverWallEndB">
            <summary>
            One end of the wall over which we are trying to fall over.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.ForceAngleAbort">
            <summary>
            The angle abort threshold.
            </summary>
            <remarks>
            Default value = -0.2f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.ForceTimeOut">
            <summary>
            The force time out.
            </summary>
            <remarks>
            Default value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MoveArms">
            <summary>
            Lift the arms up if true.  Do nothing with the arms if false (eg when using catchfall arms or brace etc).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MoveLegs">
            <summary>
            Move the legs if true.  Do nothing with the legs if false (eg when using dynamicBalancer etc).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.BendSpine">
            <summary>
            Bend spine to help falloverwall if true.  Do nothing with the spine if false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.AngleDirWithWallNormal">
            <summary>
            Maximum angle in degrees (between the direction of the velocity of the COM and the wall normal) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = 180.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.LeaningAngleThreshold">
            <summary>
            Maximum angle in degrees (between the vertical vector and a vector from pelvis to lower neck) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = 180.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MaxAngVel">
            <summary>
            If the angular velocity is higher than maxAngVel, the torques and forces are not applied.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -1.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.AdaptForcesToLowWall">
            <summary>
            Will reduce the magnitude of the forces applied to the character to help him to fall over wall.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MaxWallHeight">
            <summary>
            Maximum height (from the lowest foot) to start to apply forces and torques to fall over the wall.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.DistanceToSendSuccessMessage">
            <summary>
            Minimum distance between the pelvis and the wall to send the success message. If negative doesn't take this parameter into account when sending feedback.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.RollingBackThr">
            <summary>
            Value of the angular velocity about the wallEgde above which the character is considered as rolling backwards i.e. goes in to fow_RollingBack state.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.RollingPotential">
            <summary>
            On impact with the wall if the rollingPotential(calculated from the characters linear velocity w.r.t the wall) is greater than this value the character will try to go over the wall otherwise it won't try (fow_Aborted).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.UseArmIK">
            <summary>
            Try to reach the wallEdge. To configure the IK : use limitAngleBack, limitAngleFront and limitAngleTotallyBack.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.ReachDistanceFromHitPoint">
            <summary>
            Distance from predicted hitpoint where each hands will try to reach the wall.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.MinReachDistanceFromHitPoint">
            <summary>
            Minimal distance from predicted hitpoint where each hands will try to reach the wall. Used if the hand target is outside the wall Edge.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.FallOverWallHelper.AngleTotallyBack">
            <summary>
            Max angle in degrees (between 1.the vector between two hips and 2. WallEdge) to try to reach the wall just behind his pelvis with his arms when the character is back to the wall.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.GrabHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the GrabHelper for sending a Grab <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Grab <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.UseLeft">
            <summary>
            Flag to toggle use of left hand.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.UseRight">
            <summary>
            Flag to toggle the use of the Right hand.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.DropWeaponIfNecessary">
            <summary>
            If hasn't grabbed when weapon carrying hand is close to target, grab anyway.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.DropWeaponDistance">
            <summary>
            Distance below which a weapon carrying hand will request weapon to be dropped.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.GrabStrength">
            <summary>
            Strength in hands for grabbing (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.StickyHands">
            <summary>
            Strength of cheat force on hands to pull towards target and stick to target ("cleverHandIK" strength).
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.TurnToTarget">
            <summary>
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.TurnType.ToTarget"/>.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.GrabHoldMaxTimer">
            <summary>
            Amount of time, in seconds, before grab automatically bails.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.PullUpTime">
            <summary>
            Time to reach the full pullup strength.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.PullUpStrengthRight">
            <summary>
            Strength to pull up with the right arm. 0 = no pull up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.PullUpStrengthLeft">
            <summary>
            Strength to pull up with the left arm. 0 = no pull up.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.Pos1">
            <summary>
            Grab pos1, right hand if not using line or surface grab.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.Pos2">
            <summary>
            Grab pos2, left hand if not using line or surface grab.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.Pos3">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.Pos4">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.NormalR">
            <summary>
            Normal for the right grab point.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.NormalL">
            <summary>
            Normal for the left grab point.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.NormalR2">
            <summary>
            Normal for the 2nd right grab point (if pointsX4grab=true).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.NormalL2">
            <summary>
            Normal for the 3rd left grab point (if pointsX4grab=true).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.HandsCollide">
            <summary>
            Hand collisions on when grabbing (false turns off hand collisions making grab more stable esp. To grab points slightly inside geometry).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.JustBrace">
            <summary>
            Flag to toggle between grabbing and bracing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.UseLineGrab">
            <summary>
            Use the line grab, Grab along the line (x-x2).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.PointsX4grab">
            <summary>
            Use 2 point.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.FromEA">
            <summary>
            Use 2 point.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.SurfaceGrab">
            <summary>
            Toggle surface grab on. Requires pos1,pos2,pos3 and pos4 to be specified.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.InstanceIndex">
            <summary>
            LevelIndex of instance to grab (-1 = world coordinates).
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.InstancePartIndex">
            <summary>
            BoundIndex of part on instance to grab (0 = just use instance coordinates).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.DontLetGo">
            <summary>
            Once a constraint is made, keep reaching with whatever hand is allowed - no matter what the angle/distance and whether or not the constraint has broken due to constraintForce  GT  grabStrength.  mmmtodo this is a badly named parameter.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.BodyStiffness">
            <summary>
            Stiffness of upper body. Scales the arm grab such that the armStiffness is default when this is at default value.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.ReachAngle">
            <summary>
            Angle from front at which the grab activates. If the point is outside this angle from front will not try to grab.
            </summary>
            <remarks>
            Default value = 2.8f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.OneSideReachAngle">
            <summary>
            Angle at which we will only reach with one hand.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.GrabDistance">
            <summary>
            Relative distance at which the grab starts.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.Move2Radius">
            <summary>
            Relative distance (additional to grabDistance - doesn't try to move inside grabDistance)at which the grab tries to use the balancer to move to the grab point.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 14.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.ArmStiffness">
            <summary>
            Stiffness of the arm.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.MaxReachDistance">
            <summary>
            Distance to reach out towards the grab point.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.OrientationConstraintScale">
            <summary>
            Scale torque used to rotate hands to face normals.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.MaxWristAngle">
            <summary>
            When we are grabbing the max angle the wrist ccan be at before we break the grab.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 3.2f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.UseHeadLookToTarget">
            <summary>
            If true, the character will look at targetForHeadLook after a hand grabs until the end of the behavior. (Before grabbing it looks at the grab target).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.LookAtGrab">
            <summary>
            If true, the character will look at the grab.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.GrabHelper.TargetForHeadLook">
            <summary>
            Only used if useHeadLookToTarget is true, the target in world space to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HeadLookHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HeadLookHelper for sending a HeadLook <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HeadLook <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.Damping">
            <summary>
            Damping of the muscles.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.Stiffness">
            <summary>
            Stiffness of the muscles.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.InstanceIndex">
            <summary>
            LevelIndex of object to be looked at. Vel parameters are ignored if this is non -1.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.Vel">
            <summary>
            The velocity of the point being looked at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -100.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.Pos">
            <summary>
            The point being looked at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.AlwaysLook">
            <summary>
            Flag to force always to look.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.EyesHorizontal">
            <summary>
            Keep the eyes horizontal.  Use true for impact with cars.  Use false if you want better look at target accuracy when the character is on the floor or leaned over alot.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.AlwaysEyesHorizontal">
            <summary>
            Keep the eyes horizontal.  Use true for impact with cars.  Use false if you want better look at target accuracy when the character is on the floor or leaned over (when not leaned over the eyes are still kept horizontal if eyesHorizontal=true ) alot.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.KeepHeadAwayFromGround">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HeadLookHelper.TwistSpine">
            <summary>
            Allow head look to twist spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.HighFallHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the HighFallHelper for sending a HighFall <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the HighFall <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.BodyStiffness">
            <summary>
            Stiffness of body. Value feeds through to bodyBalance (synced with defaults), to armsWindmill (14 for this value at default ), legs pedal, head look and roll down stairs directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Bodydamping">
            <summary>
            The damping of the joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Catchfalltime">
            <summary>
            The length of time before the impact that the character transitions to the landing.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.CrashOrLandCutOff">
            <summary>
            0.52angle is 0.868 dot//A threshold for deciding how far away from upright the character needs to be before bailing out (going into a foetal) instead of trying to land (keeping stretched out).  NB: never does bailout if ignorWorldCollisions true.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.PdStrength">
            <summary>
            Strength of the controller to keep the character at angle aimAngleBase from vertical.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.PdDamping">
            <summary>
            Damping multiplier of the controller to keep the character at angle aimAngleBase from vertical.  The actual damping is pdDamping*pdStrength*constant*angVel.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.ArmAngSpeed">
            <summary>
            Arm circling speed in armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.ArmAmplitude">
            <summary>
            In armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.ArmPhase">
            <summary>
            In armWindMillAdaptive 3.1 opposite for stuntman.
            1.0 old default. 0.0 in phase.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.ArmBendElbows">
            <summary>
            In armWindMillAdaptive bend the elbows as a function of armAngle.
            For stunt man true otherwise false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LegRadius">
            <summary>
            Radius of legs on pedal.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LegAngSpeed">
            <summary>
            In pedal.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LegAsymmetry">
            <summary>
            0.0 for stuntman.  Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Arms2LegsPhase">
            <summary>
            Phase angle between the arms and legs circling angle.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 6.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Arms2LegsSync">
            <summary>
            Syncs the arms angle to what the leg angle is.
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            All speed/direction parameters of armswindmill are overwritten if = <see cref="F:GTA.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            If <see cref="F:GTA.NaturalMotion.Synchroisation.SyncedAtStart"/> and you want synced arms/legs then armAngSpeed=legAngSpeed, legAsymmetry = 0.0 (to stop randomizations of the leg cicle speed).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.ArmsUp">
            <summary>
            Where to put the arms when preparing to land.
            Approx 1 = above head, 0 = head height, -1 = down.
            LT -2.0 use catchFall arms, LT -3.0 use prepare for landing pose if Agent is due to land vertically, feet first.
            </summary>
            <remarks>
            Default value = -3.1f.
            Min value = -4.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.OrientateBodyToFallDirection">
            <summary>
            Toggle to orientate to fall direction.
            i.e. orientate so that the character faces the horizontal velocity direction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.OrientateTwist">
            <summary>
            If false don't worry about the twist angle of the character when orientating the character.
            If false this allows the twist axis of the character to be free (You can get a nice twisting highFall like the one in dieHard 4 when the car goes into the helicopter).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.OrientateMax">
            <summary>
            DEVEL parameter - suggest you don't edit it.
            Maximum torque the orientation controller can apply.
            If 0 then no helper torques will be used.
            300 will orientate the character softly for all but extreme angles away from aimAngleBase.
            If abs (current -aimAngleBase) is getting near 3.0 then this can be reduced to give a softer feel.
            </summary>
            <remarks>
            Default value = 300.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.AlanRickman">
            <summary>
            If true then orientate the character to face the point from where it started falling.
            High fall like the one in "Die Hard" with Alan Rickman.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.FowardRoll">
            <summary>
            Try to execute a forward Roll on landing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.UseZeroPose_withFowardRoll">
            <summary>
            Blend to a zero pose when forward roll is attempted.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.AimAngleBase">
            <summary>
            Angle from vertical the pdController is driving to (positive = forwards).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.FowardVelRotation">
            <summary>
            Scale to add/subtract from aimAngle based on forward speed (Internal).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.FootVelCompScale">
            <summary>
            Scale to change to amount of vel that is added to the foot ik from the velocity (Internal).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.SideD">
            <summary>
            Side offset for the feet during prepareForLanding. +ve = right.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.FowardOffsetOfLegIK">
            <summary>
            Forward offset for the feet during prepareForLanding.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LegL">
            <summary>
            Leg Length for ik (Internal)//unused.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.CatchFallCutOff">
            <summary>
            0.5angle is 0.878 dot. Cutoff to go to the catchFall ( internal) //mmmtodo do like crashOrLandCutOff.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LegStrength">
            <summary>
            Strength of the legs at landing.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Balance">
            <summary>
            If true have enough strength to balance.  If false not enough strength in legs to balance (even though bodyBlance called).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.IgnorWorldCollisions">
            <summary>
            Never go into bailout (foetal).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.AdaptiveCircling">
            <summary>
            Stunt man type fall.
            Arm and legs circling direction controlled by angmom and orientation.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.Hula">
            <summary>
            With stunt man type fall.
            Hula reaction if can't see floor and not rotating fast.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.MaxSpeedForRecoverableFall">
            <summary>
            Character needs to be moving less than this speed to consider fall as a recoverable one.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.MinSpeedForBrace">
            <summary>
            Character needs to be moving at least this fast horizontally to start bracing for impact if there is an object along its trajectory.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.HighFallHelper.LandingNormal">
            <summary>
            Ray-cast normal doted with up direction has to be greater than this number to consider object flat enough to land on it.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.IncomingTransformsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the IncomingTransformsHelper for sending a IncomingTransforms <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the IncomingTransforms <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="T:GTA.NaturalMotion.InjuredOnGroundHelper">
            <summary>
            InjuredOnGround.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.InjuredOnGroundHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the InjuredOnGroundHelper for sending a InjuredOnGround <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the InjuredOnGround <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            InjuredOnGround.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.NumInjuries">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury1Component">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury2Component">
            <summary>
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury1LocalPosition">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury2LocalPosition">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury1LocalNormal">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.Injury2LocalNormal">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.AttackerPos">
            <summary>
            </summary>
            <remarks>
            Default value = Vector3(1.0f, 0.0f, 0.0f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.DontReachWithLeft">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.DontReachWithRight">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.InjuredOnGroundHelper.StrongRollForce">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.CarriedHelper">
            <summary>
            Carried.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.CarriedHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the CarriedHelper for sending a Carried <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Carried <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Carried.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.DangleHelper">
            <summary>
            Dangle.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.DangleHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the DangleHelper for sending a Dangle <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Dangle <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Dangle.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.DangleHelper.DoGrab">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.DangleHelper.GrabFrequency">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.OnFireHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the OnFireHelper for sending a OnFire <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the OnFire <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.StaggerTime">
            <summary>
            Max time for stumbling around before falling to ground.
            </summary>
            <remarks>
            Default value = 2.5f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.StaggerLeanRate">
            <summary>
            How quickly the character leans hips when staggering.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.StumbleMaxLeanBack">
            <summary>
            Max the character leans hips back when staggering.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.StumbleMaxLeanForward">
            <summary>
            Max the character leans hips forwards when staggering.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.ArmsWindmillWritheBlend">
            <summary>
            Blend armsWindmill with the bodyWrithe arms when character is upright.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.SpineStumbleWritheBlend">
            <summary>
            Blend spine stumble with the bodyWrithe spine when character is upright.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.LegsStumbleWritheBlend">
            <summary>
            Blend legs stumble with the bodyWrithe legs when character is upright.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.ArmsPoseWritheBlend">
            <summary>
            Blend the bodyWrithe arms with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.SpinePoseWritheBlend">
            <summary>
            Blend the bodyWrithe back with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.LegsPoseWritheBlend">
            <summary>
            Blend the bodyWrithe legs with the current desired pose from on fire behavior when character is on the floor.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.RollOverFlag">
            <summary>
            Flag to set bodyWrithe trying to rollOver.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.RollTorqueScale">
            <summary>
            Scale rolling torque that is applied to character spine by bodyWrithe. Torque magnitude is calculated with the following formula: m_rollOverDirection*rollOverPhase*rollTorqueScale.
            </summary>
            <remarks>
            Default value = 25.0f.
            Min value = 0.0f.
            Max value = 300.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.PredictTime">
            <summary>
            Character pose depends on character facing direction that is evaluated from its COMTM orientation.
            Set this value to 0 to use no orientation prediction i.e. current character COMTM orientation will be used to determine character facing direction and finally the pose bodyWrithe is blending to.
            Set this value to  GT  0 to predict character COMTM orientation this amount of time in seconds to the future.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.MaxRollOverTime">
            <summary>
            Rolling torque is ramped down over time. At this time in seconds torque value converges to zero. Use this parameter to restrict time the character is rolling.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 60.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.OnFireHelper.RollOverRadius">
            <summary>
            Rolling torque is ramped down with distance measured from position where character hit the ground and started rolling. At this distance in meters torque value converges to zero. Use this parameter to restrict distance the character travels due to rolling.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.PedalLegsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the PedalLegsHelper for sending a PedalLegs <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the PedalLegs <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.PedalLeftLeg">
            <summary>
            Pedal with this leg or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.PedalRightLeg">
            <summary>
            Pedal with this leg or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.BackPedal">
            <summary>
            Pedal forwards or backwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.Radius">
            <summary>
            Base radius of pedal action.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.AngularSpeed">
            <summary>
            Rate of pedaling. If adaptivePedal4Dragging is true then the legsAngularSpeed calculated to match the linear speed of the character can have a maximum value of angularSpeed (this max used to be hard coded to 13.0).
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.LegStiffness">
            <summary>
            Stiffness of legs.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.PedalOffset">
            <summary>
            Move the center of the pedal for the left leg up by this amount, the right leg down by this amount.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.RandomSeed">
            <summary>
            Random seed used to generate speed changes.
            </summary>
            <remarks>
            Default value = 100.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.SpeedAsymmetry">
            <summary>
            Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.AdaptivePedal4Dragging">
            <summary>
            Will pedal in the direction of travel (if backPedal = false, against travel if backPedal = true) and with an angular velocity relative to speed upto a maximum of 13(rads/sec).  Use when being dragged by a car.  Overrides angularSpeed.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.AngSpeedMultiplier4Dragging">
            <summary>
            NewAngularSpeed = Clamp(angSpeedMultiplier4Dragging * linear_speed/pedalRadius, 0.0, angularSpeed).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.RadiusVariance">
            <summary>
            0-1 value used to add variance to the radius value while pedalling, to desynchonize the legs' movement and provide some variety.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.LegAngleVariance">
            <summary>
            0-1 value used to vary the angle of the legs from the hips during the pedal.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.CentreSideways">
            <summary>
            Move the center of the pedal for both legs sideways (+ve = right).  NB: not applied to hula.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.CentreForwards">
            <summary>
            Move the center of the pedal for both legs forward (or backward -ve).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.CentreUp">
            <summary>
            Move the center of the pedal for both legs up (or down -ve).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.Ellipse">
            <summary>
            Turn the circle into an ellipse.  Ellipse has horizontal radius a and vertical radius b.  If ellipse is +ve then a=radius*ellipse and b=radius.  If ellipse is -ve then a=radius and b = radius*ellipse.  0.0 = vertical line of length 2*radius, 0.0:1.0 circle squashed horizontally (vertical radius = radius), 1.0=circle.  -0.001 = horizontal line of length 2*radius, -0.0:-1.0 circle squashed vertically (horizontal radius = radius), -1.0 = circle.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.DragReduction">
            <summary>
            How much to account for the target moving through space rather than being static.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.Spread">
            <summary>
            Spread legs.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PedalLegsHelper.Hula">
            <summary>
            If true circle the legs in a hula motion.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.PointArmHelper">
            <summary>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to override body parts: Arms (useLeftArm, useRightArm).
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.PointArmHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the PointArmHelper for sending a PointArm <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the PointArm <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            BEHAVIOURS REFERENCED: AnimPose - allows animPose to override body parts: Arms (useLeftArm, useRightArm).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.TargetLeft">
            <summary>
            Point to point to (in world space).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.TwistLeft">
            <summary>
            Twist of the arm around point direction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmStraightnessLeft">
            <summary>
            Values less than 1 can give the arm a more bent look.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.UseLeftArm">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmStiffnessLeft">
            <summary>
            Stiffness of arm.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmDampingLeft">
            <summary>
            Damping value for arm used to point.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.InstanceIndexLeft">
            <summary>
            Level index of thing to point at, or -1 for none. if -1, target is specified in world space, otherwise it is an offset from the object specified by this index.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.PointSwingLimitLeft">
            <summary>
            Swing limit.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.UseZeroPoseWhenNotPointingLeft">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.TargetRight">
            <summary>
            Point to point to (in world space).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.TwistRight">
            <summary>
            Twist of the arm around point direction.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmStraightnessRight">
            <summary>
            Values less than 1 can give the arm a more bent look.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.UseRightArm">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmStiffnessRight">
            <summary>
            Stiffness of arm.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.ArmDampingRight">
            <summary>
            Damping value for arm used to point.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.InstanceIndexRight">
            <summary>
            Level index of thing to point at, or -1 for none. if -1, target is specified in world space, otherwise it is an offset from the object specified by this index.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.PointSwingLimitRight">
            <summary>
            Swing limit.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointArmHelper.UseZeroPoseWhenNotPointingRight">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.PointGunHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the PointGunHelper for sending a PointGun <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the PointGun <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.EnableRight">
            <summary>
            Allow right hand to point/support?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.EnableLeft">
            <summary>
            Allow right hand to point/support?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.LeftHandTarget">
            <summary>
            Target for the left Hand.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.LeftHandTargetIndex">
            <summary>
            Index of the object that the left hand target is specified in, -1 is world space.
            </summary>
            <remarks>
            Default value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RightHandTarget">
            <summary>
            Target for the right Hand.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RightHandTargetIndex">
            <summary>
            Index of the object that the right hand target is specified in, -1 is world space.
            </summary>
            <remarks>
            Default value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.LeadTarget">
            <summary>
            NB: Only Applied to single handed weapons (some more work is required to have this tech on two handed weapons). Amount to lead target based on target velocity relative to the chest.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ArmStiffness">
            <summary>
            Stiffness of the arm.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 2.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ArmStiffnessDetSupport">
            <summary>
            Stiffness of the arm on pointing arm when a support arm is detached from a two-handed weapon.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 2.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ArmDamping">
            <summary>
            Damping.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.GravityOpposition">
            <summary>
            Amount of gravity opposition on pointing arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.GravOppDetachedSupport">
            <summary>
            Amount of gravity opposition on pointing arm when a support arm is detached from a two-handed weapon.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.MassMultDetachedSupport">
            <summary>
            Amount of mass of weapon taken into account by gravity opposition on pointing arm when a support arm is detached from a two-handed weapon.  The lower the value the more the character doesn't know about the weapon mass and therefore is more affected by it.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.AllowShotLooseness">
            <summary>
            Allow shot to set a lower arm muscleStiffness than pointGun normally would.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ClavicleBlend">
            <summary>
            How much of blend should come from incoming transforms 0(all IK) .. 1(all ITMs)   For pointing arms only.  (Support arm uses the IK solution as is for clavicles).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ElbowAttitude">
            <summary>
            Controls arm twist. (except in pistolIK).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.SupportConstraint">
            <summary>
            Type of constraint between the support hand and gun.  0=no constraint, 1=hard distance constraint, 2=Force based constraint, 3=hard spherical constraint.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ConstraintMinDistance">
            <summary>
            For supportConstraint = 1: Support hand constraint distance will be slowly reduced until it hits this value.  This is for stability and also allows the pointing arm to lead a little.  Don't set lower than NM_MIN_STABLE_DISTANCECONSTRAINT_DISTANCE 0.001f.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 0.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.MakeConstraintDistance">
            <summary>
            For supportConstraint = 1:  Minimum distance within which support hand constraint will be made.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ReduceConstraintLengthVel">
            <summary>
            For supportConstraint = 1:  Velocity at which to reduce the support hand constraint length.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.BreakingStrength">
            <summary>
            For supportConstraint = 1: strength of the supporting hands constraint (kg m/s), -1 to ignore/disable.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.BrokenSupportTime">
            <summary>
            Once constraint is broken then do not try to reconnect/support for this amount of time.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.BrokenToSideProb">
            <summary>
            Probability that the when a constraint is broken that during brokenSupportTime a side pose will be selected.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ConnectAfter">
            <summary>
            If gunArm has been controlled by other behaviors for this time when it could have been pointing but couldn't due to pointing only allowed if connected, change gunArm pose to something that could connect for connectFor seconds.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ConnectFor">
            <summary>
            Time to try to reconnect for.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.OneHandedPointing">
            <summary>
            0 = don't allow, 1= allow for kPistol(two handed pistol) only, 2 = allow for kRifle only, 3 = allow for kPistol and kRifle. Allow one handed pointing - no constraint if cant be supported .  If not allowed then gunHand does not try to point at target if it cannot be supported - the constraint will be controlled by always support.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.AlwaysSupport">
            <summary>
            Support a non pointing gunHand i.e. if in zero pose (constrain as well  if constraint possible).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.PoseUnusedGunArm">
            <summary>
            Apply neutral pose when a gun arm isn't in use.  NB: at the moment Rifle hand is always controlled by pointGun.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.PoseUnusedSupportArm">
            <summary>
            Apply neutral pose when a support arm isn't in use.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.PoseUnusedOtherArm">
            <summary>
            Apply neutral pose to the non-gun arm (otherwise it is always under the control of other behaviors or not set). If the non-gun hand is a supporting hand it is not controlled by this parameter but by poseUnusedSupportArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.MaxAngleAcross">
            <summary>
            Max aiming angle(deg) sideways across body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.MaxAngleAway">
            <summary>
            Max aiming angle(deg) sideways away from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FallingLimits">
            <summary>
            0= don't apply limits.  1=apply the limits below only when the character is falling.  2 =  always apply these limits (instead of applying maxAngleAcross and maxAngleAway which only limits the horizontal angle but implicity limits the updown (the limit shape is a vertical hinge).
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.AcrossLimit">
            <summary>
            Max aiming angle(deg) sideways across body midline measured from chest forward that the character will try to point.  i.e. for rightHanded gun this is the angle left of the midline.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.AwayLimit">
            <summary>
            Max aiming angle(deg) sideways away from body midline measured from chest forward that the character will try to point.  i.e. for rightHanded gun this is the angle right of the midline.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UpLimit">
            <summary>
            Max aiming angle(deg) upwards from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.DownLimit">
            <summary>
            Max aiming angle(deg) downwards from body midline measured from chest forward that the character will try to point.
            </summary>
            <remarks>
            Default value = 45.0f.
            Min value = 0.0f.
            Max value = 180.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RifleFall">
            <summary>
            Pose the rifle hand to reduce complications with collisions. 0 = false, 1 = always when falling, 2 = when falling except if falling backwards.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FallingSupport">
            <summary>
            Allow supporting of a rifle(or two handed pistol) when falling. 0 = false, 1 = support if allowed, 2 = support until constraint not active (don't allow support to restart), 3 = support until constraint not effective (support hand to support distance must be less than 0.15 - don't allow support to restart).
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FallingTypeSupport">
            <summary>
            What is considered a fall by fallingSupport). Apply fallingSupport 0=never(will support if allowed), 1 = falling, 2 = falling except if falling backwards, 3 = falling and collided, 4 = falling and collided except if falling backwards, 5 = falling except if falling backwards until collided.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 5.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.PistolNeutralType">
            <summary>
            0 = byFace, 1=acrossFront, 2=bySide.  NB: bySide is not connectible so be careful if combined with kPistol and oneHandedPointing = 0 or 2.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.NeutralPoint4Pistols">
            <summary>
            NOT IMPLEMENTED YET KEEP=false - use pointing for neutral targets in pistol modes.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.NeutralPoint4Rifle">
            <summary>
            Use pointing for neutral targets in rifle mode.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.CheckNeutralPoint">
            <summary>
            Check the neutral pointing is pointable, if it isn't then choose a neutral pose instead.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.Point2Side">
            <summary>
            Side, up, back) side is left for left arm, right for right arm mmmmtodo.
            </summary>
            <remarks>
            Default value = Vector3(5.0f, -5.0f, -2.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.Add2WeaponDistSide">
            <summary>
            Add to weaponDistance for point2Side neutral pointing (to straighten the arm).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.Point2Connect">
            <summary>
            Side, up, back) side is left for left arm, right for rght arm mmmmtodo.
            </summary>
            <remarks>
            Default value = Vector3(-1.0f, -0.9f, -0.2f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.Add2WeaponDistConnect">
            <summary>
            Add to weaponDistance for point2Connect neutral pointing (to straighten the arm).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UsePistolIK">
            <summary>
            Enable new ik for pistol pointing.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UseSpineTwist">
            <summary>
            Use spine twist to orient chest?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UseTurnToTarget">
            <summary>
            Turn balancer to help gun point at target.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UseHeadLook">
            <summary>
            Use head look to drive head?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ErrorThreshold">
            <summary>
            Angular difference between pointing direction and target direction above which feedback will be generated.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FireWeaponRelaxTime">
            <summary>
            Duration of arms relax following firing weapon.  NB:This is clamped (0,5) in pointGun.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FireWeaponRelaxAmount">
            <summary>
            Relax multiplier following firing weapon. Recovers over relaxTime.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.FireWeaponRelaxDistance">
            <summary>
            Range of motion for ik-based recoil.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.UseIncomingTransforms">
            <summary>
            Use the incoming transforms to inform the pointGun of the primaryWeaponDistance, poleVector for the arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.MeasureParentOffset">
            <summary>
            If useIncomingTransforms = true and measureParentOffset=true then measure the Pointing-from offset from parent effector, using itms - this should point the barrel of the gun to the target.  This is added to the rightHandParentOffset. NB NOT used if rightHandParentEffector LT 0.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.LeftHandParentOffset">
            <summary>
            Pointing-from offset from parent effector, expressed in spine3's frame, x = back/forward, y = right/left, z = up/down.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.LeftHandParentEffector">
            <summary>
            1 = Use leftShoulder. Effector from which the left hand pointing originates. Ie, point from this part to the target. -1 causes default offset for active weapon mode to be applied.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RightHandParentOffset">
            <summary>
            Pointing-from offset from parent effector, expressed in spine3's frame, x = back/forward, y = right/left, z = up/down. This is added to the measured one if useIncomingTransforms=true and measureParentOffset=true.  NB NOT used if rightHandParentEffector LT 0.  Pistol(0,0,0) Rifle(0.0032, 0.0, -0.0).
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RightHandParentEffector">
            <summary>
            1 = Use rightShoulder.. Effector from which the right hand pointing originates. Ie, point from this part to the target. -1 causes default offset for active weapon mode to be applied.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.PrimaryHandWeaponDistance">
            <summary>
            Distance from the shoulder to hold the weapon. If -1 and useIncomingTransforms then weaponDistance is read from ITMs. WeaponDistance=primaryHandWeaponDistance clamped [0.2f:m_maxArmReach=0.65] if useIncomingTransforms = false. pistol 0.60383, rifle 0.336.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.ConstrainRifle">
            <summary>
            Use hard constraint to keep rifle stock against shoulder?.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.RifleConstraintMinDistance">
            <summary>
            Rifle constraint distance. Deliberately kept large to create a flat constraint surface where rifle meets the shoulder.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.DisableArmCollisions">
            <summary>
            Disable collisions between right hand/forearm and the torso/legs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunHelper.DisableRifleCollisions">
            <summary>
            Disable collisions between right hand/forearm and spine3/spine2 if in rifle mode.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.PointGunExtraHelper">
            <summary>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.PointGunExtraHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the PointGunExtraHelper for sending a PointGunExtra <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the PointGunExtra <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Seldom set parameters for pointGun - just to keep number of parameters in any message less than or equal to 64.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.ConstraintStrength">
            <summary>
            For supportConstraint = 2: force constraint strength of the supporting hands - it gets shaky at about 4.0.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.ConstraintThresh">
            <summary>
            For supportConstraint = 2:  Like makeConstraintDistance. Force starts acting when the hands are  LT  3.0*thresh apart but is maximum strength  LT  thresh. For comparison: 0.1 is used for reachForWound in shot, 0.25 is used in grab.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.WeaponMask">
            <summary>
            Currently unused - no intoWorldTest. RAGE bit mask to exclude weapons from ray probe - currently defaults to MP3 weapon flag.
            </summary>
            <remarks>
            Default value = 1024.
            Min value = 0.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.TimeWarpActive">
            <summary>
            Is timeWarpActive enabled?.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.TimeWarpStrengthScale">
            <summary>
            Scale for arm and helper strength when timewarp is enabled. 1 = normal compensation.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.OriStiff">
            <summary>
            Hand stabilization controller stiffness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.OriDamp">
            <summary>
            Hand stabilization controller damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.PosStiff">
            <summary>
            Hand stabilization controller stiffness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.PointGunExtraHelper.PosDamp">
            <summary>
            Hand stabilization controller damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.RollDownStairsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the RollDownStairsHelper for sending a RollDownStairs <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the RollDownStairs <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.Stiffness">
            <summary>
            Effector Stiffness. Value feeds through to rollUp directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.Damping">
            <summary>
            Effector  Damping.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.Forcemag">
            <summary>
            Helper force strength.  Do not go above 1 for a rollDownStairs/roll along ground reaction.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.M_useArmToSlowDown">
            <summary>
            The degree to which the character will try to stop a barrel roll with his arms.
            </summary>
            <remarks>
            Default value = -1.9f.
            Min value = -3.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.UseZeroPose">
            <summary>
            Blends between a zeroPose and the Rollup, Faster the character is rotating the less the zeroPose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.SpinWhenInAir">
            <summary>
            Applied cheat forces to spin the character when in the air, the forces are 40% of the forces applied when touching the ground.  Be careful little bunny rabbits, the character could spin unnaturally in the air.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.M_armReachAmount">
            <summary>
            How much the character reaches with his arms to brace against the ground.
            </summary>
            <remarks>
            Default value = 1.4f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.M_legPush">
            <summary>
            Amount that the legs push outwards when tumbling.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.TryToAvoidHeadButtingGround">
            <summary>
            Blends between a zeroPose and the Rollup, Faster the character is rotating the less the zeroPose.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ArmReachLength">
            <summary>
            The length that the arm reaches and so how much it straightens.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.CustomRollDir">
            <summary>
            Pass in a custom direction in to have the character try and roll in that direction.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 1.0f).
            Min value = 1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.UseCustomRollDir">
            <summary>
            Pass in true to use the customRollDir parameter.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.StiffnessDecayTarget">
            <summary>
            The target linear velocity used to start the rolling.
            </summary>
            <remarks>
            Default value = 9.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.StiffnessDecayTime">
            <summary>
            Time, in seconds, to decay stiffness down to the stiffnessDecayTarget value (or -1 to disable).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.AsymmetricalLegs">
            <summary>
            0 is no leg asymmetry in 'foetal' position.  greater than 0 a asymmetricalLegs-rand(30%), added/minus each joint of the legs in radians.  Random number changes about once every roll.  0.4 gives a lot of asymmetry.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ZAxisSpinReduction">
            <summary>
            Tries to reduce the spin around the z axis. Scale 0 - 1.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.TargetLinearVelocityDecayTime">
            <summary>
            Time for the targetlinearVelocity to decay to zero.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.TargetLinearVelocity">
            <summary>
            Helper torques are applied to match the spin of the character to the max of targetLinearVelocity and COMVelMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.OnlyApplyHelperForces">
            <summary>
            Don't use rollup if true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.UseVelocityOfObjectBelow">
            <summary>
            Scale applied cheat forces/torques to (zero) if object underneath character has velocity greater than 1.f.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.UseRelativeVelocity">
            <summary>
            UseVelocityOfObjectBelow uses a relative velocity of the character to the object underneath.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ApplyFoetalToLegs">
            <summary>
            If true, use rollup for upper body and a kind of foetal behavior for legs.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MovementLegsInFoetalPosition">
            <summary>
            Only used if applyFoetalToLegs = true : define the variation of angles for the joints of the legs.
            </summary>
            <remarks>
            Default value = 1.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MaxAngVelAroundFrontwardAxis">
            <summary>
            Only used if applyNewRollingCheatingTorques or applyHelPerTorqueToAlign defined to true : maximal angular velocity around frontward axis of the pelvis to apply cheating torques.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = -1.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MinAngVel">
            <summary>
            Only used if applyNewRollingCheatingTorques or applyHelPerTorqueToAlign defined to true : minimal angular velocity of the roll to apply cheating torques.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ApplyNewRollingCheatingTorques">
            <summary>
            If true will use the new way to apply cheating torques (like in fallOverWall), otherwise will use the old way.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MaxAngVel">
            <summary>
            Only used if applyNewRollingCheatingTorques defined to true : maximal angular velocity of the roll to apply cheating torque.
            </summary>
            <remarks>
            Default value = 5.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MagOfTorqueToRoll">
            <summary>
            Only used if applyNewRollingCheatingTorques defined to true : magnitude of the torque to roll down the stairs.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 500.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ApplyHelPerTorqueToAlign">
            <summary>
            Apply torque to align the body orthogonally to the direction of the roll.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.DelayToAlignBody">
            <summary>
            Only used if applyHelPerTorqueToAlign defined to true : delay to start to apply torques.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.MagOfTorqueToAlign">
            <summary>
            Only used if applyHelPerTorqueToAlign defined to true : magnitude of the torque to align orthogonally the body.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 500.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.AirborneReduction">
            <summary>
            Ordinarily keep at 0.85.  Make this lower if you want spinning in the air.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.ApplyMinMaxFriction">
            <summary>
            Pass-through to Roll Up. Controls whether or not behavior enforces min/max friction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.RollDownStairsHelper.LimitSpinReduction">
            <summary>
            Scale zAxisSpinReduction back when rotating end-over-end (somersault) to give the body a chance to align with the axis of rotation.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ShotHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotHelper for sending a Shot <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Shot <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.BodyStiffness">
            <summary>
            Stiffness of body. Feeds through to roll_up.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.SpineDamping">
            <summary>
            Stiffness of body. Feeds through to roll_up.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ArmStiffness">
            <summary>
            Arm stiffness.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialNeckStiffness">
            <summary>
            Initial stiffness of neck after being shot.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 3.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialNeckDamping">
            <summary>
            Intial damping of neck after being shot.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.NeckStiffness">
            <summary>
            Stiffness of neck.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 3.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.NeckDamping">
            <summary>
            Damping of neck.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.KMultOnLoose">
            <summary>
            How much to add to upperbody stiffness dependent on looseness.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.KMult4Legs">
            <summary>
            How much to add to leg stiffnesses dependent on looseness.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.LoosenessAmount">
            <summary>
            How loose the character is made by a newBullet. Between 0 and 1.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.Looseness4Fall">
            <summary>
            How loose the character is made by a newBullet if falling.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.Looseness4Stagger">
            <summary>
            How loose the upperBody of the character is made by a newBullet if staggerFall is running (and not falling).  Note atm the neck ramp values are ignored in staggerFall.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.MinArmsLooseness">
            <summary>
            Minimum looseness to apply to the arms.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.MinLegsLooseness">
            <summary>
            Minimum looseness to apply to the Legs.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.GrabHoldTime">
            <summary>
            How long to hold for before returning to relaxed arm position.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.SpineBlendExagCPain">
            <summary>
            True: spine is blended with zero pose, false: spine is blended with zero pose if not setting exag or cpain.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.SpineBlendZero">
            <summary>
            Spine is always blended with zero pose this much and up to 1 as the character become stationary.  If negative no blend is ever applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.BulletProofVest">
            <summary>
            Looseness applied to spine is different if bulletProofVest is true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AlwaysResetLooseness">
            <summary>
            Looseness always reset on shotNewBullet even if previous looseness ramp still running.  Except for the neck which has it's own ramp.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AlwaysResetNeckLooseness">
            <summary>
            Neck looseness always reset on shotNewBullet even if previous looseness ramp still running.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AngVelScale">
            <summary>
            How much to scale the angular velocity coming in from animation of a part if it is in angVelScaleMask (otherwise scale by 1.0).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AngVelScaleMask">
            <summary>
            Parts to scale the initial angular velocity by angVelScale (otherwize scale by 1.0).
            </summary>
            <remarks>
            Default value = "fb".
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.FlingWidth">
            <summary>
            Width of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.FlingTime">
            <summary>
            Duration of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.TimeBeforeReachForWound">
            <summary>
            Time, in seconds, before the character begins to grab for the wound on the first hit.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ExagDuration">
            <summary>
            Exaggerate bullet duration (at exagMag/exagTwistMag).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ExagMag">
            <summary>
            Exaggerate bullet spine Lean magnitude.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ExagTwistMag">
            <summary>
            Exaggerate bullet spine Twist magnitude.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ExagSmooth2Zero">
            <summary>
            Exaggerate bullet duration ramping to zero after exagDuration.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ExagZeroTime">
            <summary>
            Exaggerate bullet time spent at 0 spine lean/twist after exagDuration + exagSmooth2Zero.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CpainSmooth2Time">
            <summary>
            Conscious pain duration ramping from zero to cpainMag/cpainTwistMag.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CpainDuration">
            <summary>
            Conscious pain duration at cpainMag/cpainTwistMag after cpainSmooth2Time.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CpainMag">
            <summary>
            Conscious pain spine Lean(back/Forward) magnitude (Replaces spinePainMultiplier).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CpainTwistMag">
            <summary>
            Conscious pain spine Twist/Lean2Side magnitude Replaces spinePainTwistMultiplier).
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CpainSmooth2Zero">
            <summary>
            Conscious pain ramping to zero after cpainSmooth2Time + cpainDuration (Replaces spinePainTime).
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.Crouching">
            <summary>
            Is the guy crouching or not.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ChickenArms">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.ReachForWound">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.Fling">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AllowInjuredArm">
            <summary>
            Injured arm code runs if arm hit (turns and steps and bends injured arm).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AllowInjuredLeg">
            <summary>
            When false injured leg is not bent and character does not bend to reach it.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AllowInjuredLowerLegReach">
            <summary>
            When false don't try to reach for injured Lower Legs (shins/feet).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.AllowInjuredThighReach">
            <summary>
            When false don't try to reach for injured Thighs.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.StableHandsAndNeck">
            <summary>
            Additional stability for hands and neck (less loose).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.Melee">
            <summary>
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.FallingReaction">
            <summary>
            0=Rollup, 1=Catchfall, 2=rollDownStairs, 3=smartFall.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.UseExtendedCatchFall">
            <summary>
            Keep the character active instead of relaxing at the end of the catch fall.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialWeaknessZeroDuration">
            <summary>
            Duration for which the character's upper body stays at minimum stiffness (not quite zero).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialWeaknessRampDuration">
            <summary>
            Duration of the ramp to bring the character's upper body stiffness back to normal levels.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialNeckDuration">
            <summary>
            Duration for which the neck stays at intial stiffness/damping.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.InitialNeckRampDuration">
            <summary>
            Duration of the ramp to bring the neck stiffness/damping back to normal levels.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.UseCStrModulation">
            <summary>
            If enabled upper and lower body strength scales with character strength, using the range given by parameters below.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CStrUpperMin">
            <summary>
            Proportions to what the strength would be normally.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CStrUpperMax">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CStrLowerMin">
            <summary>
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.CStrLowerMax">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHelper.DeathTime">
            <summary>
            Time to death (HACK for underwater). If -ve don't ever die.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotNewBulletHelper">
            <summary>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotNewBulletHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotNewBulletHelper for sending a ShotNewBullet <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotNewBullet <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Send new wound information to the shot.  Can cause shot to restart it's performance in part or in whole.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotNewBulletHelper.BodyPart">
            <summary>
            Part ID on the body where the bullet hit.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 21.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotNewBulletHelper.LocalHitPointInfo">
            <summary>
            If true then normal and hitPoint should be supplied in local coordinates of bodyPart.  If false then normal and hitPoint should be supplied in World coordinates.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotNewBulletHelper.Normal">
            <summary>
            Normal coming out of impact point on character.  Can be local or global depending on localHitPointInfo.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, -1.0f).
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotNewBulletHelper.HitPoint">
            <summary>
            Position of impact on character. Can be local or global depending on localHitPointInfo.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotNewBulletHelper.BulletVel">
            <summary>
            Bullet velocity in world coordinates.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            Min value = -2000.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ShotSnapHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotSnapHelper for sending a ShotSnap <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotSnap <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.Snap">
            <summary>
            Add a Snap to shot.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapMag">
            <summary>
            The magnitude of the reaction.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapMovingMult">
            <summary>
            MovingMult*snapMag = The magnitude of the reaction if moving(comVelMag) faster than movingThresh.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapBalancingMult">
            <summary>
            BalancingMult*snapMag = The magnitude of the reaction if balancing = (not lying on the floor/ not upper body not collided) and not airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapAirborneMult">
            <summary>
            AirborneMult*snapMag = The magnitude of the reaction if airborne.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapMovingThresh">
            <summary>
            If moving(comVelMag) faster than movingThresh then mvingMult applied to stunMag.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapDirectionRandomness">
            <summary>
            The character snaps in a prescribed way (decided by bullet direction) - Higher the value the more random this direction is.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapLeftArm">
            <summary>
            Snap the leftArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapRightArm">
            <summary>
            Snap the rightArm.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapLeftLeg">
            <summary>
            Snap the leftLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapRightLeg">
            <summary>
            Snap the rightLeg.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapSpine">
            <summary>
            Snap the spine.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapNeck">
            <summary>
            Snap the neck.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapPhasedLegs">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapHipType">
            <summary>
            Type of hip reaction 0=none, 1=side2side 2=steplike.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapUseBulletDir">
            <summary>
            Legs are either in phase with each other or not.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapHitPart">
            <summary>
            Snap only around the wounded part//mmmmtodo check whether bodyPart doesn't have to be remembered for unSnap.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.UnSnapInterval">
            <summary>
            Interval before applying reverse snap.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.UnSnapRatio">
            <summary>
            The magnitude of the reverse snap.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotSnapHelper.SnapUseTorques">
            <summary>
            Use torques to make the snap otherwise use a change in the parts angular velocity.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotShockSpinHelper">
            <summary>
            Configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotShockSpinHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotShockSpinHelper for sending a ShotShockSpin <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotShockSpin <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shockSpin effect in shot.  Spin/Lift the character using cheat torques/forces.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.AddShockSpin">
            <summary>
            If enabled, add a short 'shock' of torque to the character's spine to exaggerate bullet impact.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.RandomizeShockSpinDirection">
            <summary>
            For use with close-range shotgun blasts, or similar.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.AlwaysAddShockSpin">
            <summary>
            If true, apply the shock spin no matter which body component was hit. Otherwise only apply if the spine or clavicles get hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinMin">
            <summary>
            Minimum amount of torque to add if using shock-spin feature.
            </summary>
            <remarks>
            Default value = 50.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinMax">
            <summary>
            Maximum amount of torque to add if using shock-spin feature.
            </summary>
            <remarks>
            Default value = 90.0f.
            Min value = 0.0f.
            Max value = 1000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinLiftForceMult">
            <summary>
            If greater than 0, apply a force to lift the character up while the torque is applied, trying to produce a dramatic spun/twist shotgun-to-the-chest effect. This is a scale of the torque applied, so 8.0 or so would give a reasonable amount of lift.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinDecayMult">
            <summary>
            Multiplier used when decaying torque spin over time.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinScalePerComponent">
            <summary>
            Torque applied is scaled by this amount across the spine components - spine2 recieving the full amount, then 3 and 1 and finally 0. Each time, this value is used to scale it down. 0.5 means half the torque each time.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinMaxTwistVel">
            <summary>
            Shock spin ends when twist velocity is greater than this value (try 6.0).  If set to -1 does not stop.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 200.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinScaleByLeverArm">
            <summary>
            Shock spin scales by lever arm of bullet i.e. bullet impact point to center line.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinAirMult">
            <summary>
            ShockSpin's torque is multipied by this value when both the character's feet are not in contact.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpin1FootMult">
            <summary>
            ShockSpin's torque is multipied by this value when the one of the character's feet are not in contact.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.ShockSpinFootGripMult">
            <summary>
            ShockSpin scales the torques applied to the feet by footSlipCompensation.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotShockSpinHelper.BracedSideSpinMult">
            <summary>
            If shot on a side with a forward foot and both feet are on the ground and balanced, increase the shockspin to compensate for the balancer naturally resisting spin to that side.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotFallToKneesHelper">
            <summary>
            Configure the fall to knees shot.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotFallToKneesHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotFallToKneesHelper for sending a ShotFallToKnees <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotFallToKnees <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the fall to knees shot.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FallToKnees">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkAlwaysChangeFall">
            <summary>
            Always change fall behavior.  If false only change when falling forward.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkBalanceTime">
            <summary>
            How long the balancer runs for before fallToKnees starts.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkHelperForce">
            <summary>
            Hip helper force magnitude - to help character lean over balance point of line between toes.
            </summary>
            <remarks>
            Default value = 200.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkHelperForceOnSpine">
            <summary>
            Helper force applied to spine3 as well.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkLeanHelp">
            <summary>
            Help balancer lean amount - to help character lean over balance point of line between toes.
            Half of this is also applied as hipLean.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkSpineBend">
            <summary>
            Bend applied to spine when falling from knees. (+ve forward - try -0.1) (only if rds called).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -0.2f.
            Max value = 0.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkStiffSpine">
            <summary>
            Stiffen spine when falling from knees (only if rds called).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkImpactLooseness">
            <summary>
            Looseness (muscleStiffness = 1.01f - m_parameters.ftkImpactLooseness) applied to upperBody on knee impacts.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkImpactLoosenessTime">
            <summary>
            Time that looseness is applied after knee impacts.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkBendRate">
            <summary>
            Rate at which the legs are bent to go from standing to on knees.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkHipBlend">
            <summary>
            Blend from current hip to balancing on knees hip angle.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkLungeProb">
            <summary>
            Probability that a lunge reaction will be allowed.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkKneeSpin">
            <summary>
            When on knees allow some spinning of the character.
            If false then the balancers' footSlipCompensation remains on and tends to keep the character facing the same way as when it was balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkFricMult">
            <summary>
            Multiplier on the reduction of friction for the feet based on angle away from horizontal - helps the character fall to knees quicker.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkHipAngleFall">
            <summary>
            Apply this hip angle when the character starts to fall backwards when on knees.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkPitchForwards">
            <summary>
            Hip pitch applied (+ve forward, -ve backwards) if character is falling forwards on way down to it's knees.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkPitchBackwards">
            <summary>
            Hip pitch applied (+ve forward, -ve backwards) if character is falling backwards on way down to it's knees.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -0.5f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkFallBelowStab">
            <summary>
            Balancer instability below which the character starts to bend legs even if it isn't going to fall on to it's knees (i.e. if going backwards).
            0.3 almost ensures a fall to knees but means the character will keep stepping backward until it slows down enough.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkBalanceAbortThreshold">
            <summary>
            When the character gives up and goes into a fall.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkOnKneesArmType">
            <summary>
            Type of arm response when on knees falling forward 0=useFallArms (from RollDownstairs or catchFall), 1= armsIn, 2=armsOut.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkReleaseReachForWound">
            <summary>
            Release the reachForWound this amount of time after the knees have hit.
            If LT 0.0 then keep reaching for wound regardless of fall/onground state.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkReachForWound">
            <summary>
            True = Keep reaching for wound regardless of fall/onground state.
            false = respect the shotConfigureArms params: reachFalling, reachFallingWithOneHand, reachOnFloor.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkReleasePointGun">
            <summary>
            Override the pointGun when knees hit.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFallToKneesHelper.FtkFailMustCollide">
            <summary>
            The upper body of the character must be colliding and other failure conditions met to fail.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotFromBehindHelper">
            <summary>
            Configure the shot from behind reaction.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotFromBehindHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotFromBehindHelper for sending a ShotFromBehind <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotFromBehind <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shot from behind reaction.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.ShotFromBehind">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbSpineAmount">
            <summary>
            SpineBend.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbNeckAmount">
            <summary>
            Neck Bend.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbHipAmount">
            <summary>
            Hip Pitch.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbKneeAmount">
            <summary>
            Knee bend.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbPeriod">
            <summary>
            ShotFromBehind reaction period after being shot.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbForceBalancePeriod">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbArmsOnset">
            <summary>
            Amount of time before applying spread out arms pose.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbKneesOnset">
            <summary>
            Amount of time before bending knees a bit.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbNoiseGain">
            <summary>
            Controls additional independent randomized bending of left/right elbows.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotFromBehindHelper.SfbIgnoreFail">
            <summary>
            0 = balancer fails as normal,
            1 = ignore backArchedBack and leanedTooFarBack balancer failures,
            2 = ignore backArchedBack balancer failure only,
            3 = ignore leanedTooFarBack balancer failure only.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotInGutsHelper">
            <summary>
            Configure the shot in guts reaction.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotInGutsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotInGutsHelper for sending a ShotInGuts <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotInGuts <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the shot in guts reaction.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.ShotInGuts">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigSpineAmount">
            <summary>
            SpineBend.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigNeckAmount">
            <summary>
            Neck Bend.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigHipAmount">
            <summary>
            Hip Pitch.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigKneeAmount">
            <summary>
            Knee bend.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigPeriod">
            <summary>
            Active time after being shot.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigForceBalancePeriod">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotInGutsHelper.SigKneesOnset">
            <summary>
            Amount of time not taking a step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.ShotHeadLookHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotHeadLookHelper for sending a ShotHeadLook <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotHeadLook <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.UseHeadLook">
            <summary>
            Use head look.
            Default: looks at provided target or if this is zero - looks forward or in velocity direction.
            If reachForWound is enabled, switches between looking at the wound and at the default target.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.HeadLook">
            <summary>
            Position to look at with headlook flag.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.HeadLookAtWoundMinTimer">
            <summary>
            Min time to look at wound.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.HeadLookAtWoundMaxTimer">
            <summary>
            Max time to look at wound.
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.HeadLookAtHeadPosMaxTimer">
            <summary>
            Min time to look headLook or if zero - forward or in velocity direction.
            </summary>
            <remarks>
            Default value = 1.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotHeadLookHelper.HeadLookAtHeadPosMinTimer">
            <summary>
            Max time to look headLook or if zero - forward or in velocity direction.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.ShotConfigureArmsHelper">
            <summary>
            Configure the arm reactions in shot.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.ShotConfigureArmsHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the ShotConfigureArmsHelper for sending a ShotConfigureArms <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the ShotConfigureArms <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Configure the arm reactions in shot.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Brace">
            <summary>
            Blind brace with arms if appropriate.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.PointGun">
            <summary>
            Point gun if appropriate.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.UseArmsWindmill">
            <summary>
            ArmsWindmill if going backwards fast enough.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.ReleaseWound">
            <summary>
            Release wound if going sideways/forward fast enough.
            0 = don't.
            1 = only if bracing.
            2 = any default arm reaction.
            </summary>
            <remarks>
            Default value = 1.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.ReachFalling">
            <summary>
            Reach for wound when falling.
            0 = false,
            1 = true,
            2 = once per shot performance.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.ReachFallingWithOneHand">
            <summary>
            Force character to reach for wound with only one hand when falling or fallen.
            0 = allow two-handed reach,
            1 = left only if two-handed possible,
            2 = right only if two-handed possible,
            3 = one handed but automatic (allows switching of hands).
            </summary>
            <remarks>
            Default value = 3.
            Min value = 0.
            Max value = 3.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.ReachOnFloor">
            <summary>
            ReachForWound when on floor - 0 = false, 1 = true, 2 = once per shot performance.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AlwaysReachTime">
            <summary>
            Inhibit arms brace for this amount of time after reachForWound has begun.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AWSpeedMult">
            <summary>
            For armsWindmill, multiplier on character speed - increase of speed of circling is proportional to character speed (max speed of circliing increase = 1.5). Eg. lowering the value increases the range of velocity that the 0-1.5 is applied over.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AWRadiusMult">
            <summary>
            For armsWindmill, multiplier on character speed - increase of radii is proportional to character speed (max radius increase = 0.45).
            E.g. lowering the value increases the range of velocity that the 0-0.45 is applied over.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AWStiffnessAdd">
            <summary>
            For armsWindmill, added arm stiffness ranges from 0 to AWStiffnessAdd.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.ReachWithOneHand">
            <summary>
            Force character to reach for wound with only one hand.
            0 = allow two-handed reach,
            1 = left only if two-handed possible,
            2 = right only if two-handed possible.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AllowLeftPistolRFW">
            <summary>
            Allow character to reach for wound with left hand if holding a pistol.
            It never will for a rifle.
            If pointGun is running this will only happen if the hand cannot point and pointGun:poseUnusedGunArm = false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.AllowRightPistolRFW">
            <summary>
            Allow character to reach for wound with right hand if holding a pistol.
            It never will for a rifle.
            If pointGun is running this will only happen if the hand cannot point and pointGun:poseUnusedGunArm = false.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.RfwWithPistol">
            <summary>
            Override pointGun and reachForWound if desired if holding a pistol.
            It never will for a rifle.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2">
            <summary>
            Type of reaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2Left">
            <summary>
            Fling the left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2Right">
            <summary>
            Fling the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2OverrideStagger">
            <summary>
            Override stagger arms even if staggerFall:m_upperBodyReaction = true.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2TimeBefore">
            <summary>
            Time after hit that the fling will start (allows for a bit of loose arm movement from bullet impact.snap etc).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2Time">
            <summary>
            Duration of the fling behavior.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2MStiffL">
            <summary>
            Muscle stiffness of the left arm.
            If negative then uses the shots underlying muscle stiffness from controlStiffness (i.e. respects looseness).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2MStiffR">
            <summary>
            Muscle stiffness of the right arm.
            If negative then uses the shots underlying muscle stiffness from controlStiffness (i.e. respects looseness).
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2RelaxTimeL">
            <summary>
            Maximum time before the left arm relaxes in the fling.
            It will relax automatically when the arm has completed it's bent arm fling.
            This is what causes the arm to straighten.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2RelaxTimeR">
            <summary>
            Maximum time before the right arm relaxes in the fling.
            It will relax automatically when the arm has completed it's bent arm fling.
            This is what causes the arm to straighten.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMinL">
            <summary>
            Minimum fling angle for left arm.
            Fling angle is random in the range fling2AngleMin:fling2AngleMax.
            Angle of fling in radians measured from the body horizontal sideways from shoulder.
            Positive is up, 0 shoulder level, negative down.
            </summary>
            <remarks>
            Default value = -1.5f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMaxL">
            <summary>
            Maximum fling angle for left arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMinR">
            <summary>
            Minimum fling angle for right arm.
            </summary>
            <remarks>
            Default value = -1.5f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2AngleMaxR">
            <summary>
            Maximum fling angle for right arm.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.5f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMinL">
            <summary>
            Minimum left arm length.
            Arm length is random in the range fling2LengthMin:fling2LengthMax.
            Arm length maps one to one with elbow angle.
            These values are scaled internally for the female character.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMaxL">
            <summary>
            Maximum left arm length.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMinR">
            <summary>
            Min right arm length.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Fling2LengthMaxR">
            <summary>
            Max right arm length.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.3f.
            Max value = 0.6f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.Bust">
            <summary>
            Has the character got a bust.
            If so then cupBust (move bust reach targets below bust) or bustElbowLift and cupSize (stop upperArm penetrating bust and move bust targets to surface of bust) are implemented.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.BustElbowLift">
            <summary>
            Lift the elbows up this much extra to avoid upper arm penetrating the bust (when target hits spine2 or spine3).
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.CupSize">
            <summary>
            Amount reach target to bust (spine2) will be offset forward by.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.ShotConfigureArmsHelper.CupBust">
            <summary>
            All reach targets above or on the bust will cause a reach below the bust.
            (specifically moves spine3 and spine2 targets to spine1).
            BustElbowLift and cupSize are ignored.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="T:GTA.NaturalMotion.SmartFallHelper">
            <summary>
            Clone of High Fall with a wider range of operating conditions.
            </summary>
        </member>
        <member name="M:GTA.NaturalMotion.SmartFallHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the SmartFallHelper for sending a SmartFall <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the SmartFall <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
            <remarks>
            Clone of High Fall with a wider range of operating conditions.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.BodyStiffness">
            <summary>
            Stiffness of body.
            Value feeds through to bodyBalance (synced with defaults), to armsWindmill (14 for this value at default ), legs pedal, head look and roll down stairs directly.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Bodydamping">
            <summary>
            The damping of the joints.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 3.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Catchfalltime">
            <summary>
            The length of time before the impact that the character transitions to the landing.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.CrashOrLandCutOff">
            <summary>
            0.52angle is 0.868 dot//A threshold for deciding how far away from upright the character needs to be before bailing out (going into a foetal) instead of trying to land (keeping stretched out).
            NB: never does bailout if ignorWorldCollisions true.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.PdStrength">
            <summary>
            Strength of the controller to keep the character at angle aimAngleBase from vertical.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.PdDamping">
            <summary>
            Damping multiplier of the controller to keep the character at angle aimAngleBase from vertical.
            The actual damping is pdDamping*pdStrength*constant*angVel.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ArmAngSpeed">
            <summary>
            Arm circling speed in armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ArmAmplitude">
            <summary>
            In armWindMillAdaptive.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ArmPhase">
            <summary>
            In armWindMillAdaptive 3.1 opposite for stuntman.
            1.0 old default. 0.0 in phase.
            </summary>
            <remarks>
            Default value = 3.1f.
            Min value = 0.0f.
            Max value = 6.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ArmBendElbows">
            <summary>
            In armWindMillAdaptive bend the elbows as a function of armAngle.
            For stunt man true otherwise false.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LegRadius">
            <summary>
            Radius of legs on pedal.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 0.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LegAngSpeed">
            <summary>
            In pedal.
            </summary>
            <remarks>
            Default value = 7.9f.
            Min value = 0.0f.
            Max value = 15.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LegAsymmetry">
            <summary>
            0.0 for stunt man.
            Random offset applied per leg to the angular speed to desynchronize the pedaling - set to 0 to disable, otherwise should be set to less than the angularSpeed value.
            </summary>
            <remarks>
            Default value = 4.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Arms2LegsPhase">
            <summary>
            Phase angle between the arms and legs circling angle.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 6.5f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Arms2LegsSync">
            <summary>
            Syncs the arms angle to what the leg angle is.
            </summary>
            <remarks>
            Default value = <see cref="F:GTA.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            All speed/direction parameters of armswindmill are overwritten if = <see cref="F:GTA.NaturalMotion.Synchroisation.AlwaysSynced"/>.
            If <see cref="F:GTA.NaturalMotion.Synchroisation.SyncedAtStart"/> and you want synced arms/legs then armAngSpeed=legAngSpeed, legAsymmetry = 0.0 (to stop randomizations of the leg cicle speed).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ArmsUp">
            <summary>
            Where to put the arms when preparing to land.
            Approx 1 = above head, 0 = head height, -1 = down.
            LT -2.0 use catchFall arms, LT -3.0 use prepare for landing pose if Agent is due to land vertically, feet first.
            </summary>
            <remarks>
            Default value = -3.1f.
            Min value = -4.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.OrientateBodyToFallDirection">
            <summary>
            Toggle to orientate to fall direction.  i.e. orientate so that the character faces the horizontal velocity direction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.OrientateTwist">
            <summary>
            If false don't worry about the twist angle of the character when orientating the character.
            If false this allows the twist axis of the character to be free (You can get a nice twisting highFall like the one in dieHard 4 when the car goes into the helicopter).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.OrientateMax">
            <summary>
            DEVEL parameter - suggest you don't edit it.  Maximum torque the orientation controller can apply.
            If 0 then no helper torques will be used.
            300 will orientate the character softly for all but extreme angles away from aimAngleBase.
            If abs (current -aimAngleBase) is getting near 3.0 then this can be reduced to give a softer feel.
            </summary>
            <remarks>
            Default value = 300.0f.
            Min value = 0.0f.
            Max value = 2000.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.AlanRickman">
            <summary>
            If true then orientate the character to face the point from where it started falling.
            High fall like the one in "Die Hard" with Alan Rickman.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.FowardRoll">
            <summary>
            Try to execute a forward Roll on landing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.UseZeroPose_withFowardRoll">
            <summary>
            Blend to a zero pose when forward roll is attempted.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.AimAngleBase">
            <summary>
            Angle from vertical the pdController is driving to (positive = forwards).
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -3.1f.
            Max value = 3.1f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.FowardVelRotation">
            <summary>
            Scale to add/subtract from aimAngle based on forward speed (Internal).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.FootVelCompScale">
            <summary>
            Scale to change to amount of vel that is added to the foot ik from the velocity (Internal).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.SideD">
            <summary>
            Sideoffset for the feet during prepareForLanding. +ve = right.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.FowardOffsetOfLegIK">
            <summary>
            Forward offset for the feet during prepareForLanding.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LegL">
            <summary>
            Leg Length for ik (Internal)//unused.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.CatchFallCutOff">
            <summary>
            0.5angle is 0.878 dot. Cutoff to go to the catchFall (internal) //mmmtodo do like crashOrLandCutOff.
            </summary>
            <remarks>
            Default value = 0.9f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LegStrength">
            <summary>
            Strength of the legs at landing.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Balance">
            <summary>
            If true have enough strength to balance.
            If false not enough strength in legs to balance (even though bodyBlance called).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.IgnorWorldCollisions">
            <summary>
            Never go into bailout (foetal).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.AdaptiveCircling">
            <summary>
            Stunt man type fall.  Arm and legs circling direction controlled by angmom and orientation.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Hula">
            <summary>
            With stunt man type fall.  Hula reaction if can't see floor and not rotating fast.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.MaxSpeedForRecoverableFall">
            <summary>
            Character needs to be moving less than this speed to consider fall as a recoverable one.
            </summary>
            <remarks>
            Default value = 15.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.MinSpeedForBrace">
            <summary>
            Character needs to be moving at least this fast horizontally to start bracing for impact if there is an object along its trajectory.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.LandingNormal">
            <summary>
            Ray-cast normal doted with up direction has to be greater than this number to consider object flat enough to land on it.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsForceMag">
            <summary>
            </summary>
            <remarks>
            Default value = 0.8f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsTargetLinVeDecayTime">
            <summary>
            RDS: Time for the targetlinearVelocity to decay to zero.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsTargetLinearVelocity">
            <summary>
            RDS: Helper torques are applied to match the spin of the character to the max of targetLinearVelocity and COMVelMag.
            -1 to use initial character velocity.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 30.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsUseStartingFriction">
            <summary>
            Start Catch Fall/RDS state with specified friction.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsStartingFriction">
            <summary>
            Catch Fall/RDS starting friction.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsStartingFrictionMin">
            <summary>
            Catch Fall/RDS starting friction minimum.
            Catch fall will overwrite based on setFallingReaction.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.RdsForceVelThreshold">
            <summary>
            Velocity threshold under which RDS force mag will be applied.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.InitialState">
            <summary>
            Force initial state (used in vehicle bail out to start SF_CatchFall (6) earlier.
            </summary>
            <remarks>
            Default value = 0.
            Min value = 0.
            Max value = 7.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ChangeExtremityFriction">
            <summary>
            Allow friction changes to be applied to the hands and feet.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.Teeter">
            <summary>
            Set up an immediate teeter in the direction of trave if initial state is SF_Balance.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.TeeterOffset">
            <summary>
            Offset the default Teeter edge in the direction of travel.
            Will need to be tweaked depending on how close to the real edge AI tends to trigger the behavior.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.StopRollingTime">
            <summary>
            Time in seconds before ped should start actively trying to stop rolling.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ReboundScale">
            <summary>
            Scale for rebound assistance.
            0 = off,
            1 = very bouncy,
            2 = jbone crazy.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ReboundMask">
            <summary>
            Part mask to apply rebound assistance.
            </summary>
            <remarks>
            Default value = uk.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.ForceHeadAvoid">
            <summary>
            Force head avoid to be active during Catch Fall even when character is not on the ground.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.CfZAxisSpinReduction">
            <summary>
            Pass-through parameter for Catch Fall spin reduction.  Increase to stop more spin. 0..1.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.SplatWhenStopped">
            <summary>
            Transition to splat state when com vel is below value, regardless of character health or fall velocity.
            Set to zero to disable.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.BlendHeadWhenStopped">
            <summary>
            Blend head to neutral pose com vel approaches zero.
            Linear between zero and value.
            Set to zero to disable.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.SmartFallHelper.SpreadLegs">
            <summary>
            Spread legs amount for pedal during fall.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.StaggerFallHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the StaggerFallHelper for sending a StaggerFall <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the StaggerFall <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.ArmStiffness">
            <summary>
            Stiffness of arms. Catch_fall's stiffness scales with this value, but has default values when this is default.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.ArmDamping">
            <summary>
            Sets damping value for the arms.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.SpineDamping">
            <summary>
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.SpineStiffness">
            <summary>
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.ArmStiffnessStart">
            <summary>
            ArmStiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.ArmDampingStart">
            <summary>
            ArmDamping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.SpineDampingStart">
            <summary>
            SpineDamping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.SpineStiffnessStart">
            <summary>
            SpineStiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TimeAtStartValues">
            <summary>
            Time spent with Start values for arms and spine stiffness and damping i.e. for whiplash effect.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.RampTimeFromStartValues">
            <summary>
            Time spent ramping from Start to end values for arms and spine stiffness and damping i.e. for whiplash effect (occurs after timeAtStartValues).
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.StaggerStepProb">
            <summary>
            Probability per step of time spent in a stagger step.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.StepsTillStartEnd">
            <summary>
            Steps taken before lowerBodyStiffness starts ramping down by perStepReduction1.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TimeStartEnd">
            <summary>
            Time from start of behavior before lowerBodyStiffness starts ramping down for rampTimeToEndValues to endValues.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.RampTimeToEndValues">
            <summary>
            Time spent ramping from lowerBodyStiffness to lowerBodyStiffnessEnd.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LowerBodyStiffness">
            <summary>
            LowerBodyStiffness should be 12.
            </summary>
            <remarks>
            Default value = 13.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LowerBodyStiffnessEnd">
            <summary>
            LowerBodyStiffness at end.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.PredictionTime">
            <summary>
            Amount of time (seconds) into the future that the character tries to step to.
            Bigger values try to recover with fewer, bigger steps.
            Smaller values recover with smaller steps, and generally recover less.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.PerStepReduction1">
            <summary>
            LowerBody stiffness will be reduced every step to make the character fallover.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LeanInDirRate">
            <summary>
            LeanInDirection will be increased from 0 to leanInDirMax linearly at this rate.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LeanInDirMaxF">
            <summary>
            Max of leanInDirection magnitude when going forwards.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LeanInDirMaxB">
            <summary>
            Max of leanInDirection magnitude when going backwards.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LeanHipsMaxF">
            <summary>
            Max of leanInDirectionHips magnitude when going forwards.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.LeanHipsMaxB">
            <summary>
            Max of leanInDirectionHips magnitude when going backwards.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.Lean2multF">
            <summary>
            Lean of spine to side in side velocity direction when going forwards.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.Lean2multB">
            <summary>
            Lean of spine to side in side velocity direction when going backwards.
            </summary>
            <remarks>
            Default value = -2.0f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.PushOffDist">
            <summary>
            Amount stance foot is behind com in the direction of velocity before the leg tries to pushOff to increase momentum.
            Increase to lower the probability of the pushOff making the character bouncy.
            </summary>
            <remarks>
            Default value = 0.2f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.MaxPushoffVel">
            <summary>
            Stance leg will only pushOff to increase momentum if the vertical hip velocity is less than this value. 0.4 seems like a good value.
            The higher it is the less this functionality is applied.
            If it is very low or negative this can stop the pushOff altogether.
            </summary>
            <remarks>
            Default value = 20.0f.
            Min value = -20.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.HipBendMult">
            <summary>
            HipBend scaled with velocity.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.AlwaysBendForwards">
            <summary>
            Bend forwards at the hip (hipBendMult) whether moving backwards or forwards.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.SpineBendMult">
            <summary>
            Spine bend scaled with velocity.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = -10.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing, balancer default is 0.2.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TurnOffProb">
            <summary>
            Weighted probability that turn will be off.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.Turn2TargetProb">
            <summary>
            Weighted probability of turning towards headLook target.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.Turn2VelProb">
            <summary>
            Weighted probability of turning towards velocity.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TurnAwayProb">
            <summary>
            Weighted probability of turning away from headLook target.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TurnLeftProb">
            <summary>
            Weighted probability of turning left.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.TurnRightProb">
            <summary>
            Weighted probability of turning right.
            This is one of six turn type weights.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.UseBodyTurn">
            <summary>
            Enable and provide a positive bodyTurnTimeout and provide a look-at target to make the character turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.StaggerFallHelper.UpperBodyReaction">
            <summary>
            Enable upper body reaction i.e. blindBrace and armswindmill.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.TeeterHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the TeeterHelper for sending a Teeter <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Teeter <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.EdgeLeft">
            <summary>
            Defines the left edge point (left of character facing edge).
            </summary>
            <remarks>
            Default value = Vector3(39.5f, 38.9f, 21.1f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.EdgeRight">
            <summary>
            Defines the right edge point (right of character facing edge).
            </summary>
            <remarks>
            Default value = Vector3(39.5f, 39.9f, 21.1f).
            Min value = 0.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.UseExclusionZone">
            <summary>
            Stop stepping across the line defined by edgeLeft and edgeRight.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.UseHeadLook">
            <summary>
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.CallHighFall">
            <summary>
            Call highFall if fallen over the edge.
            If false just call blended writhe (to go over the top of the fall behavior of the underlying behavior e.g. bodyBalance).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.LeanAway">
            <summary>
            Lean away from the edge based on velocity towards the edge (if closer than 2m from edge).
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.PreTeeterTime">
            <summary>
            Time-to-edge threshold to start pre-teeter (windmilling, etc).
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.LeanAwayTime">
            <summary>
            Time-to-edge threshold to start leaning away from a potential fall.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.LeanAwayScale">
            <summary>
            Scales stay upright lean and hip pitch.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.TeeterHelper.TeeterTime">
            <summary>
            Time-to-edge threshold to start full-on teeter (more aggressive lean, drop-and-twist, etc).
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.UpperBodyFlinchHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the UpperBodyFlinchHelper for sending a UpperBodyFlinch <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the UpperBodyFlinch <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.HandDistanceLeftRight">
            <summary>
            Left-Right distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.HandDistanceFrontBack">
            <summary>
            Front-Back distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.HandDistanceVertical">
            <summary>
            Vertical distance between the hands.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.BodyStiffness">
            <summary>
            Stiffness of body. Value carries over to head look, spine twist.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.BodyDamping">
            <summary>
            Damping value used for upper body.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.BackBendAmount">
            <summary>
            Amount to bend the back during the flinch.
            </summary>
            <remarks>
            Default value = -0.6f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.UseRightArm">
            <summary>
            Toggle to use the right arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.UseLeftArm">
            <summary>
            Toggle to Use the Left arm.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.NoiseScale">
            <summary>
            Amplitude of the perlin noise applied to the arms positions in the flinch to the front part of the behavior.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.NewHit">
            <summary>
            Relaxes the character for 1 frame if set.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.ProtectHeadToggle">
            <summary>
            Always protect head.
            Note if false then character flinches if target is in front, protects head if target is behind.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.DontBraceHead">
            <summary>
            Don't protect head only brace from front. Turned on by bcr.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.ApplyStiffness">
            <summary>
            Turned of by bcr.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.HeadLookAwayFromTarget">
            <summary>
            Look away from target (unless protecting head then look between feet).
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.UseHeadLook">
            <summary>
            Use headlook.
            </summary>
            <remarks>
            Default value = True.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.TurnTowards">
            <summary>
            Ve balancer turn Towards, negative balancer turn Away, 0 balancer won't turn.
            There is a 50% chance that the character will not turn even if this parameter is set to turn.
            </summary>
            <remarks>
            Default value = 1.
            Min value = -2.
            Max value = 2.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.UpperBodyFlinchHelper.Pos">
            <summary>
            Position in world-space of object to flinch from.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="M:GTA.NaturalMotion.YankedHelper.#ctor(GTA.Ped)">
            <summary>
            Creates a new Instance of the YankedHelper for sending a Yanked <see cref="T:GTA.NaturalMotion.Message"/> to a given <see cref="T:GTA.Ped"/>.
            </summary>
            <param name="ped">The <see cref="T:GTA.Ped"/> to send the Yanked <see cref="T:GTA.NaturalMotion.Message"/> to.</param>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.ArmStiffness">
            <summary>
            Stiffness of arms when upright.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.ArmDamping">
            <summary>
            Sets damping value for the arms when upright.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineDamping">
            <summary>
            Spine damping when upright.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineStiffness">
            <summary>
            Spine stiffness when upright.
            </summary>
            <remarks>
            Default value = 10.0f.
            Min value = 6.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.ArmStiffnessStart">
            <summary>
            Arm stiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.ArmDampingStart">
            <summary>
            Arm damping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineDampingStart">
            <summary>
            Spine damping during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineStiffnessStart">
            <summary>
            Spine stiffness during the yanked timescale i.e. timeAtStartValues.
            </summary>
            <remarks>
            Default value = 3.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.TimeAtStartValues">
            <summary>
            Time spent with Start values for arms and spine stiffness and damping i.e. for whiplash effect.
            </summary>
            <remarks>
            Default value = 0.4f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.RampTimeFromStartValues">
            <summary>
            Time spent ramping from Start to end values for arms and spine stiffness and damping i.e. for whiplash effect (occurs after timeAtStartValues).
            </summary>
            <remarks>
            Default value = 0.1f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.StepsTillStartEnd">
            <summary>
            Steps taken before lowerBodyStiffness starts ramping down.
            </summary>
            <remarks>
            Default value = 2.
            Min value = 0.
            Max value = 100.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.TimeStartEnd">
            <summary>
            Time from start of behavior before lowerBodyStiffness starts ramping down by perStepReduction1.
            </summary>
            <remarks>
            Default value = 100.0f.
            Min value = 0.0f.
            Max value = 100.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.RampTimeToEndValues">
            <summary>
            Time spent ramping from lowerBodyStiffness to lowerBodyStiffnessEnd.
            </summary>
            <remarks>
            Default value = 0.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.LowerBodyStiffness">
            <summary>
            LowerBodyStiffness should be 12.
            </summary>
            <remarks>
            Default value = 12.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.LowerBodyStiffnessEnd">
            <summary>
            LowerBodyStiffness at end.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.PerStepReduction">
            <summary>
            LowerBody stiffness will be reduced every step to make the character fallover.
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HipPitchForward">
            <summary>
            Amount to bend forward at the hips (+ve forward, -ve backwards).
            Behavior switches between hipPitchForward and hipPitchBack.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -1.3f.
            Max value = 1.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HipPitchBack">
            <summary>
            Amount to bend backwards at the hips (+ve backwards, -ve forwards).
            Behavior switches between hipPitchForward and hipPitchBack.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = -1.3f.
            Max value = 1.3f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineBend">
            <summary>
            Bend/Twist the spine amount.
            </summary>
            <remarks>
            Default value = 0.7f.
            Min value = 0.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.FootFriction">
            <summary>
            Foot friction when standing/stepping.  0.5 gives a good slide sometimes.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.TurnThresholdMin">
            <summary>
            Min angle at which the turn with toggle to the other direction (actual toggle angle is chosen randomly in range min to max).
            If it is 1 then it will never toggle.
            If negative then no turn is applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.TurnThresholdMax">
            <summary>
            Max angle at which the turn with toggle to the other direction (actual toggle angle is chosen randomly in range min to max).
            If it is 1 then it will never toggle.
            If negative then no turn is applied.
            </summary>
            <remarks>
            Default value = 0.6f.
            Min value = -0.1f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.UseHeadLook">
            <summary>
            Enable and provide a look-at target to make the character's head turn to face it while balancing.
            </summary>
            <remarks>
            Default value = False.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HeadLookPos">
            <summary>
            Position of thing to look at.
            </summary>
            <remarks>
            Default value = Vector3(0.0f, 0.0f, 0.0f).
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HeadLookInstanceIndex">
            <summary>
            Level index of thing to look at.
            </summary>
            <remarks>
            Default value = -1.
            Min value = -1.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HeadLookAtVelProb">
            <summary>
            Probability [0-1] that headLook will be looking in the direction of velocity when stepping.
            </summary>
            <remarks>
            Default value = -1.0f.
            Min value = -1.0f.
            Max value = 1.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.ComVelRDSThresh">
            <summary>
            For handsAndKnees catchfall ONLY: comVel above which rollDownstairs will start.
            </summary>
            <remarks>
            Default value = 2.0f.
            Min value = 0.0f.
            Max value = 20.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HulaPeriod">
            <summary>
            0.25 A complete wiggle will take 4*hulaPeriod.
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.HipAmplitude">
            <summary>
            Amount of hip movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.SpineAmplitude">
            <summary>
            Amount of spine movement.
            </summary>
            <remarks>
            Default value = 1.0f.
            Min value = 0.0f.
            Max value = 4.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.MinRelaxPeriod">
            <summary>
            Wriggle relaxes for a minimum of minRelaxPeriod (if it is negative it is a multiplier on the time previously spent wriggling).
            </summary>
            <remarks>
            Default value = 0.3f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.MaxRelaxPeriod">
            <summary>
            Wriggle relaxes for a maximum of maxRelaxPeriod (if it is negative it is a multiplier on the time previously spent wriggling).
            </summary>
            <remarks>
            Default value = 1.5f.
            Min value = -5.0f.
            Max value = 5.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.RollHelp">
            <summary>
            Amount of cheat torque applied to turn the character over.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundLegStiffness">
            <summary>
            Leg Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundArmStiffness">
            <summary>
            Arm Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 11.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundSpineStiffness">
            <summary>
            Spine Stiffness when on the ground.
            </summary>
            <remarks>
            Default value = 14.0f.
            Min value = 0.0f.
            Max value = 16.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundLegDamping">
            <summary>
            Leg Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundArmDamping">
            <summary>
            Arm Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundSpineDamping">
            <summary>
            Spine Damping when on the ground.
            </summary>
            <remarks>
            Default value = 0.5f.
            Min value = 0.0f.
            Max value = 2.0f.
            </remarks>
        </member>
        <member name="P:GTA.NaturalMotion.YankedHelper.GroundFriction">
            <summary>
            Friction multiplier on body parts when on ground.
            Character can look too slidy with groundFriction = 1.
            Higher values give a more jerky reaction but this seems timestep dependent especially for dragged by the feet.
            </summary>
            <remarks>
            Default value = 8.0f.
            Min value = 0.0f.
            Max value = 10.0f.
            </remarks>
        </member>
        <member name="F:GTA.BlipColor.White">
            <summary>
            The default RGB value of this color is the same as HUD_COLOUR_PURE_WHITE, whose default RGB value is #FFFFFF.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.WhiteNotPure">
            <summary>
            The default RGB value of this color is the same as HUD_COLOUR_WHITE, whose default RGB value is #F0F0F0.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Yellow2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Yellow"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Michael">
            <summary>
            This color is usually #65B4D4 sky blue, which is similar to <see cref="P:System.Drawing.Color.SkyBlue"></see>.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Franklin">
            <summary>
            This color is usually #ABEDAB light green, which is very similar to <see cref="P:System.Drawing.Color.LightGreen"></see>.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Trevor">
            <summary>
            This color is usually #ABEDAB orange, which is very similar to <see cref="P:System.Drawing.Color.SandyBrown"></see>.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Red2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Red"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Red3">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Red"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Yellow3">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Yellow"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue3">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue4">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Green2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Green"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Yellow4">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Yellow"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Yellow5">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Yellow"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.White2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.White"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Yellow6">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Yellow"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue5">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Red4">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Red"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue6">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.BlueDark2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.BlueDark"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.RedDark2">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.RedDark"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipColor.Blue7">
            <summary>
            This color is always the same as <see cref="F:GTA.BlipColor.Blue"></see>, the only difference is color index.
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Standard">
            <summary>
            The default English text for this value is "Destination".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.BigBlip">
            <summary>
            The default English text for this value is "Destination".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PoliceOfficer">
            <summary>The default English text for this value is "Police".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PoliceArea">
            <summary>
            When this value is set, the blip will flash. The default English text for this value is "Objective".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Square">
            <summary>The sprite shape is square and the default English text for this value is "Objective".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Jet">
            <summary>
            The default English text for this value is "Police Plane".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Lift">
            <summary>
            The default English text for this value is "Cable Car".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PoliceOfficer2">
            <summary>
            The default English text for this value is "Police".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PoliceCarDot">
            <summary>
            The default English text for this value is "Police Chase".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.ChatBubble">
            <summary>
            The default English text for this value is "Snitch".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Garage2">
            <summary>
            The default English text for this value is "Criminal Carsteal".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Drugs">
            <summary>
            The default English text for this value is "Criminal Drugs".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Store">
            <summary>
            The default English text for this value is "Criminal Holdups".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Clothes">
            <summary>
            The default English text for this value is "Clothes Store".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Dart">
            <summary>
            The default English text for this value is "Darts".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.DollarSign">
            <summary>
            The default English text for this value is "Devin".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.OffRoadRaceFinish">
            <summary>
            The default English text for this value is "Off Road Racing".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Key">
            <summary>
            The default English text for this value is "Criminal Cuff Keys".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Music">
            <summary>
            The default English text for this value is "Music Venue".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Marijuana">
            <summary>
            The default English text for this value is "Stash".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Link">
            <summary>
            The default English text for this value is "Gang Police Partner".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Castle">
            <summary>
            The default English text for this value is "Property Takeover".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Handcuffs">
            <summary>
            The default English text for this value is "Biker Handcuffs Closed".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PersonalVehicleCar">
            <summary>
            The default English text for this value is "Gang Vehicle".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PersonalVehicleBike">
            <summary>
            The default English text for this value is "Gang Vehicle Bikers".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Hooker">
            <summary>
            The default English text for this value is "Drop Off Hooker".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.GTAOMission">
            <summary>
            The default English text for this value is "UGC Mission".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.GTAOSurvival">
            <summary>
            The default English text for this value is "Horde".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.AmmuNationShootingRange">
            <summary>
            The default English text for this value is "Ammu-Nation with Shooting Range".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.RaceCar">
            <summary>
            The default English text for this value is "Street Race".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.RaceSea">
            <summary>
            The default English text for this value is "Sea Race".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.SafehouseForSale">
            <summary>
            The default English text for this value is "Property For Sale".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Package">
            <summary>
            The default English text for this value is "Gang Attack Package".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Masks">
            <summary>
            The default English text for this value is "Masks Store".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PickupSpawn">
            <summary>
            The default English text for this value is "Spawn Point Pickup".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Rockets">
            <summary>
            The default English text for this value is "Missiles".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.MarinaForSale">
            <summary>
            The default English text for this value is "Dock For Sale".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.RaceBike">
            <summary>
            The default English text for this value is "Bike Race".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.RaceFoot">
            <summary>
            The default English text for this value is "Foot Race".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Crosshair">
            <summary>
            The default English text for this value is "Aim".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Testosterone">
            <summary>
            The default English text for this value is "Raging".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Invisible">
            <summary>
            This blip sprite is invisible and the default English text for this value is "Invisible".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.GTAOPlayerSafehouseDead">
            <summary>
            In GTA Online, when some player is a bounty and is in a safehouse, a blip with this sprite will be attached.
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Plane">
            <summary>
            The sprite is the same as <see cref="F:GTA.BlipSprite.Jet"></see> has, but the default English text for this value is "Jet".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.PlayerNoColor">
            <summary>
            This enum is wrongly named. The sprite doesn't have outline, but you can change the color.
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.GunCar">
            <summary>
            The default English text for this value is "Insurgent".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.King">
            <summary>
            The default English text for this value is "Player King".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Loading">
            <summary>
            The default English text for this value is "Zoned".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Flip">
            <summary>
            The default English text for this value is "Flipped".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Shield">
            <summary>
            The sprite image is a shield, but the default English text for this value is "Beast".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Weed">
            <summary>
            The default English text for this value is "Weed Production".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Cocaine">
            <summary>
            The default English text for this value is "Weed Production".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.IdentityCard">
            <summary>
            The default English text for this value is "Weed Production".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Meth">
            <summary>
            The default English text for this value is "Weed Production".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.DollarBill">
            <summary>
            The default English text for this value is "Weed Production".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Package2">
            <summary>
            The default English text for this value is "Package", whose label text hash is used in Biker Business missions in GTA Online.
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.DrugPackage">
            <summary>
            The default English text for this value is "Drugs Package".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Motorcycle">
            <summary>
            The default English text for this value is "Deadline".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Document">
            <summary>
            The default English text for this value is "Registration Papers".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.SteeringWheel">
            <summary>
            The default English text for this value is "Special Vehicle Race Series".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Cup">
            <summary>
            The default English text for this value is "Challenge Series".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Rocket">
            <summary>
            The default English text for this value is "Homing Rocket".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.WeaponizedTrailer">
            <summary>
            The default English text for this value is "Anti-Aircraft Trailer".
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.LuckyWheel">
            <summary>
            The default English text for this value is "Wheel", but the text can be confusing.
            </summary>
        </member>
        <member name="F:GTA.BlipSprite.Enemy2">
            <summary>
            The default English text for this value is "Enemy".
            </summary>
        </member>
        <member name="F:GTA.VehicleLockStatus.StickPlayerInside">
            <summary>
            Doesn't allow players to exit the vehicle with the exit vehicle key.
            </summary>
        </member>
        <member name="F:GTA.VehicleLockStatus.CanBeBrokenInto">
            <summary>
            Can be broken into the car. If the glass is broken, the value will be set to 1.
            </summary>
        </member>
        <member name="F:GTA.GameVersion.VER_1_0_1737_0_STEAM">
            <summary>
            This value also represents the exe version 1.0.1734.0 for Steam version. 1.0.1737.0 basically works in the same way as 1.0.1734.0 but with bug fixes.
            </summary>
        </member>
        <member name="F:GTA.GameVersion.VER_1_0_1737_0_NOSTEAM">
            <summary>
            This value also represents the exe version 1.0.1734.0 for non-Steam version. 1.0.1737.0 basically works in the same way as 1.0.1734.0 but with bug fixes.
            </summary>
        </member>
        <member name="F:GTA.GameVersion.VER_1_0_2372_0_STEAM">
            <summary>
            This value also represents the exe version 1.0.2372.2 for Steam version. 1.0.2372.2 basically works in the same way as 1.0.2372.0 but with bug fixes.
            </summary>
        </member>
        <member name="F:GTA.GameVersion.VER_1_0_2372_0_NOSTEAM">
            <summary>
            This value also represents the exe version 1.0.2372.2 for non-Steam version. 1.0.2372.2 basically works in the same way as 1.0.2372.0 but with bug fixes.
            </summary>
        </member>
        <member name="F:GTA.Language.Chinese">
            <summary>Traditional Chinese</summary>
        </member>
        <member name="M:GTA.MenuBase.Draw">
            Draws the menu 
        </member>
        <member name="M:GTA.MenuBase.Draw(System.Drawing.Size)">
            Draws the menu with an offset 
        </member>
        <member name="M:GTA.MenuBase.Initialize">
            Called when the menu is first added to the Viewport 
        </member>
        <member name="M:GTA.MenuBase.OnOpen">
            Called when the menu gains or regains focus 
        </member>
        <member name="M:GTA.MenuBase.OnClose">
            Called when the user hits the back button or unfocuses from this menu 
        </member>
        <member name="M:GTA.MenuBase.OnActivate">
            Called when the user hits the activate button 
        </member>
        <member name="M:GTA.MenuBase.OnChangeItem(System.Boolean)">
            Called when the user changes the current element (i.e. left and right) 
        </member>
        <member name="M:GTA.MenuBase.OnChangeSelection(System.Boolean)">
            Called when the user changes what element is selected (i.e. up and down) 
        </member>
        <member name="M:GTA.IMenuItem.Draw">
            Called when the MenuItem should be drawn 
        </member>
        <member name="M:GTA.IMenuItem.Draw(System.Drawing.Size)">
            Called when the MenuItem should be drawn with an offset 
        </member>
        <member name="M:GTA.IMenuItem.Select">
            Called when the user selects this item 
        </member>
        <member name="M:GTA.IMenuItem.Deselect">
            Called when the user deselects this item 
        </member>
        <member name="M:GTA.IMenuItem.Activate">
            Called when the user activates this item (e.g. numpad-5) 
        </member>
        <member name="M:GTA.IMenuItem.Change(System.Boolean)">
            Called when the user changes this item (e.g. numpad-4 and 6) 
        </member>
        <member name="M:GTA.IMenuItem.SetOriginAndSize(System.Drawing.Point,System.Drawing.Size)">
            Called by the Menu to set this item's origin 
        </member>
        <member name="P:GTA.IMenuItem.Parent">
            Set by the parent so that the MenuItem can access its properties 
        </member>
        <member name="P:GTA.MessageBox.OkCancel">
            Use Ok and Cancel instead of Yes and No 
        </member>
        <member name="M:GTA.Viewport.AddMenu(GTA.MenuBase)">
            Add a menu to the stack of active menus and set it as focused 
        </member>
        <member name="M:GTA.Viewport.RemoveMenu(GTA.MenuBase)">
            Remove a menu from the stack of active menus 
        </member>
        <member name="M:GTA.Viewport.PopMenu">
            Remove the active menu from the stack, this will focus the next highest menu 
        </member>
        <member name="M:GTA.Viewport.CloseAllMenus">
            Closes all menus 
        </member>
        <member name="M:GTA.Viewport.Draw">
            Draw all the active UIs 
        </member>
        <member name="M:GTA.Viewport.HandleActivate">
            Handles when the activate button is pressed (e.g. numpad-5) 
        </member>
        <member name="M:GTA.Viewport.HandleBack">
            Handles when the back button is pressed (e.g. numpad-0) 
        </member>
        <member name="M:GTA.Viewport.HandleChangeSelection(System.Boolean)">
            Handles when the user presses the up or down button (e.g. numpad-2 and 8) 
        </member>
        <member name="M:GTA.Viewport.HandleChangeItem(System.Boolean)">
            Handles when the user presses the left or right button (e.g. numpad-4 and 6) 
        </member>
        <member name="P:GTA.Viewport.ActiveMenus">
            Number of active menus 
        </member>
        <member name="P:GTA.Viewport.MenuTransitions">
            Have more than one menu on the screen on the time and transition them 
        </member>
        <member name="P:GTA.Viewport.MenuOffset">
            The offset each menu in the stack has from the one above it 
        </member>
        <member name="P:GTA.Viewport.MenuPosition">
            The top left position of the current menu 
        </member>
    </members>
</doc>
